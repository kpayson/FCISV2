{
    "pipes": [
        {
            "name": "SafeUrlPipe",
            "id": "pipe-SafeUrlPipe-64598a6ad7e24f699ae45481c63d65a5e0186667e8025ff515473cc9387fbef0b906ed097a0c00016d20c31865741bb0bd0cf6f89aa4cf324b4e94d88e26058e",
            "file": "src/app/safe-url.pipe.ts",
            "type": "pipe",
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "ngname": "safeurl",
            "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\r\n\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\n\r\n@Pipe({\r\n    name: 'safeurl'\r\n  })\r\n  \r\n  export class SafeUrlPipe implements PipeTransform {\r\n    constructor(private sanitizer: DomSanitizer) { }\r\n  \r\n    transform(url:string) {\r\n      return this.sanitizer.bypassSecurityTrustResourceUrl(url);\r\n    }\r\n  }\r\n  "
        },
        {
            "name": "SanitizedHtmlPipe",
            "id": "pipe-SanitizedHtmlPipe-273a256e9599f0e82c3389478533ede0e2139bb4594c33f83a6038b51cd2c93d6de91570fca38708253f11391664f61cfc7744502a8f3c2fb9d288bfe5569589",
            "file": "src/app/sanitized-html.pipe.ts",
            "type": "pipe",
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 10,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "ngname": "sanitizedHtml",
            "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\r\n\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\n\r\n@Pipe({\r\n  name: 'sanitizedHtml'\r\n})\r\nexport class SanitizedHtmlPipe implements PipeTransform {\r\n  constructor(private sanitized: DomSanitizer) {}\r\n  transform(value: any): any {\r\n    return this.sanitized.bypassSecurityTrustHtml(value);\r\n  }\r\n}\r\n\r\n"
        }
    ],
    "interfaces": [
        {
            "name": "Attachment",
            "id": "interface-Attachment-e392728a391e307f9d802b84ad7da807cd98e088812896f9583423553b9b2a9d21468594f9105d6054c57eadcac5a1c6dbcd35e0783c2564c1936dd00508f980",
            "file": "src/app/api/models/attachment.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Attachment\r\n{\r\n    storedFileName:string,\r\n    docTitle:string,\r\n    url:string\r\n}\r\nexport interface AttachmentGroup\r\n{\r\n    description:string;\r\n    attachments: Attachment[];\r\n}\r\n",
            "properties": [
                {
                    "name": "docTitle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "storedFileName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "url",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "AttachmentGroup",
            "id": "interface-AttachmentGroup-e392728a391e307f9d802b84ad7da807cd98e088812896f9583423553b9b2a9d21468594f9105d6054c57eadcac5a1c6dbcd35e0783c2564c1936dd00508f980",
            "file": "src/app/api/models/attachment.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Attachment\r\n{\r\n    storedFileName:string,\r\n    docTitle:string,\r\n    url:string\r\n}\r\nexport interface AttachmentGroup\r\n{\r\n    description:string;\r\n    attachments: Attachment[];\r\n}\r\n",
            "properties": [
                {
                    "name": "attachments",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Attachment[]",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "ContactUsMessage",
            "id": "interface-ContactUsMessage-7212cc6f0e622e37437aee5b13091a6c44d658061fd6dcc16b0e9d49d756d5ee70dd03b329ba79611c54a1032c0e85f4693fd9b0bfbd6404537c5e23c84cc5f4",
            "file": "src/app/api/models/contactUsMessage.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface ContactUsMessage{\r\n    fromAddress:string;\r\n    subject:string;\r\n    messageBody:string;\r\n}\r\n",
            "properties": [
                {
                    "name": "fromAddress",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "messageBody",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "subject",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "ErrorLog",
            "id": "interface-ErrorLog-a1723ffb05a23049d20e10c6b24eb4c3874be112b78f9aaebfaeceee837446d28f3824263391340b655151e56e26b7d9dd13bc82959e5cefb467c85b1f04c5dd",
            "file": "src/app/api/models/errorLog.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface ErrorLog {\r\n    errorLogId: number;\r\n    errorMessage?: string;\r\n    errorTrace?: string;\r\n    errorDate?: Date;\r\n}",
            "properties": [
                {
                    "name": "errorDate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "optional": true,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "errorLogId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "errorMessage",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "errorTrace",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 17
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "Facility",
            "id": "interface-Facility-3e3b5cb938a5acf118031b7230af3276a2619bf8bfc725259e5f66245161a7156769aaf3aed132e84f6acf193411eeb9d669d3153db70c81f0e5e364a2064d5a",
            "file": "src/app/api/models/facility.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Facility {\r\n  facilityId: number;\r\n  facilityName: string;\r\n  facilityAbbrName?: string;\r\n  facilityIc?: string;\r\n  facilitySection?: string;\r\n  facilityBuilding?: string;\r\n  facilityLocation?: string;\r\n  description?: string;\r\n  comments: string;\r\n  sortOrder?: number;\r\n  piPath?: string;\r\n  attribute?: string;\r\n  circleid?: string;\r\n  isActive?: boolean;\r\n  facilityRepName?: string;\r\n  facilityFullName?: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "attribute",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "circleid",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "comments",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "facilityAbbrName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "facilityBuilding",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "facilityFullName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "facilityIc",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "facilityId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "facilityLocation",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "facilityName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "facilityRepName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "facilitySection",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "isActive",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "piPath",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "sortOrder",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 11
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "FacilityGsf",
            "id": "interface-FacilityGsf-62b471f369de979423c25b5adebff0af95f81c84e553318752283eb9dba849c9d18e634ac4ce26635dc001b0b36998a23913b24e0d195fb1958d00cc3241d19a",
            "file": "src/app/api/models/gsfChart.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface FacilityGsf {\r\n  facility: string;\r\n  gsf: number;\r\n}\r\n\r\nexport interface GsfGrowth {\r\n  iso7RoomsCount: number;\r\n  iso8RoomsCount: number;\r\n  cncRoomsCount: number;\r\n  iso7RoomsArea: number;\r\n  iso8RoomsArea: number;\r\n  cncRoomsArea: number;\r\n  criticalEnvironmentParametersCount: number;\r\n  goLiveDate: Date;\r\n}\r\n\r\nexport interface ICGsf {\r\n  ic: string;\r\n  gsf: number;\r\n}\r\n",
            "properties": [
                {
                    "name": "facility",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "gsf",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "FacilityTimeSeriesData",
            "id": "interface-FacilityTimeSeriesData-76c68cc294c66cc4dd47198bbb51f5890b9331191bd46f1d670a3c935a7e43caed002c589150456c62a9d1d275ba3151bcafb3c8382a661ce441d71f48e8f5b4",
            "file": "src/app/api/models/timeline.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Facility, Room } from '.';\r\n\r\nexport interface TimeSeriesPoint {\r\n  timestamp: number;\r\n  numeric_value: number;\r\n}\r\n\r\nexport interface LocationTimeSeriesData<T> {\r\n  location: T; //facility or room\r\n  tag: string; // piPath\r\n  points: TimeSeriesPoint[];\r\n}\r\n\r\nexport interface FacilityTimeSeriesData {\r\n  facility: Facility;\r\n  tag: string; // piPath\r\n  points: TimeSeriesPoint[];\r\n}\r\n\r\nexport interface RoomTimeSeriesData {\r\n  room: Room;\r\n  tag: string; // piPath\r\n  points: TimeSeriesPoint[];\r\n}\r\n\r\nexport interface LocationCurrentStatus {\r\n  locationName: string; //facility or room name\r\n  attribute: 'Composite' | 'Temp' | 'Hum' | 'Airx' | 'DP';\r\n  statusPoint: TimeSeriesPoint;\r\n}\r\n\r\nexport interface LocationQuery {\r\n  locationName: string;\r\n  tag: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "facility",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Facility",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "points",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TimeSeriesPoint[]",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "tag",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 16
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "GsfGrowth",
            "id": "interface-GsfGrowth-62b471f369de979423c25b5adebff0af95f81c84e553318752283eb9dba849c9d18e634ac4ce26635dc001b0b36998a23913b24e0d195fb1958d00cc3241d19a",
            "file": "src/app/api/models/gsfChart.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface FacilityGsf {\r\n  facility: string;\r\n  gsf: number;\r\n}\r\n\r\nexport interface GsfGrowth {\r\n  iso7RoomsCount: number;\r\n  iso8RoomsCount: number;\r\n  cncRoomsCount: number;\r\n  iso7RoomsArea: number;\r\n  iso8RoomsArea: number;\r\n  cncRoomsArea: number;\r\n  criticalEnvironmentParametersCount: number;\r\n  goLiveDate: Date;\r\n}\r\n\r\nexport interface ICGsf {\r\n  ic: string;\r\n  gsf: number;\r\n}\r\n",
            "properties": [
                {
                    "name": "cncRoomsArea",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "cncRoomsCount",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "criticalEnvironmentParametersCount",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "goLiveDate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "iso7RoomsArea",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "iso7RoomsCount",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "iso8RoomsArea",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "iso8RoomsCount",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "ICGsf",
            "id": "interface-ICGsf-62b471f369de979423c25b5adebff0af95f81c84e553318752283eb9dba849c9d18e634ac4ce26635dc001b0b36998a23913b24e0d195fb1958d00cc3241d19a",
            "file": "src/app/api/models/gsfChart.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface FacilityGsf {\r\n  facility: string;\r\n  gsf: number;\r\n}\r\n\r\nexport interface GsfGrowth {\r\n  iso7RoomsCount: number;\r\n  iso8RoomsCount: number;\r\n  cncRoomsCount: number;\r\n  iso7RoomsArea: number;\r\n  iso8RoomsArea: number;\r\n  cncRoomsArea: number;\r\n  criticalEnvironmentParametersCount: number;\r\n  goLiveDate: Date;\r\n}\r\n\r\nexport interface ICGsf {\r\n  ic: string;\r\n  gsf: number;\r\n}\r\n",
            "properties": [
                {
                    "name": "gsf",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "ic",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 18
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "LocationCurrentStatus",
            "id": "interface-LocationCurrentStatus-76c68cc294c66cc4dd47198bbb51f5890b9331191bd46f1d670a3c935a7e43caed002c589150456c62a9d1d275ba3151bcafb3c8382a661ce441d71f48e8f5b4",
            "file": "src/app/api/models/timeline.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Facility, Room } from '.';\r\n\r\nexport interface TimeSeriesPoint {\r\n  timestamp: number;\r\n  numeric_value: number;\r\n}\r\n\r\nexport interface LocationTimeSeriesData<T> {\r\n  location: T; //facility or room\r\n  tag: string; // piPath\r\n  points: TimeSeriesPoint[];\r\n}\r\n\r\nexport interface FacilityTimeSeriesData {\r\n  facility: Facility;\r\n  tag: string; // piPath\r\n  points: TimeSeriesPoint[];\r\n}\r\n\r\nexport interface RoomTimeSeriesData {\r\n  room: Room;\r\n  tag: string; // piPath\r\n  points: TimeSeriesPoint[];\r\n}\r\n\r\nexport interface LocationCurrentStatus {\r\n  locationName: string; //facility or room name\r\n  attribute: 'Composite' | 'Temp' | 'Hum' | 'Airx' | 'DP';\r\n  statusPoint: TimeSeriesPoint;\r\n}\r\n\r\nexport interface LocationQuery {\r\n  locationName: string;\r\n  tag: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "attribute",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"Composite\" | \"Temp\" | \"Hum\" | \"Airx\" | \"DP\"",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "locationName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "statusPoint",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TimeSeriesPoint",
                    "optional": false,
                    "description": "",
                    "line": 29
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "LocationQuery",
            "id": "interface-LocationQuery-76c68cc294c66cc4dd47198bbb51f5890b9331191bd46f1d670a3c935a7e43caed002c589150456c62a9d1d275ba3151bcafb3c8382a661ce441d71f48e8f5b4",
            "file": "src/app/api/models/timeline.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Facility, Room } from '.';\r\n\r\nexport interface TimeSeriesPoint {\r\n  timestamp: number;\r\n  numeric_value: number;\r\n}\r\n\r\nexport interface LocationTimeSeriesData<T> {\r\n  location: T; //facility or room\r\n  tag: string; // piPath\r\n  points: TimeSeriesPoint[];\r\n}\r\n\r\nexport interface FacilityTimeSeriesData {\r\n  facility: Facility;\r\n  tag: string; // piPath\r\n  points: TimeSeriesPoint[];\r\n}\r\n\r\nexport interface RoomTimeSeriesData {\r\n  room: Room;\r\n  tag: string; // piPath\r\n  points: TimeSeriesPoint[];\r\n}\r\n\r\nexport interface LocationCurrentStatus {\r\n  locationName: string; //facility or room name\r\n  attribute: 'Composite' | 'Temp' | 'Hum' | 'Airx' | 'DP';\r\n  statusPoint: TimeSeriesPoint;\r\n}\r\n\r\nexport interface LocationQuery {\r\n  locationName: string;\r\n  tag: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "locationName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "tag",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 34
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "LocationTimeSeriesData",
            "id": "interface-LocationTimeSeriesData-76c68cc294c66cc4dd47198bbb51f5890b9331191bd46f1d670a3c935a7e43caed002c589150456c62a9d1d275ba3151bcafb3c8382a661ce441d71f48e8f5b4",
            "file": "src/app/api/models/timeline.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Facility, Room } from '.';\r\n\r\nexport interface TimeSeriesPoint {\r\n  timestamp: number;\r\n  numeric_value: number;\r\n}\r\n\r\nexport interface LocationTimeSeriesData<T> {\r\n  location: T; //facility or room\r\n  tag: string; // piPath\r\n  points: TimeSeriesPoint[];\r\n}\r\n\r\nexport interface FacilityTimeSeriesData {\r\n  facility: Facility;\r\n  tag: string; // piPath\r\n  points: TimeSeriesPoint[];\r\n}\r\n\r\nexport interface RoomTimeSeriesData {\r\n  room: Room;\r\n  tag: string; // piPath\r\n  points: TimeSeriesPoint[];\r\n}\r\n\r\nexport interface LocationCurrentStatus {\r\n  locationName: string; //facility or room name\r\n  attribute: 'Composite' | 'Temp' | 'Hum' | 'Airx' | 'DP';\r\n  statusPoint: TimeSeriesPoint;\r\n}\r\n\r\nexport interface LocationQuery {\r\n  locationName: string;\r\n  tag: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "location",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "T",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "points",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TimeSeriesPoint[]",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "tag",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "PiDataFilter",
            "id": "interface-PiDataFilter-73942ab4d7b0476e3a4847bbfb14cada1cce0e4b3b78892ecc3e5bfc1b110366c5e08abc2d948a561150a69e503608356a8c38bd70c00a4171f2ec0ec0b64651",
            "file": "src/app/apf-portfolio-ic-dashboard/apf-portfolio-ic-dashboard.service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import {\r\n  BehaviorSubject,\r\n  Observable,\r\n  Subject,\r\n  combineLatest,\r\n  distinctUntilChanged,\r\n  filter,\r\n  map,\r\n  mergeMap,\r\n  of,\r\n  zip\r\n} from 'rxjs';\r\nimport {\r\n  LocationCurrentStatus,\r\n  Room,\r\n  SvgMap,\r\n} from 'src/app/api/models';\r\nimport { keyBy, reduce } from 'lodash';\r\n\r\nimport { DataService } from 'src/app/api/data.service';\r\nimport { Injectable } from '@angular/core';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\nexport interface PiDataFilter {\r\n  facility: { repName: string; sectionName: string; value: number };\r\n  status: string;\r\n  startDate: Date;\r\n  endDate: Date;\r\n  interval: number;\r\n}\r\n\r\ninterface TimelineChartDataPoint {\r\n  locationName: string;\r\n  tag: string;\r\n  // statusValue:number,\r\n  chillerStatusLabel: string;\r\n  statusColor: string;\r\n  startDate: Date;\r\n  endDate: Date;\r\n}\r\n\r\nexport interface RoomDisplayField {\r\n  name: string;\r\n  value: string;\r\n  displayType?: string;\r\n}\r\n\r\nexport interface TimelineChartData {\r\n  points: TimelineChartDataPoint[];\r\n  locations: { [name: string]: any };\r\n  locationType: 'room' | 'facility';\r\n}\r\n\r\nexport interface StatusPoint {\r\n  timeStamp: number;\r\n  numeric_value: number;\r\n}\r\n\r\nexport type locationStatusLookup = { [name: string]: string };\r\nexport type roomInfoLookup = { [name: string]: string };\r\nexport type apfLimitsLookup = { [facRoomKey: string]: any };\r\n\r\n@Injectable()\r\nexport class ApfPortfolioIcDashboardService {\r\n  constructor(private dataService: DataService) {\r\n    const defaultStartDate = new Date();\r\n    defaultStartDate.setDate(defaultStartDate.getDate() - 1);\r\n\r\n    const defaultEndDate = new Date();\r\n\r\n    this._piDataFilter$ = new BehaviorSubject<PiDataFilter>({\r\n      facility: { repName: '', sectionName: '', value: 0 },\r\n      status: '',\r\n      startDate: defaultStartDate,\r\n      endDate: defaultEndDate,\r\n      interval: 10\r\n    });\r\n\r\n    this._ic$ = new BehaviorSubject<string>('');\r\n    this._facilityFilterOptions$ = new BehaviorSubject<\r\n      { repName: string; sectionName: string; value: string }[]\r\n    >([]);\r\n    this._svgMap$ = new BehaviorSubject<SvgMap>({\r\n      name: 'apf_facility_all',\r\n      backgroundSvg: '',\r\n      id: 0,\r\n      svgMapPins: [],\r\n      svgMapArrows: [],\r\n      viewbox: '0 0 0 0',\r\n      defs: '',\r\n      facilityId: 0\r\n    });\r\n    this._svgMapBackgroundImageUrl$ = new BehaviorSubject<string>('');\r\n    this._currentStatusValues$ = new BehaviorSubject<LocationCurrentStatus[]>(\r\n      []\r\n    );\r\n    this._parameterValues$ = new BehaviorSubject<Room[]>([]);\r\n    this._timelineChartData$ = new BehaviorSubject<TimelineChartData>({\r\n      points: [],\r\n      locations: {},\r\n      locationType: 'facility'\r\n    });\r\n    this._selectedPin$ = new BehaviorSubject<string>('');\r\n    this._selectedRoomInfo$ = new BehaviorSubject<roomInfoLookup>({});\r\n    this._hoveredPin$ = new BehaviorSubject<string>('');\r\n    this._hoveredTimelineLabel$ = new BehaviorSubject<string>('');\r\n    this._apfLimits$ = new BehaviorSubject<apfLimitsLookup>({});\r\n    this._pinStates = new BehaviorSubject<locationStatusLookup>({});\r\n\r\n    // Set the list of Facilities when the IC changes\r\n    this._ic$\r\n      .pipe(\r\n        filter(Boolean),\r\n        mergeMap((ic: string) => {\r\n          return this.dataService.facilitiesByIC(ic).pipe(\r\n            map((facs) => {\r\n              const facilityOptions = facs.map((fac: any) => {\r\n                const option = {\r\n                  repName: fac.facilityRepName,\r\n                  sectionName: fac.facilitySection,\r\n                  value: fac.facilityId\r\n                };\r\n                return option;\r\n              });\r\n              const all = [\r\n                {\r\n                  repName: `All ${ic.toLocaleUpperCase()}`,\r\n                  sectionName: '',\r\n                  value: '0'\r\n                },\r\n                ...facilityOptions\r\n              ];\r\n              return all;\r\n            })\r\n          );\r\n        })\r\n      )\r\n      .subscribe((facOptions) => {\r\n        this._facilityFilterOptions$.next(facOptions);\r\n      });\r\n\r\n    // Setup APF Limits from PI for all facilities\r\n    this.dataService.apfLimits().subscribe((limits: any[]) => {\r\n      const limitsLookup = reduce(limits, (acc, limit) => {\r\n        \r\n        if(limit.Conn_Room) {\r\n          const name1 = limit.Conn_Room ? `${limit.Room}_${limit.Conn_Room}_DP` : limit.Room;\r\n          const name2 = limit.Conn_Room ? `${limit.Conn_Room}_${limit.Room}_DP` : limit.Room;\r\n          // hard to know room/conn_room order so add lookup for both directions\r\n          return{...acc,\r\n            [`${limit.Facility.toLowerCase()}|${name1.toLowerCase()}`]: limit,\r\n            [`${limit.Facility.toLowerCase()}|${name2.toLowerCase()}`]: limit,\r\n          }\r\n        } else {       \r\n          return{...acc,\r\n            [`${limit.Facility.toLowerCase()}|${limit.Room.toLowerCase()}`]: limit,\r\n          }\r\n        }\r\n\r\n      }\r\n    );\r\n\r\n      this._apfLimits$.next(limitsLookup);\r\n    });\r\n\r\n    // create an observable of the facility selected in the fillter control\r\n    const selectedFacility$ = this._piDataFilter$.pipe(\r\n      distinctUntilChanged(\r\n        (prev, curr) => prev.facility.value === curr.facility.value\r\n      ),\r\n      map((f) => f.facility)\r\n    );\r\n    \r\n    // create an observable of the marker type to use with the map - 'pin' or 'arrow'\r\n    const svgMapMarker$ = this._piDataFilter$.pipe(\r\n      map((f) => (f.status.toLowerCase() === 'dp' ? 'arrow' : 'pin')),\r\n      distinctUntilChanged()\r\n    );\r\n\r\n    // Update the floor plan, current status values for rooms, and parameter values for rooms when the facility changes\r\n    selectedFacility$\r\n      .pipe(\r\n        mergeMap((facility) =>\r\n          zip(\r\n            of(facility.value),\r\n            // of([] as any),\r\n            this.dataService.facilityCurrentStatusData(facility.value), // status for each room and attribute in facility\r\n            this.dataService.roomParameterInfo(facility.value) // parameter info from database for each room and attribute in facility\r\n          )\r\n        )\r\n      )\r\n      .subscribe(([facilityId, currentStatusValues, parameterValues]) => {\r\n        const backGroundImageUrl =\r\n          facilityId == 0\r\n            ? 'assets/images/floor-plans/apf_facility_all_background.png'\r\n            : `assets/images/orig-floor-plans/FID${facilityId}_FloorPlan.jpg`;\r\n        this._svgMapBackgroundImageUrl$.next(backGroundImageUrl);\r\n\r\n        this._currentStatusValues$.next(currentStatusValues);\r\n\r\n        const compositeStatusValues = currentStatusValues.filter(\r\n          (x) => x.attribute === 'Composite' || x.locationName.endsWith('_DP')\r\n        );\r\n        const pinStatusLookup = reduce(\r\n          compositeStatusValues,\r\n          (acc, x) => ({\r\n            ...acc,\r\n            [x.locationName]: this.statusColor(x.statusPoint.numeric_value)\r\n          }),\r\n          {}\r\n        );\r\n        this._pinStates.next(pinStatusLookup);\r\n\r\n        this._parameterValues$.next(parameterValues);\r\n\r\n        this._selectedPin$.next('');\r\n        this._selectedRoomInfo$.next({});\r\n      });\r\n\r\n    // Get the pins or arrows for the Svg Floor plan if the facility changes or attriibute changes between not dp and dp\r\n    combineLatest([selectedFacility$, svgMapMarker$])\r\n      .pipe(\r\n        mergeMap(([facility, marker]) => {\r\n          return this.dataService.svgMap(facility.value, marker);\r\n        })\r\n      )\r\n      .subscribe((svgMap) => {\r\n        this._svgMap$.next(svgMap);\r\n      });\r\n\r\n    // when a map pin is selected, prepare room info display data using the apf limits query, current status values, and the room parameters\r\n    this._selectedPin$.pipe(\r\n      filter(Boolean),\r\n      mergeMap((pin:string)=>zip(\r\n        of(pin),\r\n        this.dataService.roomCurrentAttributeData(this._piDataFilter$.value.facility.value,pin)\r\n      ))\r\n    ).subscribe(([pin,roomStatusValues]) => {\r\n      const facility =\r\n        this._piDataFilter$.value.facility.sectionName.toLowerCase();\r\n      const key = `${facility}|${pin.toLowerCase()}`; // pin = room number\r\n      const apfLimits = this._apfLimits$.value[key];\r\n      const isDP = pin.indexOf('DP') > -1;\r\n      const room = isDP ? \r\n        this._parameterValues$.value.find(\r\n          (r) => (r.formattedName.toLowerCase() === pin.toLowerCase())\r\n        ) : \r\n        this._parameterValues$.value.find(\r\n          (r) => (r.roomNumber.toLowerCase() === pin.toLowerCase())\r\n        );\r\n\r\n      const info = {\r\n        ...apfLimits,\r\n        gsf: room?.sq,\r\n        roomParameters: room?.roomParameters,\r\n        roomStatusValues,\r\n        compositeStatus: roomStatusValues.find(\r\n          (x) => x.attribute === 'Composite'\r\n        )?.statusPoint,\r\n        tempStatus: roomStatusValues.find((x) => x.attribute === 'Temp')\r\n          ?.statusPoint,\r\n        rhStatus: roomStatusValues.find((x) => x.attribute === 'Hum')\r\n          ?.statusPoint,\r\n        achStatus: roomStatusValues.find((x) => x.attribute === 'Airx')\r\n          ?.statusPoint,\r\n        dpStatus: roomStatusValues.find((x) => x.attribute === 'DP')\r\n          ?.statusPoint\r\n      };\r\n\r\n      this._selectedRoomInfo$.next(info);\r\n    });\r\n\r\n    // Prepare timeline data for All Facilities Timeline (facilityId == 0)\r\n    const facilityAllFilter$ = this._piDataFilter$.pipe(\r\n      filter((f) => f.facility.value == 0)\r\n    );\r\n\r\n    combineLatest([this._ic$, facilityAllFilter$])\r\n      .pipe(\r\n        filter(([ic, filter]) => Boolean(ic)),\r\n        mergeMap(([ic, filter]) =>\r\n          this.dataService\r\n            .facilityAlltimelineData(\r\n              ic,\r\n              filter.startDate,\r\n              filter.endDate,\r\n              filter.interval\r\n            )\r\n            .pipe(\r\n              catchError((err) => {\r\n                console.log(\r\n                  'Error from dataService.facilityAlltimelineData:' +\r\n                    JSON.stringify(err)\r\n                );\r\n                return of([]);\r\n              }),\r\n              map((data) => ({ filter, data }))\r\n            )\r\n        )\r\n      )\r\n      .subscribe((dataAndFilter) => {\r\n        const chartDataPoints: TimelineChartDataPoint[] = [];\r\n        const facilities = dataAndFilter.data.map((d) => d.facility);\r\n        const facilityLookup = keyBy(facilities, (f) => f.facilityName);\r\n        const timestamps = (dataAndFilter.data || [])\r\n          .filter((x) => x.points.some(Boolean))\r\n          .map((x) => x.points[0].timestamp);\r\n        const minTimestamp = timestamps.reduce(function (a, b) {\r\n          return a < b ? a : b;\r\n        }, Number.MAX_VALUE);\r\n\r\n        for (const x of dataAndFilter.data) {\r\n          if (!x.points.some(Boolean)) {\r\n            x.points = [\r\n              {\r\n                timestamp: minTimestamp,\r\n                numeric_value: 1\r\n              },\r\n              {\r\n                timestamp: dataAndFilter.filter.endDate.getTime(),\r\n                numeric_value: 1\r\n              }\r\n            ];\r\n          }\r\n\r\n          x.points.sort((a, b) => a.timestamp - b.timestamp);\r\n          let startTime = x.points[0].timestamp;\r\n          for (const y of x.points.sort((a, b) => a.timestamp - b.timestamp)) {\r\n            if (y.timestamp < dataAndFilter.filter.startDate.getTime()) {\r\n              console.log('error - timestamp before request time');\r\n            }\r\n            const point: TimelineChartDataPoint = {\r\n              locationName: x.facility.facilityName,\r\n              tag: x.tag,\r\n              startDate: new Date(startTime),\r\n              endDate: new Date(Math.max(y.timestamp, startTime)),\r\n              statusColor: this.statusColor(y.numeric_value),\r\n              chillerStatusLabel: this.chillerStatusLabel(y.numeric_value)\r\n            };\r\n\r\n            startTime = y.timestamp;\r\n            chartDataPoints.push(point);\r\n          }\r\n        }\r\n\r\n        this._timelineChartData$.next({\r\n          points: chartDataPoints,\r\n          locations: facilityLookup,\r\n          locationType: 'facility'\r\n        });\r\n      });\r\n\r\n    // prepare data for specific facility timeline\r\n    this._piDataFilter$\r\n      .pipe(\r\n        filter((f) => f.facility.value != 0),\r\n        mergeMap((filter: PiDataFilter) =>\r\n          this.dataService\r\n            .facilityRoomsTimelineDate(\r\n              filter.facility.value,\r\n              filter.status,\r\n              filter.startDate,\r\n              filter.endDate,\r\n              filter.interval\r\n            )\r\n            .pipe(\r\n              catchError((err) => {\r\n                console.log(\r\n                  'Error from dataService.facilityRoomsTimelineDate:' +\r\n                    JSON.stringify(err)\r\n                );\r\n                return of([]);\r\n              }),\r\n              map((data) => ({ filter, data }))\r\n            )\r\n        )\r\n      )\r\n      .subscribe((dataAndFilter) => {\r\n        const chartDataPoints: TimelineChartDataPoint[] = [];\r\n        const rooms = dataAndFilter.data.map((d) => d.room);\r\n        const roomLookup = keyBy(rooms, (r) => r.roomNumber);\r\n        const timestamps = (dataAndFilter.data || [])\r\n          .filter((x) => x.points.some(Boolean))\r\n          .map((x) => x.points[0].timestamp);\r\n        const minTimestamp = timestamps.reduce(function (a, b) {\r\n          return a < b ? a : b;\r\n        },Number.MAX_VALUE);\r\n\r\n        for (const x of dataAndFilter.data) {\r\n          if (!x.points.some(Boolean)) {\r\n            x.points = [\r\n              {\r\n                timestamp: minTimestamp,\r\n                numeric_value: 1\r\n              },\r\n              {\r\n                timestamp: dataAndFilter.filter.endDate.getTime(),\r\n                numeric_value: 1\r\n              }\r\n            ];\r\n          }\r\n\r\n          x.points.sort((a, b) => a.timestamp - b.timestamp);\r\n          let startTime = x.points[0].timestamp;\r\n          for (const y of x.points) {\r\n            if (y.timestamp < dataAndFilter.filter.startDate.getTime()) {\r\n              console.log('error - timestamp before request time');\r\n            }\r\n            const point: TimelineChartDataPoint = {\r\n              locationName: x.room.roomNumber,\r\n              tag: x.tag,\r\n              startDate: new Date(startTime),\r\n              endDate: new Date(Math.max(y.timestamp, startTime)),\r\n              statusColor: this.statusColor(y.numeric_value),\r\n              chillerStatusLabel: this.chillerStatusLabel(y.numeric_value)\r\n            };\r\n\r\n            startTime = y.timestamp;\r\n            chartDataPoints.push(point);\r\n          }\r\n        }\r\n\r\n        this._timelineChartData$.next({\r\n          points: chartDataPoints,\r\n          locations: roomLookup,\r\n          locationType: 'room'\r\n        });\r\n      });\r\n  } // end contstructor\r\n\r\n  private _ic$: Subject<string>;\r\n  public setIC(ic: string) {\r\n    this._ic$.next(ic);\r\n  }\r\n\r\n  private _piDataFilter$: BehaviorSubject<PiDataFilter>;\r\n  public filterPiData(filter: PiDataFilter) {\r\n    this._piDataFilter$.next(filter);\r\n  }\r\n  public get piDataFilter$() {\r\n    return this._piDataFilter$ as Observable<PiDataFilter>;\r\n  }\r\n\r\n  public get isFacilityAll$() {\r\n    return this._piDataFilter$.pipe(\r\n      map((f) => {\r\n        return Number(f.facility) === 0;\r\n      })\r\n    );\r\n  }\r\n\r\n  private _svgMap$: Subject<SvgMap>;\r\n  public get svgMap$() {\r\n    return this._svgMap$ as Observable<SvgMap>;\r\n  }\r\n\r\n  private _currentStatusValues$: BehaviorSubject<LocationCurrentStatus[]>;\r\n  private _pinStates: BehaviorSubject<locationStatusLookup>;\r\n\r\n  public get pinStates$() {\r\n    return this._pinStates as Observable<locationStatusLookup>;\r\n  }\r\n\r\n  private _parameterValues$: BehaviorSubject<Room[]>;\r\n  public get parameterValues$() {\r\n    return this._parameterValues$ as Observable<Room[]>;\r\n  }\r\n\r\n  private _timelineChartData$: Subject<TimelineChartData>;\r\n  public get timelineChartData$() {\r\n    return this._timelineChartData$ as Observable<TimelineChartData>;\r\n  }\r\n\r\n  private _svgMapBackgroundImageUrl$: Subject<string>;\r\n  public get svgMapBackgroundImageUrl$() {\r\n    return this._svgMapBackgroundImageUrl$ as Observable<string>;\r\n  }\r\n\r\n  private _selectedPin$: Subject<string>;\r\n  public get selectedPin$() {\r\n    return this._selectedPin$ as Observable<string>;\r\n  }\r\n\r\n  private _hoveredPin$: Subject<string>;\r\n  public get hoveredPin$() {\r\n    return this._hoveredPin$ as Observable<string>;\r\n  }\r\n\r\n  private _hoveredTimelineLabel$: Subject<string>;\r\n  public get hoveredTimelineLabel$() {\r\n    return this._hoveredTimelineLabel$ as Observable<string>;\r\n  }\r\n\r\n  private _selectedRoomInfo$: Subject<roomInfoLookup>;\r\n  public get selectedRoomInfo$() {\r\n    return this._selectedRoomInfo$ as Observable<roomInfoLookup>;\r\n  }\r\n\r\n  public setSelectedPin(pinName: string) {\r\n    this._selectedPin$.next(pinName);\r\n  }\r\n\r\n  public setHoveredPin(pinName: string) {\r\n    this._hoveredPin$.next(pinName);\r\n  }\r\n\r\n  public setHoveredTimelineLabel(label: string) {\r\n    this._hoveredTimelineLabel$.next(label);\r\n  }\r\n\r\n  private _apfLimits$: BehaviorSubject<apfLimitsLookup>;\r\n  public get apfLimits$() {\r\n    return this._apfLimits$ as Observable<apfLimitsLookup>;\r\n  }\r\n\r\n  private statusColor = (statusVal: number) => {\r\n    switch (statusVal) {\r\n      case 0:\r\n        return 'green';\r\n      case 1:\r\n        return 'gray';\r\n      case 2:\r\n        return 'yellow';\r\n      case 3:\r\n        return 'red';\r\n      default:\r\n        return 'lightgray';\r\n    }\r\n  };\r\n\r\n  private chillerStatusLabel = (statusVal: number) => {\r\n    switch (statusVal) {\r\n      case 0:\r\n        return 'Within Spec';\r\n      case 1:\r\n        return 'Comm Loss';\r\n      case 2:\r\n        return 'Warning';\r\n      case 3:\r\n        return 'Alarm (our of Spec)';\r\n      default:\r\n        return '';\r\n    }\r\n  };\r\n\r\n  public gsfGrowthByClassification$ = this.dataService\r\n    .gsfGrowthByClassification()\r\n    .pipe(\r\n      map((d: any) =>\r\n        d.map((x: any) => {\r\n          const goLiveDate = new Date(x.goLiveDate);\r\n          return [\r\n            goLiveDate,\r\n            x.cncRoomsArea + x.iso8RoomsArea + x.iso7RoomsArea,\r\n            x.criticalEnvironmentParametersCount\r\n          ];\r\n        })\r\n      )\r\n    );\r\n\r\n  private _facilityFilterOptions$: BehaviorSubject<\r\n    { repName: string; sectionName: string; value: string }[]\r\n  >;\r\n  public get facilityFilterOptions$() {\r\n    return this._facilityFilterOptions$ as Observable<\r\n      { repName: string; sectionName: string; value: string }[]\r\n    >;\r\n  }\r\n}\r\n",
            "properties": [
                {
                    "name": "endDate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "facility",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "interval",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "startDate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "status",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 26
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "PinHoverInfo",
            "id": "interface-PinHoverInfo-4ef37f9ba1016aae6d15647e6a4567fe68f83e86a7b652d76ecf24be48e9ecd5cd4944b0c6212ea6b5298987f588407a0b7238a310f33ee503e7bd9842dcb827",
            "file": "src/app/svg-status-map/svg-status-map.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import {\r\n  AfterViewInit,\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  OnChanges,\r\n  Output\r\n} from '@angular/core';\r\nimport { SvgMap, SvgMapPin, defaultSvgMap } from '../api/models';\r\n\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\n\r\ndeclare const bootstrap: any;\r\n\r\nexport interface PinHoverInfo {\r\n  locationId: string;\r\n  status: 'on' | 'off';\r\n}\r\n\r\n@Component({\r\n  selector: 'app-svg-status-map',\r\n  templateUrl: './svg-status-map.component.html',\r\n  styleUrls: ['./svg-status-map.component.scss']\r\n})\r\nexport class SvgStatusMapComponent implements OnChanges {\r\n  constructor(private sanitizer: DomSanitizer) {}\r\n\r\n  mapTooltip(pin: SvgMapPin) {\r\n    const tooltipHtml = `\r\n    <div class=\"label-tooltip\">\r\n      Room: ${pin.title} <br>\r\n\r\n    </div>`;\r\n\r\n    // Room #: ${room.roomNumber} <br>\r\n    // Class: ${room.iso} <br>\r\n    // GSF: ${room.sq}\r\n\r\n    // Room: ${room.roomName} <br>\r\n    // Room #: ${room.roomNumber} <br>\r\n    // Class: ${room.iso} <br>\r\n    // GSF: ${room.sq}\r\n    // const tooltipHtml = `\r\n    //   <div align=\"left\" class=\"label-tooltip\">\r\n    //     <table>\r\n    //      <tr><td> Room: ${room.roomName} </td></tr>\r\n    //      <tr><td><b> Room #: ${room.roomNumber} </b></td></tr>\r\n    //      <tr><td><b> Class: ${room.iso} </b></td></tr>\r\n    //      <tr><td><b> GSF: ${room.sq} </b></td></tr>\r\n    //      </table>\r\n    //   </div>\r\n    // `;\r\n    return tooltipHtml;\r\n  }\r\n\r\n  ngOnChanges() {\r\n    for (const pin of this.svgMap.svgMapPins) {\r\n      window.setTimeout(() => {\r\n        const pinElem = document.getElementById('pin_' + pin.locationId);\r\n        if (pinElem) {\r\n          const tooltip = new bootstrap.Tooltip(pinElem, {\r\n            placement: 'right',\r\n            html: true,\r\n            title: '<div>' + pin.title + '</div>'\r\n          });\r\n        }\r\n      }, 100);\r\n\r\n      // const roomData = this.chartData.locations[locationName];\r\n      // if(roomData) {\r\n      //   const roomTooltip = this.roomLabelTooltip(roomData);\r\n      //   const tooltip = new bootstrap.Tooltip(label, {\r\n      //     placement:'right',\r\n      //     html: true,\r\n      //     title: roomTooltip\r\n      //   });\r\n      // }\r\n    }\r\n\r\n    for (const pin of this.svgMap.svgMapArrows) {\r\n      window.setTimeout(() => {\r\n        const pinElem = document.getElementById('pin_' + pin.locationId);\r\n        if (pinElem) {\r\n          const tooltip = new bootstrap.Tooltip(pinElem, {\r\n            placement: 'right',\r\n            html: true,\r\n            title: '<div>' + pin.locationId + '</div>'\r\n          });\r\n        }\r\n      }, 100);\r\n    }\r\n  }\r\n\r\n  @Input()\r\n  svgMap: SvgMap = defaultSvgMap;\r\n\r\n  @Input()\r\n  pinStates: { [name: string]: string } = {};\r\n\r\n  private _highlightedMapPin = '';\r\n  @Input()\r\n  get highlightedMapPin() {\r\n    return this._highlightedMapPin;\r\n  }\r\n  set highlightedMapPin(v: string) {\r\n    this._highlightedMapPin = v;\r\n    document.querySelectorAll('.pin-border').forEach((elem) => {\r\n      (elem as HTMLElement).style.fill = 'grey';\r\n    });\r\n    const target = document.querySelector(\r\n      '.pin-border[data-locationId=\"' + v + '\"]'\r\n    ) as HTMLElement;\r\n    if (target) {\r\n      target.style.fill = 'black';\r\n    }\r\n  }\r\n\r\n  private _backgroundImageUrl = '';\r\n  @Input()\r\n  get backgroundImageUrl() {\r\n    return this._backgroundImageUrl;\r\n  }\r\n  set backgroundImageUrl(v) {\r\n    this._backgroundImageUrl = v;\r\n\r\n    this.backgroundStyle = {\r\n      'background-image': 'url(' + this.backgroundImageUrl + ')',\r\n      'background-size': '100% 100%',\r\n      'background-repeat': 'no-repeat',\r\n      border: '1px solid blue;'\r\n    };\r\n  }\r\n\r\n  public backgroundStyle = {};\r\n\r\n  @Output()\r\n  pinClick: EventEmitter<string> = new EventEmitter<string>();\r\n\r\n  @Output()\r\n  pinMouseOver: EventEmitter<string> = new EventEmitter<string>();\r\n\r\n  @Output()\r\n  pinMouseOut: EventEmitter<string> = new EventEmitter<string>();\r\n\r\n  pinClass(locationId: string) {\r\n    if (this.pinStates[locationId]) {\r\n      return `pin-${this.pinStates[locationId]}`;\r\n    } else {\r\n      return 'pin-lightgray';\r\n    }\r\n  }\r\n\r\n  mouseOver(locationId: string) {\r\n    const target = document.querySelector(\r\n      '.pin-border[data-locationId=\"' + locationId + '\"]'\r\n    ) as HTMLElement;\r\n    if (target) {\r\n      target.style.fill = 'black';\r\n    }\r\n    this.pinMouseOver.emit(locationId);\r\n  }\r\n\r\n  mouseOut(locationId: string) {\r\n    const target = document.querySelector(\r\n      '.pin-border[data-locationId=\"' + locationId + '\"]'\r\n    ) as HTMLElement;\r\n    if (target) {\r\n      target.style.fill = 'grey';\r\n    }\r\n    this.pinMouseOut.emit(locationId);\r\n  }\r\n}\r\n",
            "properties": [
                {
                    "name": "locationId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "status",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"on\" | \"off\"",
                    "optional": false,
                    "description": "",
                    "line": 17
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "Room",
            "id": "interface-Room-9abf61cda6f4364bdcc36dc62a21c0a9c397936b181e7eee18b25c976e5431c859f7d2e864809ce3773a8b02af8cfd70314b3ba4a2351dfc6582eee313c1e47e",
            "file": "src/app/api/models/room.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { RoomParameter } from './roomParameter';\r\n\r\nexport interface Room {\r\n  roomId: number;\r\n  facilityId: number;\r\n  facility: string;\r\n  roomNumber: string;\r\n  connectingRoom: string;\r\n  roomName: string;\r\n  sq: number;\r\n  formattedName: string;\r\n  isActive: boolean;\r\n  roomParameters?: RoomParameter[];\r\n}\r\n\r\n\r\n",
            "properties": [
                {
                    "name": "connectingRoom",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "facility",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "facilityId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "formattedName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "isActive",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "roomId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "roomName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "roomNumber",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "roomParameters",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "RoomParameter[]",
                    "optional": true,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "sq",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "RoomDisplayField",
            "id": "interface-RoomDisplayField-73942ab4d7b0476e3a4847bbfb14cada1cce0e4b3b78892ecc3e5bfc1b110366c5e08abc2d948a561150a69e503608356a8c38bd70c00a4171f2ec0ec0b64651",
            "file": "src/app/apf-portfolio-ic-dashboard/apf-portfolio-ic-dashboard.service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import {\r\n  BehaviorSubject,\r\n  Observable,\r\n  Subject,\r\n  combineLatest,\r\n  distinctUntilChanged,\r\n  filter,\r\n  map,\r\n  mergeMap,\r\n  of,\r\n  zip\r\n} from 'rxjs';\r\nimport {\r\n  LocationCurrentStatus,\r\n  Room,\r\n  SvgMap,\r\n} from 'src/app/api/models';\r\nimport { keyBy, reduce } from 'lodash';\r\n\r\nimport { DataService } from 'src/app/api/data.service';\r\nimport { Injectable } from '@angular/core';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\nexport interface PiDataFilter {\r\n  facility: { repName: string; sectionName: string; value: number };\r\n  status: string;\r\n  startDate: Date;\r\n  endDate: Date;\r\n  interval: number;\r\n}\r\n\r\ninterface TimelineChartDataPoint {\r\n  locationName: string;\r\n  tag: string;\r\n  // statusValue:number,\r\n  chillerStatusLabel: string;\r\n  statusColor: string;\r\n  startDate: Date;\r\n  endDate: Date;\r\n}\r\n\r\nexport interface RoomDisplayField {\r\n  name: string;\r\n  value: string;\r\n  displayType?: string;\r\n}\r\n\r\nexport interface TimelineChartData {\r\n  points: TimelineChartDataPoint[];\r\n  locations: { [name: string]: any };\r\n  locationType: 'room' | 'facility';\r\n}\r\n\r\nexport interface StatusPoint {\r\n  timeStamp: number;\r\n  numeric_value: number;\r\n}\r\n\r\nexport type locationStatusLookup = { [name: string]: string };\r\nexport type roomInfoLookup = { [name: string]: string };\r\nexport type apfLimitsLookup = { [facRoomKey: string]: any };\r\n\r\n@Injectable()\r\nexport class ApfPortfolioIcDashboardService {\r\n  constructor(private dataService: DataService) {\r\n    const defaultStartDate = new Date();\r\n    defaultStartDate.setDate(defaultStartDate.getDate() - 1);\r\n\r\n    const defaultEndDate = new Date();\r\n\r\n    this._piDataFilter$ = new BehaviorSubject<PiDataFilter>({\r\n      facility: { repName: '', sectionName: '', value: 0 },\r\n      status: '',\r\n      startDate: defaultStartDate,\r\n      endDate: defaultEndDate,\r\n      interval: 10\r\n    });\r\n\r\n    this._ic$ = new BehaviorSubject<string>('');\r\n    this._facilityFilterOptions$ = new BehaviorSubject<\r\n      { repName: string; sectionName: string; value: string }[]\r\n    >([]);\r\n    this._svgMap$ = new BehaviorSubject<SvgMap>({\r\n      name: 'apf_facility_all',\r\n      backgroundSvg: '',\r\n      id: 0,\r\n      svgMapPins: [],\r\n      svgMapArrows: [],\r\n      viewbox: '0 0 0 0',\r\n      defs: '',\r\n      facilityId: 0\r\n    });\r\n    this._svgMapBackgroundImageUrl$ = new BehaviorSubject<string>('');\r\n    this._currentStatusValues$ = new BehaviorSubject<LocationCurrentStatus[]>(\r\n      []\r\n    );\r\n    this._parameterValues$ = new BehaviorSubject<Room[]>([]);\r\n    this._timelineChartData$ = new BehaviorSubject<TimelineChartData>({\r\n      points: [],\r\n      locations: {},\r\n      locationType: 'facility'\r\n    });\r\n    this._selectedPin$ = new BehaviorSubject<string>('');\r\n    this._selectedRoomInfo$ = new BehaviorSubject<roomInfoLookup>({});\r\n    this._hoveredPin$ = new BehaviorSubject<string>('');\r\n    this._hoveredTimelineLabel$ = new BehaviorSubject<string>('');\r\n    this._apfLimits$ = new BehaviorSubject<apfLimitsLookup>({});\r\n    this._pinStates = new BehaviorSubject<locationStatusLookup>({});\r\n\r\n    // Set the list of Facilities when the IC changes\r\n    this._ic$\r\n      .pipe(\r\n        filter(Boolean),\r\n        mergeMap((ic: string) => {\r\n          return this.dataService.facilitiesByIC(ic).pipe(\r\n            map((facs) => {\r\n              const facilityOptions = facs.map((fac: any) => {\r\n                const option = {\r\n                  repName: fac.facilityRepName,\r\n                  sectionName: fac.facilitySection,\r\n                  value: fac.facilityId\r\n                };\r\n                return option;\r\n              });\r\n              const all = [\r\n                {\r\n                  repName: `All ${ic.toLocaleUpperCase()}`,\r\n                  sectionName: '',\r\n                  value: '0'\r\n                },\r\n                ...facilityOptions\r\n              ];\r\n              return all;\r\n            })\r\n          );\r\n        })\r\n      )\r\n      .subscribe((facOptions) => {\r\n        this._facilityFilterOptions$.next(facOptions);\r\n      });\r\n\r\n    // Setup APF Limits from PI for all facilities\r\n    this.dataService.apfLimits().subscribe((limits: any[]) => {\r\n      const limitsLookup = reduce(limits, (acc, limit) => {\r\n        \r\n        if(limit.Conn_Room) {\r\n          const name1 = limit.Conn_Room ? `${limit.Room}_${limit.Conn_Room}_DP` : limit.Room;\r\n          const name2 = limit.Conn_Room ? `${limit.Conn_Room}_${limit.Room}_DP` : limit.Room;\r\n          // hard to know room/conn_room order so add lookup for both directions\r\n          return{...acc,\r\n            [`${limit.Facility.toLowerCase()}|${name1.toLowerCase()}`]: limit,\r\n            [`${limit.Facility.toLowerCase()}|${name2.toLowerCase()}`]: limit,\r\n          }\r\n        } else {       \r\n          return{...acc,\r\n            [`${limit.Facility.toLowerCase()}|${limit.Room.toLowerCase()}`]: limit,\r\n          }\r\n        }\r\n\r\n      }\r\n    );\r\n\r\n      this._apfLimits$.next(limitsLookup);\r\n    });\r\n\r\n    // create an observable of the facility selected in the fillter control\r\n    const selectedFacility$ = this._piDataFilter$.pipe(\r\n      distinctUntilChanged(\r\n        (prev, curr) => prev.facility.value === curr.facility.value\r\n      ),\r\n      map((f) => f.facility)\r\n    );\r\n    \r\n    // create an observable of the marker type to use with the map - 'pin' or 'arrow'\r\n    const svgMapMarker$ = this._piDataFilter$.pipe(\r\n      map((f) => (f.status.toLowerCase() === 'dp' ? 'arrow' : 'pin')),\r\n      distinctUntilChanged()\r\n    );\r\n\r\n    // Update the floor plan, current status values for rooms, and parameter values for rooms when the facility changes\r\n    selectedFacility$\r\n      .pipe(\r\n        mergeMap((facility) =>\r\n          zip(\r\n            of(facility.value),\r\n            // of([] as any),\r\n            this.dataService.facilityCurrentStatusData(facility.value), // status for each room and attribute in facility\r\n            this.dataService.roomParameterInfo(facility.value) // parameter info from database for each room and attribute in facility\r\n          )\r\n        )\r\n      )\r\n      .subscribe(([facilityId, currentStatusValues, parameterValues]) => {\r\n        const backGroundImageUrl =\r\n          facilityId == 0\r\n            ? 'assets/images/floor-plans/apf_facility_all_background.png'\r\n            : `assets/images/orig-floor-plans/FID${facilityId}_FloorPlan.jpg`;\r\n        this._svgMapBackgroundImageUrl$.next(backGroundImageUrl);\r\n\r\n        this._currentStatusValues$.next(currentStatusValues);\r\n\r\n        const compositeStatusValues = currentStatusValues.filter(\r\n          (x) => x.attribute === 'Composite' || x.locationName.endsWith('_DP')\r\n        );\r\n        const pinStatusLookup = reduce(\r\n          compositeStatusValues,\r\n          (acc, x) => ({\r\n            ...acc,\r\n            [x.locationName]: this.statusColor(x.statusPoint.numeric_value)\r\n          }),\r\n          {}\r\n        );\r\n        this._pinStates.next(pinStatusLookup);\r\n\r\n        this._parameterValues$.next(parameterValues);\r\n\r\n        this._selectedPin$.next('');\r\n        this._selectedRoomInfo$.next({});\r\n      });\r\n\r\n    // Get the pins or arrows for the Svg Floor plan if the facility changes or attriibute changes between not dp and dp\r\n    combineLatest([selectedFacility$, svgMapMarker$])\r\n      .pipe(\r\n        mergeMap(([facility, marker]) => {\r\n          return this.dataService.svgMap(facility.value, marker);\r\n        })\r\n      )\r\n      .subscribe((svgMap) => {\r\n        this._svgMap$.next(svgMap);\r\n      });\r\n\r\n    // when a map pin is selected, prepare room info display data using the apf limits query, current status values, and the room parameters\r\n    this._selectedPin$.pipe(\r\n      filter(Boolean),\r\n      mergeMap((pin:string)=>zip(\r\n        of(pin),\r\n        this.dataService.roomCurrentAttributeData(this._piDataFilter$.value.facility.value,pin)\r\n      ))\r\n    ).subscribe(([pin,roomStatusValues]) => {\r\n      const facility =\r\n        this._piDataFilter$.value.facility.sectionName.toLowerCase();\r\n      const key = `${facility}|${pin.toLowerCase()}`; // pin = room number\r\n      const apfLimits = this._apfLimits$.value[key];\r\n      const isDP = pin.indexOf('DP') > -1;\r\n      const room = isDP ? \r\n        this._parameterValues$.value.find(\r\n          (r) => (r.formattedName.toLowerCase() === pin.toLowerCase())\r\n        ) : \r\n        this._parameterValues$.value.find(\r\n          (r) => (r.roomNumber.toLowerCase() === pin.toLowerCase())\r\n        );\r\n\r\n      const info = {\r\n        ...apfLimits,\r\n        gsf: room?.sq,\r\n        roomParameters: room?.roomParameters,\r\n        roomStatusValues,\r\n        compositeStatus: roomStatusValues.find(\r\n          (x) => x.attribute === 'Composite'\r\n        )?.statusPoint,\r\n        tempStatus: roomStatusValues.find((x) => x.attribute === 'Temp')\r\n          ?.statusPoint,\r\n        rhStatus: roomStatusValues.find((x) => x.attribute === 'Hum')\r\n          ?.statusPoint,\r\n        achStatus: roomStatusValues.find((x) => x.attribute === 'Airx')\r\n          ?.statusPoint,\r\n        dpStatus: roomStatusValues.find((x) => x.attribute === 'DP')\r\n          ?.statusPoint\r\n      };\r\n\r\n      this._selectedRoomInfo$.next(info);\r\n    });\r\n\r\n    // Prepare timeline data for All Facilities Timeline (facilityId == 0)\r\n    const facilityAllFilter$ = this._piDataFilter$.pipe(\r\n      filter((f) => f.facility.value == 0)\r\n    );\r\n\r\n    combineLatest([this._ic$, facilityAllFilter$])\r\n      .pipe(\r\n        filter(([ic, filter]) => Boolean(ic)),\r\n        mergeMap(([ic, filter]) =>\r\n          this.dataService\r\n            .facilityAlltimelineData(\r\n              ic,\r\n              filter.startDate,\r\n              filter.endDate,\r\n              filter.interval\r\n            )\r\n            .pipe(\r\n              catchError((err) => {\r\n                console.log(\r\n                  'Error from dataService.facilityAlltimelineData:' +\r\n                    JSON.stringify(err)\r\n                );\r\n                return of([]);\r\n              }),\r\n              map((data) => ({ filter, data }))\r\n            )\r\n        )\r\n      )\r\n      .subscribe((dataAndFilter) => {\r\n        const chartDataPoints: TimelineChartDataPoint[] = [];\r\n        const facilities = dataAndFilter.data.map((d) => d.facility);\r\n        const facilityLookup = keyBy(facilities, (f) => f.facilityName);\r\n        const timestamps = (dataAndFilter.data || [])\r\n          .filter((x) => x.points.some(Boolean))\r\n          .map((x) => x.points[0].timestamp);\r\n        const minTimestamp = timestamps.reduce(function (a, b) {\r\n          return a < b ? a : b;\r\n        }, Number.MAX_VALUE);\r\n\r\n        for (const x of dataAndFilter.data) {\r\n          if (!x.points.some(Boolean)) {\r\n            x.points = [\r\n              {\r\n                timestamp: minTimestamp,\r\n                numeric_value: 1\r\n              },\r\n              {\r\n                timestamp: dataAndFilter.filter.endDate.getTime(),\r\n                numeric_value: 1\r\n              }\r\n            ];\r\n          }\r\n\r\n          x.points.sort((a, b) => a.timestamp - b.timestamp);\r\n          let startTime = x.points[0].timestamp;\r\n          for (const y of x.points.sort((a, b) => a.timestamp - b.timestamp)) {\r\n            if (y.timestamp < dataAndFilter.filter.startDate.getTime()) {\r\n              console.log('error - timestamp before request time');\r\n            }\r\n            const point: TimelineChartDataPoint = {\r\n              locationName: x.facility.facilityName,\r\n              tag: x.tag,\r\n              startDate: new Date(startTime),\r\n              endDate: new Date(Math.max(y.timestamp, startTime)),\r\n              statusColor: this.statusColor(y.numeric_value),\r\n              chillerStatusLabel: this.chillerStatusLabel(y.numeric_value)\r\n            };\r\n\r\n            startTime = y.timestamp;\r\n            chartDataPoints.push(point);\r\n          }\r\n        }\r\n\r\n        this._timelineChartData$.next({\r\n          points: chartDataPoints,\r\n          locations: facilityLookup,\r\n          locationType: 'facility'\r\n        });\r\n      });\r\n\r\n    // prepare data for specific facility timeline\r\n    this._piDataFilter$\r\n      .pipe(\r\n        filter((f) => f.facility.value != 0),\r\n        mergeMap((filter: PiDataFilter) =>\r\n          this.dataService\r\n            .facilityRoomsTimelineDate(\r\n              filter.facility.value,\r\n              filter.status,\r\n              filter.startDate,\r\n              filter.endDate,\r\n              filter.interval\r\n            )\r\n            .pipe(\r\n              catchError((err) => {\r\n                console.log(\r\n                  'Error from dataService.facilityRoomsTimelineDate:' +\r\n                    JSON.stringify(err)\r\n                );\r\n                return of([]);\r\n              }),\r\n              map((data) => ({ filter, data }))\r\n            )\r\n        )\r\n      )\r\n      .subscribe((dataAndFilter) => {\r\n        const chartDataPoints: TimelineChartDataPoint[] = [];\r\n        const rooms = dataAndFilter.data.map((d) => d.room);\r\n        const roomLookup = keyBy(rooms, (r) => r.roomNumber);\r\n        const timestamps = (dataAndFilter.data || [])\r\n          .filter((x) => x.points.some(Boolean))\r\n          .map((x) => x.points[0].timestamp);\r\n        const minTimestamp = timestamps.reduce(function (a, b) {\r\n          return a < b ? a : b;\r\n        },Number.MAX_VALUE);\r\n\r\n        for (const x of dataAndFilter.data) {\r\n          if (!x.points.some(Boolean)) {\r\n            x.points = [\r\n              {\r\n                timestamp: minTimestamp,\r\n                numeric_value: 1\r\n              },\r\n              {\r\n                timestamp: dataAndFilter.filter.endDate.getTime(),\r\n                numeric_value: 1\r\n              }\r\n            ];\r\n          }\r\n\r\n          x.points.sort((a, b) => a.timestamp - b.timestamp);\r\n          let startTime = x.points[0].timestamp;\r\n          for (const y of x.points) {\r\n            if (y.timestamp < dataAndFilter.filter.startDate.getTime()) {\r\n              console.log('error - timestamp before request time');\r\n            }\r\n            const point: TimelineChartDataPoint = {\r\n              locationName: x.room.roomNumber,\r\n              tag: x.tag,\r\n              startDate: new Date(startTime),\r\n              endDate: new Date(Math.max(y.timestamp, startTime)),\r\n              statusColor: this.statusColor(y.numeric_value),\r\n              chillerStatusLabel: this.chillerStatusLabel(y.numeric_value)\r\n            };\r\n\r\n            startTime = y.timestamp;\r\n            chartDataPoints.push(point);\r\n          }\r\n        }\r\n\r\n        this._timelineChartData$.next({\r\n          points: chartDataPoints,\r\n          locations: roomLookup,\r\n          locationType: 'room'\r\n        });\r\n      });\r\n  } // end contstructor\r\n\r\n  private _ic$: Subject<string>;\r\n  public setIC(ic: string) {\r\n    this._ic$.next(ic);\r\n  }\r\n\r\n  private _piDataFilter$: BehaviorSubject<PiDataFilter>;\r\n  public filterPiData(filter: PiDataFilter) {\r\n    this._piDataFilter$.next(filter);\r\n  }\r\n  public get piDataFilter$() {\r\n    return this._piDataFilter$ as Observable<PiDataFilter>;\r\n  }\r\n\r\n  public get isFacilityAll$() {\r\n    return this._piDataFilter$.pipe(\r\n      map((f) => {\r\n        return Number(f.facility) === 0;\r\n      })\r\n    );\r\n  }\r\n\r\n  private _svgMap$: Subject<SvgMap>;\r\n  public get svgMap$() {\r\n    return this._svgMap$ as Observable<SvgMap>;\r\n  }\r\n\r\n  private _currentStatusValues$: BehaviorSubject<LocationCurrentStatus[]>;\r\n  private _pinStates: BehaviorSubject<locationStatusLookup>;\r\n\r\n  public get pinStates$() {\r\n    return this._pinStates as Observable<locationStatusLookup>;\r\n  }\r\n\r\n  private _parameterValues$: BehaviorSubject<Room[]>;\r\n  public get parameterValues$() {\r\n    return this._parameterValues$ as Observable<Room[]>;\r\n  }\r\n\r\n  private _timelineChartData$: Subject<TimelineChartData>;\r\n  public get timelineChartData$() {\r\n    return this._timelineChartData$ as Observable<TimelineChartData>;\r\n  }\r\n\r\n  private _svgMapBackgroundImageUrl$: Subject<string>;\r\n  public get svgMapBackgroundImageUrl$() {\r\n    return this._svgMapBackgroundImageUrl$ as Observable<string>;\r\n  }\r\n\r\n  private _selectedPin$: Subject<string>;\r\n  public get selectedPin$() {\r\n    return this._selectedPin$ as Observable<string>;\r\n  }\r\n\r\n  private _hoveredPin$: Subject<string>;\r\n  public get hoveredPin$() {\r\n    return this._hoveredPin$ as Observable<string>;\r\n  }\r\n\r\n  private _hoveredTimelineLabel$: Subject<string>;\r\n  public get hoveredTimelineLabel$() {\r\n    return this._hoveredTimelineLabel$ as Observable<string>;\r\n  }\r\n\r\n  private _selectedRoomInfo$: Subject<roomInfoLookup>;\r\n  public get selectedRoomInfo$() {\r\n    return this._selectedRoomInfo$ as Observable<roomInfoLookup>;\r\n  }\r\n\r\n  public setSelectedPin(pinName: string) {\r\n    this._selectedPin$.next(pinName);\r\n  }\r\n\r\n  public setHoveredPin(pinName: string) {\r\n    this._hoveredPin$.next(pinName);\r\n  }\r\n\r\n  public setHoveredTimelineLabel(label: string) {\r\n    this._hoveredTimelineLabel$.next(label);\r\n  }\r\n\r\n  private _apfLimits$: BehaviorSubject<apfLimitsLookup>;\r\n  public get apfLimits$() {\r\n    return this._apfLimits$ as Observable<apfLimitsLookup>;\r\n  }\r\n\r\n  private statusColor = (statusVal: number) => {\r\n    switch (statusVal) {\r\n      case 0:\r\n        return 'green';\r\n      case 1:\r\n        return 'gray';\r\n      case 2:\r\n        return 'yellow';\r\n      case 3:\r\n        return 'red';\r\n      default:\r\n        return 'lightgray';\r\n    }\r\n  };\r\n\r\n  private chillerStatusLabel = (statusVal: number) => {\r\n    switch (statusVal) {\r\n      case 0:\r\n        return 'Within Spec';\r\n      case 1:\r\n        return 'Comm Loss';\r\n      case 2:\r\n        return 'Warning';\r\n      case 3:\r\n        return 'Alarm (our of Spec)';\r\n      default:\r\n        return '';\r\n    }\r\n  };\r\n\r\n  public gsfGrowthByClassification$ = this.dataService\r\n    .gsfGrowthByClassification()\r\n    .pipe(\r\n      map((d: any) =>\r\n        d.map((x: any) => {\r\n          const goLiveDate = new Date(x.goLiveDate);\r\n          return [\r\n            goLiveDate,\r\n            x.cncRoomsArea + x.iso8RoomsArea + x.iso7RoomsArea,\r\n            x.criticalEnvironmentParametersCount\r\n          ];\r\n        })\r\n      )\r\n    );\r\n\r\n  private _facilityFilterOptions$: BehaviorSubject<\r\n    { repName: string; sectionName: string; value: string }[]\r\n  >;\r\n  public get facilityFilterOptions$() {\r\n    return this._facilityFilterOptions$ as Observable<\r\n      { repName: string; sectionName: string; value: string }[]\r\n    >;\r\n  }\r\n}\r\n",
            "properties": [
                {
                    "name": "displayType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 45
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 43
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 44
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "RoomParameter",
            "id": "interface-RoomParameter-732b4eb5bf65345a7eb3b1dfd0b81bcff623e02fc704e8935a589b0212ca2a42e10ae8e1c4acfeb8b7de7f658e78e5eca31e0642d278ab1a81caaee9e2dc3f97",
            "file": "src/app/api/models/roomParameter.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface RoomParameter {\r\n  roomParameterId: number;\r\n  roomId: number;\r\n  facility: string;\r\n  roomNumber: string;\r\n  parameter: string;\r\n  iso: string;\r\n  sensorLocation: string;\r\n  sensorType: string;\r\n  calibrationType: string;\r\n  calibrationPeriod: string;\r\n  nextCalibration: string;\r\n  htte10: string;\r\n  siemensPointName: string;\r\n  jciPointName: string;\r\n  isoOrder: number;\r\n  rhTargetRange: string;\r\n\r\n\r\n}\r\n\r\n",
            "properties": [
                {
                    "name": "calibrationPeriod",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "calibrationType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "facility",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "htte10",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "iso",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "isoOrder",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "jciPointName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "nextCalibration",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "parameter",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "rhTargetRange",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "roomId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "roomNumber",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "roomParameterId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "sensorLocation",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "sensorType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "siemensPointName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "RoomTimeSeriesData",
            "id": "interface-RoomTimeSeriesData-76c68cc294c66cc4dd47198bbb51f5890b9331191bd46f1d670a3c935a7e43caed002c589150456c62a9d1d275ba3151bcafb3c8382a661ce441d71f48e8f5b4",
            "file": "src/app/api/models/timeline.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Facility, Room } from '.';\r\n\r\nexport interface TimeSeriesPoint {\r\n  timestamp: number;\r\n  numeric_value: number;\r\n}\r\n\r\nexport interface LocationTimeSeriesData<T> {\r\n  location: T; //facility or room\r\n  tag: string; // piPath\r\n  points: TimeSeriesPoint[];\r\n}\r\n\r\nexport interface FacilityTimeSeriesData {\r\n  facility: Facility;\r\n  tag: string; // piPath\r\n  points: TimeSeriesPoint[];\r\n}\r\n\r\nexport interface RoomTimeSeriesData {\r\n  room: Room;\r\n  tag: string; // piPath\r\n  points: TimeSeriesPoint[];\r\n}\r\n\r\nexport interface LocationCurrentStatus {\r\n  locationName: string; //facility or room name\r\n  attribute: 'Composite' | 'Temp' | 'Hum' | 'Airx' | 'DP';\r\n  statusPoint: TimeSeriesPoint;\r\n}\r\n\r\nexport interface LocationQuery {\r\n  locationName: string;\r\n  tag: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "points",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TimeSeriesPoint[]",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "room",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Room",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "tag",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 22
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "StatusPoint",
            "id": "interface-StatusPoint-73942ab4d7b0476e3a4847bbfb14cada1cce0e4b3b78892ecc3e5bfc1b110366c5e08abc2d948a561150a69e503608356a8c38bd70c00a4171f2ec0ec0b64651",
            "file": "src/app/apf-portfolio-ic-dashboard/apf-portfolio-ic-dashboard.service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import {\r\n  BehaviorSubject,\r\n  Observable,\r\n  Subject,\r\n  combineLatest,\r\n  distinctUntilChanged,\r\n  filter,\r\n  map,\r\n  mergeMap,\r\n  of,\r\n  zip\r\n} from 'rxjs';\r\nimport {\r\n  LocationCurrentStatus,\r\n  Room,\r\n  SvgMap,\r\n} from 'src/app/api/models';\r\nimport { keyBy, reduce } from 'lodash';\r\n\r\nimport { DataService } from 'src/app/api/data.service';\r\nimport { Injectable } from '@angular/core';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\nexport interface PiDataFilter {\r\n  facility: { repName: string; sectionName: string; value: number };\r\n  status: string;\r\n  startDate: Date;\r\n  endDate: Date;\r\n  interval: number;\r\n}\r\n\r\ninterface TimelineChartDataPoint {\r\n  locationName: string;\r\n  tag: string;\r\n  // statusValue:number,\r\n  chillerStatusLabel: string;\r\n  statusColor: string;\r\n  startDate: Date;\r\n  endDate: Date;\r\n}\r\n\r\nexport interface RoomDisplayField {\r\n  name: string;\r\n  value: string;\r\n  displayType?: string;\r\n}\r\n\r\nexport interface TimelineChartData {\r\n  points: TimelineChartDataPoint[];\r\n  locations: { [name: string]: any };\r\n  locationType: 'room' | 'facility';\r\n}\r\n\r\nexport interface StatusPoint {\r\n  timeStamp: number;\r\n  numeric_value: number;\r\n}\r\n\r\nexport type locationStatusLookup = { [name: string]: string };\r\nexport type roomInfoLookup = { [name: string]: string };\r\nexport type apfLimitsLookup = { [facRoomKey: string]: any };\r\n\r\n@Injectable()\r\nexport class ApfPortfolioIcDashboardService {\r\n  constructor(private dataService: DataService) {\r\n    const defaultStartDate = new Date();\r\n    defaultStartDate.setDate(defaultStartDate.getDate() - 1);\r\n\r\n    const defaultEndDate = new Date();\r\n\r\n    this._piDataFilter$ = new BehaviorSubject<PiDataFilter>({\r\n      facility: { repName: '', sectionName: '', value: 0 },\r\n      status: '',\r\n      startDate: defaultStartDate,\r\n      endDate: defaultEndDate,\r\n      interval: 10\r\n    });\r\n\r\n    this._ic$ = new BehaviorSubject<string>('');\r\n    this._facilityFilterOptions$ = new BehaviorSubject<\r\n      { repName: string; sectionName: string; value: string }[]\r\n    >([]);\r\n    this._svgMap$ = new BehaviorSubject<SvgMap>({\r\n      name: 'apf_facility_all',\r\n      backgroundSvg: '',\r\n      id: 0,\r\n      svgMapPins: [],\r\n      svgMapArrows: [],\r\n      viewbox: '0 0 0 0',\r\n      defs: '',\r\n      facilityId: 0\r\n    });\r\n    this._svgMapBackgroundImageUrl$ = new BehaviorSubject<string>('');\r\n    this._currentStatusValues$ = new BehaviorSubject<LocationCurrentStatus[]>(\r\n      []\r\n    );\r\n    this._parameterValues$ = new BehaviorSubject<Room[]>([]);\r\n    this._timelineChartData$ = new BehaviorSubject<TimelineChartData>({\r\n      points: [],\r\n      locations: {},\r\n      locationType: 'facility'\r\n    });\r\n    this._selectedPin$ = new BehaviorSubject<string>('');\r\n    this._selectedRoomInfo$ = new BehaviorSubject<roomInfoLookup>({});\r\n    this._hoveredPin$ = new BehaviorSubject<string>('');\r\n    this._hoveredTimelineLabel$ = new BehaviorSubject<string>('');\r\n    this._apfLimits$ = new BehaviorSubject<apfLimitsLookup>({});\r\n    this._pinStates = new BehaviorSubject<locationStatusLookup>({});\r\n\r\n    // Set the list of Facilities when the IC changes\r\n    this._ic$\r\n      .pipe(\r\n        filter(Boolean),\r\n        mergeMap((ic: string) => {\r\n          return this.dataService.facilitiesByIC(ic).pipe(\r\n            map((facs) => {\r\n              const facilityOptions = facs.map((fac: any) => {\r\n                const option = {\r\n                  repName: fac.facilityRepName,\r\n                  sectionName: fac.facilitySection,\r\n                  value: fac.facilityId\r\n                };\r\n                return option;\r\n              });\r\n              const all = [\r\n                {\r\n                  repName: `All ${ic.toLocaleUpperCase()}`,\r\n                  sectionName: '',\r\n                  value: '0'\r\n                },\r\n                ...facilityOptions\r\n              ];\r\n              return all;\r\n            })\r\n          );\r\n        })\r\n      )\r\n      .subscribe((facOptions) => {\r\n        this._facilityFilterOptions$.next(facOptions);\r\n      });\r\n\r\n    // Setup APF Limits from PI for all facilities\r\n    this.dataService.apfLimits().subscribe((limits: any[]) => {\r\n      const limitsLookup = reduce(limits, (acc, limit) => {\r\n        \r\n        if(limit.Conn_Room) {\r\n          const name1 = limit.Conn_Room ? `${limit.Room}_${limit.Conn_Room}_DP` : limit.Room;\r\n          const name2 = limit.Conn_Room ? `${limit.Conn_Room}_${limit.Room}_DP` : limit.Room;\r\n          // hard to know room/conn_room order so add lookup for both directions\r\n          return{...acc,\r\n            [`${limit.Facility.toLowerCase()}|${name1.toLowerCase()}`]: limit,\r\n            [`${limit.Facility.toLowerCase()}|${name2.toLowerCase()}`]: limit,\r\n          }\r\n        } else {       \r\n          return{...acc,\r\n            [`${limit.Facility.toLowerCase()}|${limit.Room.toLowerCase()}`]: limit,\r\n          }\r\n        }\r\n\r\n      }\r\n    );\r\n\r\n      this._apfLimits$.next(limitsLookup);\r\n    });\r\n\r\n    // create an observable of the facility selected in the fillter control\r\n    const selectedFacility$ = this._piDataFilter$.pipe(\r\n      distinctUntilChanged(\r\n        (prev, curr) => prev.facility.value === curr.facility.value\r\n      ),\r\n      map((f) => f.facility)\r\n    );\r\n    \r\n    // create an observable of the marker type to use with the map - 'pin' or 'arrow'\r\n    const svgMapMarker$ = this._piDataFilter$.pipe(\r\n      map((f) => (f.status.toLowerCase() === 'dp' ? 'arrow' : 'pin')),\r\n      distinctUntilChanged()\r\n    );\r\n\r\n    // Update the floor plan, current status values for rooms, and parameter values for rooms when the facility changes\r\n    selectedFacility$\r\n      .pipe(\r\n        mergeMap((facility) =>\r\n          zip(\r\n            of(facility.value),\r\n            // of([] as any),\r\n            this.dataService.facilityCurrentStatusData(facility.value), // status for each room and attribute in facility\r\n            this.dataService.roomParameterInfo(facility.value) // parameter info from database for each room and attribute in facility\r\n          )\r\n        )\r\n      )\r\n      .subscribe(([facilityId, currentStatusValues, parameterValues]) => {\r\n        const backGroundImageUrl =\r\n          facilityId == 0\r\n            ? 'assets/images/floor-plans/apf_facility_all_background.png'\r\n            : `assets/images/orig-floor-plans/FID${facilityId}_FloorPlan.jpg`;\r\n        this._svgMapBackgroundImageUrl$.next(backGroundImageUrl);\r\n\r\n        this._currentStatusValues$.next(currentStatusValues);\r\n\r\n        const compositeStatusValues = currentStatusValues.filter(\r\n          (x) => x.attribute === 'Composite' || x.locationName.endsWith('_DP')\r\n        );\r\n        const pinStatusLookup = reduce(\r\n          compositeStatusValues,\r\n          (acc, x) => ({\r\n            ...acc,\r\n            [x.locationName]: this.statusColor(x.statusPoint.numeric_value)\r\n          }),\r\n          {}\r\n        );\r\n        this._pinStates.next(pinStatusLookup);\r\n\r\n        this._parameterValues$.next(parameterValues);\r\n\r\n        this._selectedPin$.next('');\r\n        this._selectedRoomInfo$.next({});\r\n      });\r\n\r\n    // Get the pins or arrows for the Svg Floor plan if the facility changes or attriibute changes between not dp and dp\r\n    combineLatest([selectedFacility$, svgMapMarker$])\r\n      .pipe(\r\n        mergeMap(([facility, marker]) => {\r\n          return this.dataService.svgMap(facility.value, marker);\r\n        })\r\n      )\r\n      .subscribe((svgMap) => {\r\n        this._svgMap$.next(svgMap);\r\n      });\r\n\r\n    // when a map pin is selected, prepare room info display data using the apf limits query, current status values, and the room parameters\r\n    this._selectedPin$.pipe(\r\n      filter(Boolean),\r\n      mergeMap((pin:string)=>zip(\r\n        of(pin),\r\n        this.dataService.roomCurrentAttributeData(this._piDataFilter$.value.facility.value,pin)\r\n      ))\r\n    ).subscribe(([pin,roomStatusValues]) => {\r\n      const facility =\r\n        this._piDataFilter$.value.facility.sectionName.toLowerCase();\r\n      const key = `${facility}|${pin.toLowerCase()}`; // pin = room number\r\n      const apfLimits = this._apfLimits$.value[key];\r\n      const isDP = pin.indexOf('DP') > -1;\r\n      const room = isDP ? \r\n        this._parameterValues$.value.find(\r\n          (r) => (r.formattedName.toLowerCase() === pin.toLowerCase())\r\n        ) : \r\n        this._parameterValues$.value.find(\r\n          (r) => (r.roomNumber.toLowerCase() === pin.toLowerCase())\r\n        );\r\n\r\n      const info = {\r\n        ...apfLimits,\r\n        gsf: room?.sq,\r\n        roomParameters: room?.roomParameters,\r\n        roomStatusValues,\r\n        compositeStatus: roomStatusValues.find(\r\n          (x) => x.attribute === 'Composite'\r\n        )?.statusPoint,\r\n        tempStatus: roomStatusValues.find((x) => x.attribute === 'Temp')\r\n          ?.statusPoint,\r\n        rhStatus: roomStatusValues.find((x) => x.attribute === 'Hum')\r\n          ?.statusPoint,\r\n        achStatus: roomStatusValues.find((x) => x.attribute === 'Airx')\r\n          ?.statusPoint,\r\n        dpStatus: roomStatusValues.find((x) => x.attribute === 'DP')\r\n          ?.statusPoint\r\n      };\r\n\r\n      this._selectedRoomInfo$.next(info);\r\n    });\r\n\r\n    // Prepare timeline data for All Facilities Timeline (facilityId == 0)\r\n    const facilityAllFilter$ = this._piDataFilter$.pipe(\r\n      filter((f) => f.facility.value == 0)\r\n    );\r\n\r\n    combineLatest([this._ic$, facilityAllFilter$])\r\n      .pipe(\r\n        filter(([ic, filter]) => Boolean(ic)),\r\n        mergeMap(([ic, filter]) =>\r\n          this.dataService\r\n            .facilityAlltimelineData(\r\n              ic,\r\n              filter.startDate,\r\n              filter.endDate,\r\n              filter.interval\r\n            )\r\n            .pipe(\r\n              catchError((err) => {\r\n                console.log(\r\n                  'Error from dataService.facilityAlltimelineData:' +\r\n                    JSON.stringify(err)\r\n                );\r\n                return of([]);\r\n              }),\r\n              map((data) => ({ filter, data }))\r\n            )\r\n        )\r\n      )\r\n      .subscribe((dataAndFilter) => {\r\n        const chartDataPoints: TimelineChartDataPoint[] = [];\r\n        const facilities = dataAndFilter.data.map((d) => d.facility);\r\n        const facilityLookup = keyBy(facilities, (f) => f.facilityName);\r\n        const timestamps = (dataAndFilter.data || [])\r\n          .filter((x) => x.points.some(Boolean))\r\n          .map((x) => x.points[0].timestamp);\r\n        const minTimestamp = timestamps.reduce(function (a, b) {\r\n          return a < b ? a : b;\r\n        }, Number.MAX_VALUE);\r\n\r\n        for (const x of dataAndFilter.data) {\r\n          if (!x.points.some(Boolean)) {\r\n            x.points = [\r\n              {\r\n                timestamp: minTimestamp,\r\n                numeric_value: 1\r\n              },\r\n              {\r\n                timestamp: dataAndFilter.filter.endDate.getTime(),\r\n                numeric_value: 1\r\n              }\r\n            ];\r\n          }\r\n\r\n          x.points.sort((a, b) => a.timestamp - b.timestamp);\r\n          let startTime = x.points[0].timestamp;\r\n          for (const y of x.points.sort((a, b) => a.timestamp - b.timestamp)) {\r\n            if (y.timestamp < dataAndFilter.filter.startDate.getTime()) {\r\n              console.log('error - timestamp before request time');\r\n            }\r\n            const point: TimelineChartDataPoint = {\r\n              locationName: x.facility.facilityName,\r\n              tag: x.tag,\r\n              startDate: new Date(startTime),\r\n              endDate: new Date(Math.max(y.timestamp, startTime)),\r\n              statusColor: this.statusColor(y.numeric_value),\r\n              chillerStatusLabel: this.chillerStatusLabel(y.numeric_value)\r\n            };\r\n\r\n            startTime = y.timestamp;\r\n            chartDataPoints.push(point);\r\n          }\r\n        }\r\n\r\n        this._timelineChartData$.next({\r\n          points: chartDataPoints,\r\n          locations: facilityLookup,\r\n          locationType: 'facility'\r\n        });\r\n      });\r\n\r\n    // prepare data for specific facility timeline\r\n    this._piDataFilter$\r\n      .pipe(\r\n        filter((f) => f.facility.value != 0),\r\n        mergeMap((filter: PiDataFilter) =>\r\n          this.dataService\r\n            .facilityRoomsTimelineDate(\r\n              filter.facility.value,\r\n              filter.status,\r\n              filter.startDate,\r\n              filter.endDate,\r\n              filter.interval\r\n            )\r\n            .pipe(\r\n              catchError((err) => {\r\n                console.log(\r\n                  'Error from dataService.facilityRoomsTimelineDate:' +\r\n                    JSON.stringify(err)\r\n                );\r\n                return of([]);\r\n              }),\r\n              map((data) => ({ filter, data }))\r\n            )\r\n        )\r\n      )\r\n      .subscribe((dataAndFilter) => {\r\n        const chartDataPoints: TimelineChartDataPoint[] = [];\r\n        const rooms = dataAndFilter.data.map((d) => d.room);\r\n        const roomLookup = keyBy(rooms, (r) => r.roomNumber);\r\n        const timestamps = (dataAndFilter.data || [])\r\n          .filter((x) => x.points.some(Boolean))\r\n          .map((x) => x.points[0].timestamp);\r\n        const minTimestamp = timestamps.reduce(function (a, b) {\r\n          return a < b ? a : b;\r\n        },Number.MAX_VALUE);\r\n\r\n        for (const x of dataAndFilter.data) {\r\n          if (!x.points.some(Boolean)) {\r\n            x.points = [\r\n              {\r\n                timestamp: minTimestamp,\r\n                numeric_value: 1\r\n              },\r\n              {\r\n                timestamp: dataAndFilter.filter.endDate.getTime(),\r\n                numeric_value: 1\r\n              }\r\n            ];\r\n          }\r\n\r\n          x.points.sort((a, b) => a.timestamp - b.timestamp);\r\n          let startTime = x.points[0].timestamp;\r\n          for (const y of x.points) {\r\n            if (y.timestamp < dataAndFilter.filter.startDate.getTime()) {\r\n              console.log('error - timestamp before request time');\r\n            }\r\n            const point: TimelineChartDataPoint = {\r\n              locationName: x.room.roomNumber,\r\n              tag: x.tag,\r\n              startDate: new Date(startTime),\r\n              endDate: new Date(Math.max(y.timestamp, startTime)),\r\n              statusColor: this.statusColor(y.numeric_value),\r\n              chillerStatusLabel: this.chillerStatusLabel(y.numeric_value)\r\n            };\r\n\r\n            startTime = y.timestamp;\r\n            chartDataPoints.push(point);\r\n          }\r\n        }\r\n\r\n        this._timelineChartData$.next({\r\n          points: chartDataPoints,\r\n          locations: roomLookup,\r\n          locationType: 'room'\r\n        });\r\n      });\r\n  } // end contstructor\r\n\r\n  private _ic$: Subject<string>;\r\n  public setIC(ic: string) {\r\n    this._ic$.next(ic);\r\n  }\r\n\r\n  private _piDataFilter$: BehaviorSubject<PiDataFilter>;\r\n  public filterPiData(filter: PiDataFilter) {\r\n    this._piDataFilter$.next(filter);\r\n  }\r\n  public get piDataFilter$() {\r\n    return this._piDataFilter$ as Observable<PiDataFilter>;\r\n  }\r\n\r\n  public get isFacilityAll$() {\r\n    return this._piDataFilter$.pipe(\r\n      map((f) => {\r\n        return Number(f.facility) === 0;\r\n      })\r\n    );\r\n  }\r\n\r\n  private _svgMap$: Subject<SvgMap>;\r\n  public get svgMap$() {\r\n    return this._svgMap$ as Observable<SvgMap>;\r\n  }\r\n\r\n  private _currentStatusValues$: BehaviorSubject<LocationCurrentStatus[]>;\r\n  private _pinStates: BehaviorSubject<locationStatusLookup>;\r\n\r\n  public get pinStates$() {\r\n    return this._pinStates as Observable<locationStatusLookup>;\r\n  }\r\n\r\n  private _parameterValues$: BehaviorSubject<Room[]>;\r\n  public get parameterValues$() {\r\n    return this._parameterValues$ as Observable<Room[]>;\r\n  }\r\n\r\n  private _timelineChartData$: Subject<TimelineChartData>;\r\n  public get timelineChartData$() {\r\n    return this._timelineChartData$ as Observable<TimelineChartData>;\r\n  }\r\n\r\n  private _svgMapBackgroundImageUrl$: Subject<string>;\r\n  public get svgMapBackgroundImageUrl$() {\r\n    return this._svgMapBackgroundImageUrl$ as Observable<string>;\r\n  }\r\n\r\n  private _selectedPin$: Subject<string>;\r\n  public get selectedPin$() {\r\n    return this._selectedPin$ as Observable<string>;\r\n  }\r\n\r\n  private _hoveredPin$: Subject<string>;\r\n  public get hoveredPin$() {\r\n    return this._hoveredPin$ as Observable<string>;\r\n  }\r\n\r\n  private _hoveredTimelineLabel$: Subject<string>;\r\n  public get hoveredTimelineLabel$() {\r\n    return this._hoveredTimelineLabel$ as Observable<string>;\r\n  }\r\n\r\n  private _selectedRoomInfo$: Subject<roomInfoLookup>;\r\n  public get selectedRoomInfo$() {\r\n    return this._selectedRoomInfo$ as Observable<roomInfoLookup>;\r\n  }\r\n\r\n  public setSelectedPin(pinName: string) {\r\n    this._selectedPin$.next(pinName);\r\n  }\r\n\r\n  public setHoveredPin(pinName: string) {\r\n    this._hoveredPin$.next(pinName);\r\n  }\r\n\r\n  public setHoveredTimelineLabel(label: string) {\r\n    this._hoveredTimelineLabel$.next(label);\r\n  }\r\n\r\n  private _apfLimits$: BehaviorSubject<apfLimitsLookup>;\r\n  public get apfLimits$() {\r\n    return this._apfLimits$ as Observable<apfLimitsLookup>;\r\n  }\r\n\r\n  private statusColor = (statusVal: number) => {\r\n    switch (statusVal) {\r\n      case 0:\r\n        return 'green';\r\n      case 1:\r\n        return 'gray';\r\n      case 2:\r\n        return 'yellow';\r\n      case 3:\r\n        return 'red';\r\n      default:\r\n        return 'lightgray';\r\n    }\r\n  };\r\n\r\n  private chillerStatusLabel = (statusVal: number) => {\r\n    switch (statusVal) {\r\n      case 0:\r\n        return 'Within Spec';\r\n      case 1:\r\n        return 'Comm Loss';\r\n      case 2:\r\n        return 'Warning';\r\n      case 3:\r\n        return 'Alarm (our of Spec)';\r\n      default:\r\n        return '';\r\n    }\r\n  };\r\n\r\n  public gsfGrowthByClassification$ = this.dataService\r\n    .gsfGrowthByClassification()\r\n    .pipe(\r\n      map((d: any) =>\r\n        d.map((x: any) => {\r\n          const goLiveDate = new Date(x.goLiveDate);\r\n          return [\r\n            goLiveDate,\r\n            x.cncRoomsArea + x.iso8RoomsArea + x.iso7RoomsArea,\r\n            x.criticalEnvironmentParametersCount\r\n          ];\r\n        })\r\n      )\r\n    );\r\n\r\n  private _facilityFilterOptions$: BehaviorSubject<\r\n    { repName: string; sectionName: string; value: string }[]\r\n  >;\r\n  public get facilityFilterOptions$() {\r\n    return this._facilityFilterOptions$ as Observable<\r\n      { repName: string; sectionName: string; value: string }[]\r\n    >;\r\n  }\r\n}\r\n",
            "properties": [
                {
                    "name": "numeric_value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 56
                },
                {
                    "name": "timeStamp",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 55
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "SvgMap",
            "id": "interface-SvgMap-8408807dea59d4e826f1720591bfbe8745c9acd766b0b8f48e089a9a7bd19f22a2c9dd5e11e02405094723e7fabc83d8a9847ed731f3baa73f0399b5e2c5c7e5",
            "file": "src/app/api/models/svgMap.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface SvgMapPin {\r\n  id: number;\r\n  locationId: string;\r\n  title: string;\r\n  cx: number;\r\n  cy: number;\r\n  r: number;\r\n  path: string;\r\n}\r\n\r\nexport interface SvgMapArrow {\r\n  id: number;\r\n  locationId: string;\r\n\r\n  arrowOutlinePoints: string;\r\n  arrowInsidePoints: string;\r\n}\r\n\r\nexport interface SvgMap {\r\n  id: number;\r\n  name: string;\r\n  defs: string;\r\n  backgroundSvg: string;\r\n  viewbox: string;\r\n  facilityId: number;\r\n  svgMapPins: SvgMapPin[];\r\n  svgMapArrows: SvgMapArrow[];\r\n}\r\n\r\nexport const defaultSvgMap: SvgMap = {\r\n  id: 0,\r\n  backgroundSvg: '',\r\n  name: '',\r\n  svgMapPins: [],\r\n  svgMapArrows: [],\r\n  viewbox: '0 0 0 0',\r\n  defs: '',\r\n  facilityId: 0\r\n};\r\n",
            "properties": [
                {
                    "name": "backgroundSvg",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "defs",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "facilityId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "svgMapArrows",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SvgMapArrow[]",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "svgMapPins",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SvgMapPin[]",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "viewbox",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 24
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "SvgMapArrow",
            "id": "interface-SvgMapArrow-8408807dea59d4e826f1720591bfbe8745c9acd766b0b8f48e089a9a7bd19f22a2c9dd5e11e02405094723e7fabc83d8a9847ed731f3baa73f0399b5e2c5c7e5",
            "file": "src/app/api/models/svgMap.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface SvgMapPin {\r\n  id: number;\r\n  locationId: string;\r\n  title: string;\r\n  cx: number;\r\n  cy: number;\r\n  r: number;\r\n  path: string;\r\n}\r\n\r\nexport interface SvgMapArrow {\r\n  id: number;\r\n  locationId: string;\r\n\r\n  arrowOutlinePoints: string;\r\n  arrowInsidePoints: string;\r\n}\r\n\r\nexport interface SvgMap {\r\n  id: number;\r\n  name: string;\r\n  defs: string;\r\n  backgroundSvg: string;\r\n  viewbox: string;\r\n  facilityId: number;\r\n  svgMapPins: SvgMapPin[];\r\n  svgMapArrows: SvgMapArrow[];\r\n}\r\n\r\nexport const defaultSvgMap: SvgMap = {\r\n  id: 0,\r\n  backgroundSvg: '',\r\n  name: '',\r\n  svgMapPins: [],\r\n  svgMapArrows: [],\r\n  viewbox: '0 0 0 0',\r\n  defs: '',\r\n  facilityId: 0\r\n};\r\n",
            "properties": [
                {
                    "name": "arrowInsidePoints",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "arrowOutlinePoints",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "locationId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "SvgMapPin",
            "id": "interface-SvgMapPin-8408807dea59d4e826f1720591bfbe8745c9acd766b0b8f48e089a9a7bd19f22a2c9dd5e11e02405094723e7fabc83d8a9847ed731f3baa73f0399b5e2c5c7e5",
            "file": "src/app/api/models/svgMap.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface SvgMapPin {\r\n  id: number;\r\n  locationId: string;\r\n  title: string;\r\n  cx: number;\r\n  cy: number;\r\n  r: number;\r\n  path: string;\r\n}\r\n\r\nexport interface SvgMapArrow {\r\n  id: number;\r\n  locationId: string;\r\n\r\n  arrowOutlinePoints: string;\r\n  arrowInsidePoints: string;\r\n}\r\n\r\nexport interface SvgMap {\r\n  id: number;\r\n  name: string;\r\n  defs: string;\r\n  backgroundSvg: string;\r\n  viewbox: string;\r\n  facilityId: number;\r\n  svgMapPins: SvgMapPin[];\r\n  svgMapArrows: SvgMapArrow[];\r\n}\r\n\r\nexport const defaultSvgMap: SvgMap = {\r\n  id: 0,\r\n  backgroundSvg: '',\r\n  name: '',\r\n  svgMapPins: [],\r\n  svgMapArrows: [],\r\n  viewbox: '0 0 0 0',\r\n  defs: '',\r\n  facilityId: 0\r\n};\r\n",
            "properties": [
                {
                    "name": "cx",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "cy",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "locationId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "path",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "r",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "TimelineChartData",
            "id": "interface-TimelineChartData-73942ab4d7b0476e3a4847bbfb14cada1cce0e4b3b78892ecc3e5bfc1b110366c5e08abc2d948a561150a69e503608356a8c38bd70c00a4171f2ec0ec0b64651",
            "file": "src/app/apf-portfolio-ic-dashboard/apf-portfolio-ic-dashboard.service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import {\r\n  BehaviorSubject,\r\n  Observable,\r\n  Subject,\r\n  combineLatest,\r\n  distinctUntilChanged,\r\n  filter,\r\n  map,\r\n  mergeMap,\r\n  of,\r\n  zip\r\n} from 'rxjs';\r\nimport {\r\n  LocationCurrentStatus,\r\n  Room,\r\n  SvgMap,\r\n} from 'src/app/api/models';\r\nimport { keyBy, reduce } from 'lodash';\r\n\r\nimport { DataService } from 'src/app/api/data.service';\r\nimport { Injectable } from '@angular/core';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\nexport interface PiDataFilter {\r\n  facility: { repName: string; sectionName: string; value: number };\r\n  status: string;\r\n  startDate: Date;\r\n  endDate: Date;\r\n  interval: number;\r\n}\r\n\r\ninterface TimelineChartDataPoint {\r\n  locationName: string;\r\n  tag: string;\r\n  // statusValue:number,\r\n  chillerStatusLabel: string;\r\n  statusColor: string;\r\n  startDate: Date;\r\n  endDate: Date;\r\n}\r\n\r\nexport interface RoomDisplayField {\r\n  name: string;\r\n  value: string;\r\n  displayType?: string;\r\n}\r\n\r\nexport interface TimelineChartData {\r\n  points: TimelineChartDataPoint[];\r\n  locations: { [name: string]: any };\r\n  locationType: 'room' | 'facility';\r\n}\r\n\r\nexport interface StatusPoint {\r\n  timeStamp: number;\r\n  numeric_value: number;\r\n}\r\n\r\nexport type locationStatusLookup = { [name: string]: string };\r\nexport type roomInfoLookup = { [name: string]: string };\r\nexport type apfLimitsLookup = { [facRoomKey: string]: any };\r\n\r\n@Injectable()\r\nexport class ApfPortfolioIcDashboardService {\r\n  constructor(private dataService: DataService) {\r\n    const defaultStartDate = new Date();\r\n    defaultStartDate.setDate(defaultStartDate.getDate() - 1);\r\n\r\n    const defaultEndDate = new Date();\r\n\r\n    this._piDataFilter$ = new BehaviorSubject<PiDataFilter>({\r\n      facility: { repName: '', sectionName: '', value: 0 },\r\n      status: '',\r\n      startDate: defaultStartDate,\r\n      endDate: defaultEndDate,\r\n      interval: 10\r\n    });\r\n\r\n    this._ic$ = new BehaviorSubject<string>('');\r\n    this._facilityFilterOptions$ = new BehaviorSubject<\r\n      { repName: string; sectionName: string; value: string }[]\r\n    >([]);\r\n    this._svgMap$ = new BehaviorSubject<SvgMap>({\r\n      name: 'apf_facility_all',\r\n      backgroundSvg: '',\r\n      id: 0,\r\n      svgMapPins: [],\r\n      svgMapArrows: [],\r\n      viewbox: '0 0 0 0',\r\n      defs: '',\r\n      facilityId: 0\r\n    });\r\n    this._svgMapBackgroundImageUrl$ = new BehaviorSubject<string>('');\r\n    this._currentStatusValues$ = new BehaviorSubject<LocationCurrentStatus[]>(\r\n      []\r\n    );\r\n    this._parameterValues$ = new BehaviorSubject<Room[]>([]);\r\n    this._timelineChartData$ = new BehaviorSubject<TimelineChartData>({\r\n      points: [],\r\n      locations: {},\r\n      locationType: 'facility'\r\n    });\r\n    this._selectedPin$ = new BehaviorSubject<string>('');\r\n    this._selectedRoomInfo$ = new BehaviorSubject<roomInfoLookup>({});\r\n    this._hoveredPin$ = new BehaviorSubject<string>('');\r\n    this._hoveredTimelineLabel$ = new BehaviorSubject<string>('');\r\n    this._apfLimits$ = new BehaviorSubject<apfLimitsLookup>({});\r\n    this._pinStates = new BehaviorSubject<locationStatusLookup>({});\r\n\r\n    // Set the list of Facilities when the IC changes\r\n    this._ic$\r\n      .pipe(\r\n        filter(Boolean),\r\n        mergeMap((ic: string) => {\r\n          return this.dataService.facilitiesByIC(ic).pipe(\r\n            map((facs) => {\r\n              const facilityOptions = facs.map((fac: any) => {\r\n                const option = {\r\n                  repName: fac.facilityRepName,\r\n                  sectionName: fac.facilitySection,\r\n                  value: fac.facilityId\r\n                };\r\n                return option;\r\n              });\r\n              const all = [\r\n                {\r\n                  repName: `All ${ic.toLocaleUpperCase()}`,\r\n                  sectionName: '',\r\n                  value: '0'\r\n                },\r\n                ...facilityOptions\r\n              ];\r\n              return all;\r\n            })\r\n          );\r\n        })\r\n      )\r\n      .subscribe((facOptions) => {\r\n        this._facilityFilterOptions$.next(facOptions);\r\n      });\r\n\r\n    // Setup APF Limits from PI for all facilities\r\n    this.dataService.apfLimits().subscribe((limits: any[]) => {\r\n      const limitsLookup = reduce(limits, (acc, limit) => {\r\n        \r\n        if(limit.Conn_Room) {\r\n          const name1 = limit.Conn_Room ? `${limit.Room}_${limit.Conn_Room}_DP` : limit.Room;\r\n          const name2 = limit.Conn_Room ? `${limit.Conn_Room}_${limit.Room}_DP` : limit.Room;\r\n          // hard to know room/conn_room order so add lookup for both directions\r\n          return{...acc,\r\n            [`${limit.Facility.toLowerCase()}|${name1.toLowerCase()}`]: limit,\r\n            [`${limit.Facility.toLowerCase()}|${name2.toLowerCase()}`]: limit,\r\n          }\r\n        } else {       \r\n          return{...acc,\r\n            [`${limit.Facility.toLowerCase()}|${limit.Room.toLowerCase()}`]: limit,\r\n          }\r\n        }\r\n\r\n      }\r\n    );\r\n\r\n      this._apfLimits$.next(limitsLookup);\r\n    });\r\n\r\n    // create an observable of the facility selected in the fillter control\r\n    const selectedFacility$ = this._piDataFilter$.pipe(\r\n      distinctUntilChanged(\r\n        (prev, curr) => prev.facility.value === curr.facility.value\r\n      ),\r\n      map((f) => f.facility)\r\n    );\r\n    \r\n    // create an observable of the marker type to use with the map - 'pin' or 'arrow'\r\n    const svgMapMarker$ = this._piDataFilter$.pipe(\r\n      map((f) => (f.status.toLowerCase() === 'dp' ? 'arrow' : 'pin')),\r\n      distinctUntilChanged()\r\n    );\r\n\r\n    // Update the floor plan, current status values for rooms, and parameter values for rooms when the facility changes\r\n    selectedFacility$\r\n      .pipe(\r\n        mergeMap((facility) =>\r\n          zip(\r\n            of(facility.value),\r\n            // of([] as any),\r\n            this.dataService.facilityCurrentStatusData(facility.value), // status for each room and attribute in facility\r\n            this.dataService.roomParameterInfo(facility.value) // parameter info from database for each room and attribute in facility\r\n          )\r\n        )\r\n      )\r\n      .subscribe(([facilityId, currentStatusValues, parameterValues]) => {\r\n        const backGroundImageUrl =\r\n          facilityId == 0\r\n            ? 'assets/images/floor-plans/apf_facility_all_background.png'\r\n            : `assets/images/orig-floor-plans/FID${facilityId}_FloorPlan.jpg`;\r\n        this._svgMapBackgroundImageUrl$.next(backGroundImageUrl);\r\n\r\n        this._currentStatusValues$.next(currentStatusValues);\r\n\r\n        const compositeStatusValues = currentStatusValues.filter(\r\n          (x) => x.attribute === 'Composite' || x.locationName.endsWith('_DP')\r\n        );\r\n        const pinStatusLookup = reduce(\r\n          compositeStatusValues,\r\n          (acc, x) => ({\r\n            ...acc,\r\n            [x.locationName]: this.statusColor(x.statusPoint.numeric_value)\r\n          }),\r\n          {}\r\n        );\r\n        this._pinStates.next(pinStatusLookup);\r\n\r\n        this._parameterValues$.next(parameterValues);\r\n\r\n        this._selectedPin$.next('');\r\n        this._selectedRoomInfo$.next({});\r\n      });\r\n\r\n    // Get the pins or arrows for the Svg Floor plan if the facility changes or attriibute changes between not dp and dp\r\n    combineLatest([selectedFacility$, svgMapMarker$])\r\n      .pipe(\r\n        mergeMap(([facility, marker]) => {\r\n          return this.dataService.svgMap(facility.value, marker);\r\n        })\r\n      )\r\n      .subscribe((svgMap) => {\r\n        this._svgMap$.next(svgMap);\r\n      });\r\n\r\n    // when a map pin is selected, prepare room info display data using the apf limits query, current status values, and the room parameters\r\n    this._selectedPin$.pipe(\r\n      filter(Boolean),\r\n      mergeMap((pin:string)=>zip(\r\n        of(pin),\r\n        this.dataService.roomCurrentAttributeData(this._piDataFilter$.value.facility.value,pin)\r\n      ))\r\n    ).subscribe(([pin,roomStatusValues]) => {\r\n      const facility =\r\n        this._piDataFilter$.value.facility.sectionName.toLowerCase();\r\n      const key = `${facility}|${pin.toLowerCase()}`; // pin = room number\r\n      const apfLimits = this._apfLimits$.value[key];\r\n      const isDP = pin.indexOf('DP') > -1;\r\n      const room = isDP ? \r\n        this._parameterValues$.value.find(\r\n          (r) => (r.formattedName.toLowerCase() === pin.toLowerCase())\r\n        ) : \r\n        this._parameterValues$.value.find(\r\n          (r) => (r.roomNumber.toLowerCase() === pin.toLowerCase())\r\n        );\r\n\r\n      const info = {\r\n        ...apfLimits,\r\n        gsf: room?.sq,\r\n        roomParameters: room?.roomParameters,\r\n        roomStatusValues,\r\n        compositeStatus: roomStatusValues.find(\r\n          (x) => x.attribute === 'Composite'\r\n        )?.statusPoint,\r\n        tempStatus: roomStatusValues.find((x) => x.attribute === 'Temp')\r\n          ?.statusPoint,\r\n        rhStatus: roomStatusValues.find((x) => x.attribute === 'Hum')\r\n          ?.statusPoint,\r\n        achStatus: roomStatusValues.find((x) => x.attribute === 'Airx')\r\n          ?.statusPoint,\r\n        dpStatus: roomStatusValues.find((x) => x.attribute === 'DP')\r\n          ?.statusPoint\r\n      };\r\n\r\n      this._selectedRoomInfo$.next(info);\r\n    });\r\n\r\n    // Prepare timeline data for All Facilities Timeline (facilityId == 0)\r\n    const facilityAllFilter$ = this._piDataFilter$.pipe(\r\n      filter((f) => f.facility.value == 0)\r\n    );\r\n\r\n    combineLatest([this._ic$, facilityAllFilter$])\r\n      .pipe(\r\n        filter(([ic, filter]) => Boolean(ic)),\r\n        mergeMap(([ic, filter]) =>\r\n          this.dataService\r\n            .facilityAlltimelineData(\r\n              ic,\r\n              filter.startDate,\r\n              filter.endDate,\r\n              filter.interval\r\n            )\r\n            .pipe(\r\n              catchError((err) => {\r\n                console.log(\r\n                  'Error from dataService.facilityAlltimelineData:' +\r\n                    JSON.stringify(err)\r\n                );\r\n                return of([]);\r\n              }),\r\n              map((data) => ({ filter, data }))\r\n            )\r\n        )\r\n      )\r\n      .subscribe((dataAndFilter) => {\r\n        const chartDataPoints: TimelineChartDataPoint[] = [];\r\n        const facilities = dataAndFilter.data.map((d) => d.facility);\r\n        const facilityLookup = keyBy(facilities, (f) => f.facilityName);\r\n        const timestamps = (dataAndFilter.data || [])\r\n          .filter((x) => x.points.some(Boolean))\r\n          .map((x) => x.points[0].timestamp);\r\n        const minTimestamp = timestamps.reduce(function (a, b) {\r\n          return a < b ? a : b;\r\n        }, Number.MAX_VALUE);\r\n\r\n        for (const x of dataAndFilter.data) {\r\n          if (!x.points.some(Boolean)) {\r\n            x.points = [\r\n              {\r\n                timestamp: minTimestamp,\r\n                numeric_value: 1\r\n              },\r\n              {\r\n                timestamp: dataAndFilter.filter.endDate.getTime(),\r\n                numeric_value: 1\r\n              }\r\n            ];\r\n          }\r\n\r\n          x.points.sort((a, b) => a.timestamp - b.timestamp);\r\n          let startTime = x.points[0].timestamp;\r\n          for (const y of x.points.sort((a, b) => a.timestamp - b.timestamp)) {\r\n            if (y.timestamp < dataAndFilter.filter.startDate.getTime()) {\r\n              console.log('error - timestamp before request time');\r\n            }\r\n            const point: TimelineChartDataPoint = {\r\n              locationName: x.facility.facilityName,\r\n              tag: x.tag,\r\n              startDate: new Date(startTime),\r\n              endDate: new Date(Math.max(y.timestamp, startTime)),\r\n              statusColor: this.statusColor(y.numeric_value),\r\n              chillerStatusLabel: this.chillerStatusLabel(y.numeric_value)\r\n            };\r\n\r\n            startTime = y.timestamp;\r\n            chartDataPoints.push(point);\r\n          }\r\n        }\r\n\r\n        this._timelineChartData$.next({\r\n          points: chartDataPoints,\r\n          locations: facilityLookup,\r\n          locationType: 'facility'\r\n        });\r\n      });\r\n\r\n    // prepare data for specific facility timeline\r\n    this._piDataFilter$\r\n      .pipe(\r\n        filter((f) => f.facility.value != 0),\r\n        mergeMap((filter: PiDataFilter) =>\r\n          this.dataService\r\n            .facilityRoomsTimelineDate(\r\n              filter.facility.value,\r\n              filter.status,\r\n              filter.startDate,\r\n              filter.endDate,\r\n              filter.interval\r\n            )\r\n            .pipe(\r\n              catchError((err) => {\r\n                console.log(\r\n                  'Error from dataService.facilityRoomsTimelineDate:' +\r\n                    JSON.stringify(err)\r\n                );\r\n                return of([]);\r\n              }),\r\n              map((data) => ({ filter, data }))\r\n            )\r\n        )\r\n      )\r\n      .subscribe((dataAndFilter) => {\r\n        const chartDataPoints: TimelineChartDataPoint[] = [];\r\n        const rooms = dataAndFilter.data.map((d) => d.room);\r\n        const roomLookup = keyBy(rooms, (r) => r.roomNumber);\r\n        const timestamps = (dataAndFilter.data || [])\r\n          .filter((x) => x.points.some(Boolean))\r\n          .map((x) => x.points[0].timestamp);\r\n        const minTimestamp = timestamps.reduce(function (a, b) {\r\n          return a < b ? a : b;\r\n        },Number.MAX_VALUE);\r\n\r\n        for (const x of dataAndFilter.data) {\r\n          if (!x.points.some(Boolean)) {\r\n            x.points = [\r\n              {\r\n                timestamp: minTimestamp,\r\n                numeric_value: 1\r\n              },\r\n              {\r\n                timestamp: dataAndFilter.filter.endDate.getTime(),\r\n                numeric_value: 1\r\n              }\r\n            ];\r\n          }\r\n\r\n          x.points.sort((a, b) => a.timestamp - b.timestamp);\r\n          let startTime = x.points[0].timestamp;\r\n          for (const y of x.points) {\r\n            if (y.timestamp < dataAndFilter.filter.startDate.getTime()) {\r\n              console.log('error - timestamp before request time');\r\n            }\r\n            const point: TimelineChartDataPoint = {\r\n              locationName: x.room.roomNumber,\r\n              tag: x.tag,\r\n              startDate: new Date(startTime),\r\n              endDate: new Date(Math.max(y.timestamp, startTime)),\r\n              statusColor: this.statusColor(y.numeric_value),\r\n              chillerStatusLabel: this.chillerStatusLabel(y.numeric_value)\r\n            };\r\n\r\n            startTime = y.timestamp;\r\n            chartDataPoints.push(point);\r\n          }\r\n        }\r\n\r\n        this._timelineChartData$.next({\r\n          points: chartDataPoints,\r\n          locations: roomLookup,\r\n          locationType: 'room'\r\n        });\r\n      });\r\n  } // end contstructor\r\n\r\n  private _ic$: Subject<string>;\r\n  public setIC(ic: string) {\r\n    this._ic$.next(ic);\r\n  }\r\n\r\n  private _piDataFilter$: BehaviorSubject<PiDataFilter>;\r\n  public filterPiData(filter: PiDataFilter) {\r\n    this._piDataFilter$.next(filter);\r\n  }\r\n  public get piDataFilter$() {\r\n    return this._piDataFilter$ as Observable<PiDataFilter>;\r\n  }\r\n\r\n  public get isFacilityAll$() {\r\n    return this._piDataFilter$.pipe(\r\n      map((f) => {\r\n        return Number(f.facility) === 0;\r\n      })\r\n    );\r\n  }\r\n\r\n  private _svgMap$: Subject<SvgMap>;\r\n  public get svgMap$() {\r\n    return this._svgMap$ as Observable<SvgMap>;\r\n  }\r\n\r\n  private _currentStatusValues$: BehaviorSubject<LocationCurrentStatus[]>;\r\n  private _pinStates: BehaviorSubject<locationStatusLookup>;\r\n\r\n  public get pinStates$() {\r\n    return this._pinStates as Observable<locationStatusLookup>;\r\n  }\r\n\r\n  private _parameterValues$: BehaviorSubject<Room[]>;\r\n  public get parameterValues$() {\r\n    return this._parameterValues$ as Observable<Room[]>;\r\n  }\r\n\r\n  private _timelineChartData$: Subject<TimelineChartData>;\r\n  public get timelineChartData$() {\r\n    return this._timelineChartData$ as Observable<TimelineChartData>;\r\n  }\r\n\r\n  private _svgMapBackgroundImageUrl$: Subject<string>;\r\n  public get svgMapBackgroundImageUrl$() {\r\n    return this._svgMapBackgroundImageUrl$ as Observable<string>;\r\n  }\r\n\r\n  private _selectedPin$: Subject<string>;\r\n  public get selectedPin$() {\r\n    return this._selectedPin$ as Observable<string>;\r\n  }\r\n\r\n  private _hoveredPin$: Subject<string>;\r\n  public get hoveredPin$() {\r\n    return this._hoveredPin$ as Observable<string>;\r\n  }\r\n\r\n  private _hoveredTimelineLabel$: Subject<string>;\r\n  public get hoveredTimelineLabel$() {\r\n    return this._hoveredTimelineLabel$ as Observable<string>;\r\n  }\r\n\r\n  private _selectedRoomInfo$: Subject<roomInfoLookup>;\r\n  public get selectedRoomInfo$() {\r\n    return this._selectedRoomInfo$ as Observable<roomInfoLookup>;\r\n  }\r\n\r\n  public setSelectedPin(pinName: string) {\r\n    this._selectedPin$.next(pinName);\r\n  }\r\n\r\n  public setHoveredPin(pinName: string) {\r\n    this._hoveredPin$.next(pinName);\r\n  }\r\n\r\n  public setHoveredTimelineLabel(label: string) {\r\n    this._hoveredTimelineLabel$.next(label);\r\n  }\r\n\r\n  private _apfLimits$: BehaviorSubject<apfLimitsLookup>;\r\n  public get apfLimits$() {\r\n    return this._apfLimits$ as Observable<apfLimitsLookup>;\r\n  }\r\n\r\n  private statusColor = (statusVal: number) => {\r\n    switch (statusVal) {\r\n      case 0:\r\n        return 'green';\r\n      case 1:\r\n        return 'gray';\r\n      case 2:\r\n        return 'yellow';\r\n      case 3:\r\n        return 'red';\r\n      default:\r\n        return 'lightgray';\r\n    }\r\n  };\r\n\r\n  private chillerStatusLabel = (statusVal: number) => {\r\n    switch (statusVal) {\r\n      case 0:\r\n        return 'Within Spec';\r\n      case 1:\r\n        return 'Comm Loss';\r\n      case 2:\r\n        return 'Warning';\r\n      case 3:\r\n        return 'Alarm (our of Spec)';\r\n      default:\r\n        return '';\r\n    }\r\n  };\r\n\r\n  public gsfGrowthByClassification$ = this.dataService\r\n    .gsfGrowthByClassification()\r\n    .pipe(\r\n      map((d: any) =>\r\n        d.map((x: any) => {\r\n          const goLiveDate = new Date(x.goLiveDate);\r\n          return [\r\n            goLiveDate,\r\n            x.cncRoomsArea + x.iso8RoomsArea + x.iso7RoomsArea,\r\n            x.criticalEnvironmentParametersCount\r\n          ];\r\n        })\r\n      )\r\n    );\r\n\r\n  private _facilityFilterOptions$: BehaviorSubject<\r\n    { repName: string; sectionName: string; value: string }[]\r\n  >;\r\n  public get facilityFilterOptions$() {\r\n    return this._facilityFilterOptions$ as Observable<\r\n      { repName: string; sectionName: string; value: string }[]\r\n    >;\r\n  }\r\n}\r\n",
            "properties": [
                {
                    "name": "locations",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 50
                },
                {
                    "name": "locationType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"room\" | \"facility\"",
                    "optional": false,
                    "description": "",
                    "line": 51
                },
                {
                    "name": "points",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TimelineChartDataPoint[]",
                    "optional": false,
                    "description": "",
                    "line": 49
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "TimelineChartDataPoint",
            "id": "interface-TimelineChartDataPoint-73942ab4d7b0476e3a4847bbfb14cada1cce0e4b3b78892ecc3e5bfc1b110366c5e08abc2d948a561150a69e503608356a8c38bd70c00a4171f2ec0ec0b64651",
            "file": "src/app/apf-portfolio-ic-dashboard/apf-portfolio-ic-dashboard.service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import {\r\n  BehaviorSubject,\r\n  Observable,\r\n  Subject,\r\n  combineLatest,\r\n  distinctUntilChanged,\r\n  filter,\r\n  map,\r\n  mergeMap,\r\n  of,\r\n  zip\r\n} from 'rxjs';\r\nimport {\r\n  LocationCurrentStatus,\r\n  Room,\r\n  SvgMap,\r\n} from 'src/app/api/models';\r\nimport { keyBy, reduce } from 'lodash';\r\n\r\nimport { DataService } from 'src/app/api/data.service';\r\nimport { Injectable } from '@angular/core';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\nexport interface PiDataFilter {\r\n  facility: { repName: string; sectionName: string; value: number };\r\n  status: string;\r\n  startDate: Date;\r\n  endDate: Date;\r\n  interval: number;\r\n}\r\n\r\ninterface TimelineChartDataPoint {\r\n  locationName: string;\r\n  tag: string;\r\n  // statusValue:number,\r\n  chillerStatusLabel: string;\r\n  statusColor: string;\r\n  startDate: Date;\r\n  endDate: Date;\r\n}\r\n\r\nexport interface RoomDisplayField {\r\n  name: string;\r\n  value: string;\r\n  displayType?: string;\r\n}\r\n\r\nexport interface TimelineChartData {\r\n  points: TimelineChartDataPoint[];\r\n  locations: { [name: string]: any };\r\n  locationType: 'room' | 'facility';\r\n}\r\n\r\nexport interface StatusPoint {\r\n  timeStamp: number;\r\n  numeric_value: number;\r\n}\r\n\r\nexport type locationStatusLookup = { [name: string]: string };\r\nexport type roomInfoLookup = { [name: string]: string };\r\nexport type apfLimitsLookup = { [facRoomKey: string]: any };\r\n\r\n@Injectable()\r\nexport class ApfPortfolioIcDashboardService {\r\n  constructor(private dataService: DataService) {\r\n    const defaultStartDate = new Date();\r\n    defaultStartDate.setDate(defaultStartDate.getDate() - 1);\r\n\r\n    const defaultEndDate = new Date();\r\n\r\n    this._piDataFilter$ = new BehaviorSubject<PiDataFilter>({\r\n      facility: { repName: '', sectionName: '', value: 0 },\r\n      status: '',\r\n      startDate: defaultStartDate,\r\n      endDate: defaultEndDate,\r\n      interval: 10\r\n    });\r\n\r\n    this._ic$ = new BehaviorSubject<string>('');\r\n    this._facilityFilterOptions$ = new BehaviorSubject<\r\n      { repName: string; sectionName: string; value: string }[]\r\n    >([]);\r\n    this._svgMap$ = new BehaviorSubject<SvgMap>({\r\n      name: 'apf_facility_all',\r\n      backgroundSvg: '',\r\n      id: 0,\r\n      svgMapPins: [],\r\n      svgMapArrows: [],\r\n      viewbox: '0 0 0 0',\r\n      defs: '',\r\n      facilityId: 0\r\n    });\r\n    this._svgMapBackgroundImageUrl$ = new BehaviorSubject<string>('');\r\n    this._currentStatusValues$ = new BehaviorSubject<LocationCurrentStatus[]>(\r\n      []\r\n    );\r\n    this._parameterValues$ = new BehaviorSubject<Room[]>([]);\r\n    this._timelineChartData$ = new BehaviorSubject<TimelineChartData>({\r\n      points: [],\r\n      locations: {},\r\n      locationType: 'facility'\r\n    });\r\n    this._selectedPin$ = new BehaviorSubject<string>('');\r\n    this._selectedRoomInfo$ = new BehaviorSubject<roomInfoLookup>({});\r\n    this._hoveredPin$ = new BehaviorSubject<string>('');\r\n    this._hoveredTimelineLabel$ = new BehaviorSubject<string>('');\r\n    this._apfLimits$ = new BehaviorSubject<apfLimitsLookup>({});\r\n    this._pinStates = new BehaviorSubject<locationStatusLookup>({});\r\n\r\n    // Set the list of Facilities when the IC changes\r\n    this._ic$\r\n      .pipe(\r\n        filter(Boolean),\r\n        mergeMap((ic: string) => {\r\n          return this.dataService.facilitiesByIC(ic).pipe(\r\n            map((facs) => {\r\n              const facilityOptions = facs.map((fac: any) => {\r\n                const option = {\r\n                  repName: fac.facilityRepName,\r\n                  sectionName: fac.facilitySection,\r\n                  value: fac.facilityId\r\n                };\r\n                return option;\r\n              });\r\n              const all = [\r\n                {\r\n                  repName: `All ${ic.toLocaleUpperCase()}`,\r\n                  sectionName: '',\r\n                  value: '0'\r\n                },\r\n                ...facilityOptions\r\n              ];\r\n              return all;\r\n            })\r\n          );\r\n        })\r\n      )\r\n      .subscribe((facOptions) => {\r\n        this._facilityFilterOptions$.next(facOptions);\r\n      });\r\n\r\n    // Setup APF Limits from PI for all facilities\r\n    this.dataService.apfLimits().subscribe((limits: any[]) => {\r\n      const limitsLookup = reduce(limits, (acc, limit) => {\r\n        \r\n        if(limit.Conn_Room) {\r\n          const name1 = limit.Conn_Room ? `${limit.Room}_${limit.Conn_Room}_DP` : limit.Room;\r\n          const name2 = limit.Conn_Room ? `${limit.Conn_Room}_${limit.Room}_DP` : limit.Room;\r\n          // hard to know room/conn_room order so add lookup for both directions\r\n          return{...acc,\r\n            [`${limit.Facility.toLowerCase()}|${name1.toLowerCase()}`]: limit,\r\n            [`${limit.Facility.toLowerCase()}|${name2.toLowerCase()}`]: limit,\r\n          }\r\n        } else {       \r\n          return{...acc,\r\n            [`${limit.Facility.toLowerCase()}|${limit.Room.toLowerCase()}`]: limit,\r\n          }\r\n        }\r\n\r\n      }\r\n    );\r\n\r\n      this._apfLimits$.next(limitsLookup);\r\n    });\r\n\r\n    // create an observable of the facility selected in the fillter control\r\n    const selectedFacility$ = this._piDataFilter$.pipe(\r\n      distinctUntilChanged(\r\n        (prev, curr) => prev.facility.value === curr.facility.value\r\n      ),\r\n      map((f) => f.facility)\r\n    );\r\n    \r\n    // create an observable of the marker type to use with the map - 'pin' or 'arrow'\r\n    const svgMapMarker$ = this._piDataFilter$.pipe(\r\n      map((f) => (f.status.toLowerCase() === 'dp' ? 'arrow' : 'pin')),\r\n      distinctUntilChanged()\r\n    );\r\n\r\n    // Update the floor plan, current status values for rooms, and parameter values for rooms when the facility changes\r\n    selectedFacility$\r\n      .pipe(\r\n        mergeMap((facility) =>\r\n          zip(\r\n            of(facility.value),\r\n            // of([] as any),\r\n            this.dataService.facilityCurrentStatusData(facility.value), // status for each room and attribute in facility\r\n            this.dataService.roomParameterInfo(facility.value) // parameter info from database for each room and attribute in facility\r\n          )\r\n        )\r\n      )\r\n      .subscribe(([facilityId, currentStatusValues, parameterValues]) => {\r\n        const backGroundImageUrl =\r\n          facilityId == 0\r\n            ? 'assets/images/floor-plans/apf_facility_all_background.png'\r\n            : `assets/images/orig-floor-plans/FID${facilityId}_FloorPlan.jpg`;\r\n        this._svgMapBackgroundImageUrl$.next(backGroundImageUrl);\r\n\r\n        this._currentStatusValues$.next(currentStatusValues);\r\n\r\n        const compositeStatusValues = currentStatusValues.filter(\r\n          (x) => x.attribute === 'Composite' || x.locationName.endsWith('_DP')\r\n        );\r\n        const pinStatusLookup = reduce(\r\n          compositeStatusValues,\r\n          (acc, x) => ({\r\n            ...acc,\r\n            [x.locationName]: this.statusColor(x.statusPoint.numeric_value)\r\n          }),\r\n          {}\r\n        );\r\n        this._pinStates.next(pinStatusLookup);\r\n\r\n        this._parameterValues$.next(parameterValues);\r\n\r\n        this._selectedPin$.next('');\r\n        this._selectedRoomInfo$.next({});\r\n      });\r\n\r\n    // Get the pins or arrows for the Svg Floor plan if the facility changes or attriibute changes between not dp and dp\r\n    combineLatest([selectedFacility$, svgMapMarker$])\r\n      .pipe(\r\n        mergeMap(([facility, marker]) => {\r\n          return this.dataService.svgMap(facility.value, marker);\r\n        })\r\n      )\r\n      .subscribe((svgMap) => {\r\n        this._svgMap$.next(svgMap);\r\n      });\r\n\r\n    // when a map pin is selected, prepare room info display data using the apf limits query, current status values, and the room parameters\r\n    this._selectedPin$.pipe(\r\n      filter(Boolean),\r\n      mergeMap((pin:string)=>zip(\r\n        of(pin),\r\n        this.dataService.roomCurrentAttributeData(this._piDataFilter$.value.facility.value,pin)\r\n      ))\r\n    ).subscribe(([pin,roomStatusValues]) => {\r\n      const facility =\r\n        this._piDataFilter$.value.facility.sectionName.toLowerCase();\r\n      const key = `${facility}|${pin.toLowerCase()}`; // pin = room number\r\n      const apfLimits = this._apfLimits$.value[key];\r\n      const isDP = pin.indexOf('DP') > -1;\r\n      const room = isDP ? \r\n        this._parameterValues$.value.find(\r\n          (r) => (r.formattedName.toLowerCase() === pin.toLowerCase())\r\n        ) : \r\n        this._parameterValues$.value.find(\r\n          (r) => (r.roomNumber.toLowerCase() === pin.toLowerCase())\r\n        );\r\n\r\n      const info = {\r\n        ...apfLimits,\r\n        gsf: room?.sq,\r\n        roomParameters: room?.roomParameters,\r\n        roomStatusValues,\r\n        compositeStatus: roomStatusValues.find(\r\n          (x) => x.attribute === 'Composite'\r\n        )?.statusPoint,\r\n        tempStatus: roomStatusValues.find((x) => x.attribute === 'Temp')\r\n          ?.statusPoint,\r\n        rhStatus: roomStatusValues.find((x) => x.attribute === 'Hum')\r\n          ?.statusPoint,\r\n        achStatus: roomStatusValues.find((x) => x.attribute === 'Airx')\r\n          ?.statusPoint,\r\n        dpStatus: roomStatusValues.find((x) => x.attribute === 'DP')\r\n          ?.statusPoint\r\n      };\r\n\r\n      this._selectedRoomInfo$.next(info);\r\n    });\r\n\r\n    // Prepare timeline data for All Facilities Timeline (facilityId == 0)\r\n    const facilityAllFilter$ = this._piDataFilter$.pipe(\r\n      filter((f) => f.facility.value == 0)\r\n    );\r\n\r\n    combineLatest([this._ic$, facilityAllFilter$])\r\n      .pipe(\r\n        filter(([ic, filter]) => Boolean(ic)),\r\n        mergeMap(([ic, filter]) =>\r\n          this.dataService\r\n            .facilityAlltimelineData(\r\n              ic,\r\n              filter.startDate,\r\n              filter.endDate,\r\n              filter.interval\r\n            )\r\n            .pipe(\r\n              catchError((err) => {\r\n                console.log(\r\n                  'Error from dataService.facilityAlltimelineData:' +\r\n                    JSON.stringify(err)\r\n                );\r\n                return of([]);\r\n              }),\r\n              map((data) => ({ filter, data }))\r\n            )\r\n        )\r\n      )\r\n      .subscribe((dataAndFilter) => {\r\n        const chartDataPoints: TimelineChartDataPoint[] = [];\r\n        const facilities = dataAndFilter.data.map((d) => d.facility);\r\n        const facilityLookup = keyBy(facilities, (f) => f.facilityName);\r\n        const timestamps = (dataAndFilter.data || [])\r\n          .filter((x) => x.points.some(Boolean))\r\n          .map((x) => x.points[0].timestamp);\r\n        const minTimestamp = timestamps.reduce(function (a, b) {\r\n          return a < b ? a : b;\r\n        }, Number.MAX_VALUE);\r\n\r\n        for (const x of dataAndFilter.data) {\r\n          if (!x.points.some(Boolean)) {\r\n            x.points = [\r\n              {\r\n                timestamp: minTimestamp,\r\n                numeric_value: 1\r\n              },\r\n              {\r\n                timestamp: dataAndFilter.filter.endDate.getTime(),\r\n                numeric_value: 1\r\n              }\r\n            ];\r\n          }\r\n\r\n          x.points.sort((a, b) => a.timestamp - b.timestamp);\r\n          let startTime = x.points[0].timestamp;\r\n          for (const y of x.points.sort((a, b) => a.timestamp - b.timestamp)) {\r\n            if (y.timestamp < dataAndFilter.filter.startDate.getTime()) {\r\n              console.log('error - timestamp before request time');\r\n            }\r\n            const point: TimelineChartDataPoint = {\r\n              locationName: x.facility.facilityName,\r\n              tag: x.tag,\r\n              startDate: new Date(startTime),\r\n              endDate: new Date(Math.max(y.timestamp, startTime)),\r\n              statusColor: this.statusColor(y.numeric_value),\r\n              chillerStatusLabel: this.chillerStatusLabel(y.numeric_value)\r\n            };\r\n\r\n            startTime = y.timestamp;\r\n            chartDataPoints.push(point);\r\n          }\r\n        }\r\n\r\n        this._timelineChartData$.next({\r\n          points: chartDataPoints,\r\n          locations: facilityLookup,\r\n          locationType: 'facility'\r\n        });\r\n      });\r\n\r\n    // prepare data for specific facility timeline\r\n    this._piDataFilter$\r\n      .pipe(\r\n        filter((f) => f.facility.value != 0),\r\n        mergeMap((filter: PiDataFilter) =>\r\n          this.dataService\r\n            .facilityRoomsTimelineDate(\r\n              filter.facility.value,\r\n              filter.status,\r\n              filter.startDate,\r\n              filter.endDate,\r\n              filter.interval\r\n            )\r\n            .pipe(\r\n              catchError((err) => {\r\n                console.log(\r\n                  'Error from dataService.facilityRoomsTimelineDate:' +\r\n                    JSON.stringify(err)\r\n                );\r\n                return of([]);\r\n              }),\r\n              map((data) => ({ filter, data }))\r\n            )\r\n        )\r\n      )\r\n      .subscribe((dataAndFilter) => {\r\n        const chartDataPoints: TimelineChartDataPoint[] = [];\r\n        const rooms = dataAndFilter.data.map((d) => d.room);\r\n        const roomLookup = keyBy(rooms, (r) => r.roomNumber);\r\n        const timestamps = (dataAndFilter.data || [])\r\n          .filter((x) => x.points.some(Boolean))\r\n          .map((x) => x.points[0].timestamp);\r\n        const minTimestamp = timestamps.reduce(function (a, b) {\r\n          return a < b ? a : b;\r\n        },Number.MAX_VALUE);\r\n\r\n        for (const x of dataAndFilter.data) {\r\n          if (!x.points.some(Boolean)) {\r\n            x.points = [\r\n              {\r\n                timestamp: minTimestamp,\r\n                numeric_value: 1\r\n              },\r\n              {\r\n                timestamp: dataAndFilter.filter.endDate.getTime(),\r\n                numeric_value: 1\r\n              }\r\n            ];\r\n          }\r\n\r\n          x.points.sort((a, b) => a.timestamp - b.timestamp);\r\n          let startTime = x.points[0].timestamp;\r\n          for (const y of x.points) {\r\n            if (y.timestamp < dataAndFilter.filter.startDate.getTime()) {\r\n              console.log('error - timestamp before request time');\r\n            }\r\n            const point: TimelineChartDataPoint = {\r\n              locationName: x.room.roomNumber,\r\n              tag: x.tag,\r\n              startDate: new Date(startTime),\r\n              endDate: new Date(Math.max(y.timestamp, startTime)),\r\n              statusColor: this.statusColor(y.numeric_value),\r\n              chillerStatusLabel: this.chillerStatusLabel(y.numeric_value)\r\n            };\r\n\r\n            startTime = y.timestamp;\r\n            chartDataPoints.push(point);\r\n          }\r\n        }\r\n\r\n        this._timelineChartData$.next({\r\n          points: chartDataPoints,\r\n          locations: roomLookup,\r\n          locationType: 'room'\r\n        });\r\n      });\r\n  } // end contstructor\r\n\r\n  private _ic$: Subject<string>;\r\n  public setIC(ic: string) {\r\n    this._ic$.next(ic);\r\n  }\r\n\r\n  private _piDataFilter$: BehaviorSubject<PiDataFilter>;\r\n  public filterPiData(filter: PiDataFilter) {\r\n    this._piDataFilter$.next(filter);\r\n  }\r\n  public get piDataFilter$() {\r\n    return this._piDataFilter$ as Observable<PiDataFilter>;\r\n  }\r\n\r\n  public get isFacilityAll$() {\r\n    return this._piDataFilter$.pipe(\r\n      map((f) => {\r\n        return Number(f.facility) === 0;\r\n      })\r\n    );\r\n  }\r\n\r\n  private _svgMap$: Subject<SvgMap>;\r\n  public get svgMap$() {\r\n    return this._svgMap$ as Observable<SvgMap>;\r\n  }\r\n\r\n  private _currentStatusValues$: BehaviorSubject<LocationCurrentStatus[]>;\r\n  private _pinStates: BehaviorSubject<locationStatusLookup>;\r\n\r\n  public get pinStates$() {\r\n    return this._pinStates as Observable<locationStatusLookup>;\r\n  }\r\n\r\n  private _parameterValues$: BehaviorSubject<Room[]>;\r\n  public get parameterValues$() {\r\n    return this._parameterValues$ as Observable<Room[]>;\r\n  }\r\n\r\n  private _timelineChartData$: Subject<TimelineChartData>;\r\n  public get timelineChartData$() {\r\n    return this._timelineChartData$ as Observable<TimelineChartData>;\r\n  }\r\n\r\n  private _svgMapBackgroundImageUrl$: Subject<string>;\r\n  public get svgMapBackgroundImageUrl$() {\r\n    return this._svgMapBackgroundImageUrl$ as Observable<string>;\r\n  }\r\n\r\n  private _selectedPin$: Subject<string>;\r\n  public get selectedPin$() {\r\n    return this._selectedPin$ as Observable<string>;\r\n  }\r\n\r\n  private _hoveredPin$: Subject<string>;\r\n  public get hoveredPin$() {\r\n    return this._hoveredPin$ as Observable<string>;\r\n  }\r\n\r\n  private _hoveredTimelineLabel$: Subject<string>;\r\n  public get hoveredTimelineLabel$() {\r\n    return this._hoveredTimelineLabel$ as Observable<string>;\r\n  }\r\n\r\n  private _selectedRoomInfo$: Subject<roomInfoLookup>;\r\n  public get selectedRoomInfo$() {\r\n    return this._selectedRoomInfo$ as Observable<roomInfoLookup>;\r\n  }\r\n\r\n  public setSelectedPin(pinName: string) {\r\n    this._selectedPin$.next(pinName);\r\n  }\r\n\r\n  public setHoveredPin(pinName: string) {\r\n    this._hoveredPin$.next(pinName);\r\n  }\r\n\r\n  public setHoveredTimelineLabel(label: string) {\r\n    this._hoveredTimelineLabel$.next(label);\r\n  }\r\n\r\n  private _apfLimits$: BehaviorSubject<apfLimitsLookup>;\r\n  public get apfLimits$() {\r\n    return this._apfLimits$ as Observable<apfLimitsLookup>;\r\n  }\r\n\r\n  private statusColor = (statusVal: number) => {\r\n    switch (statusVal) {\r\n      case 0:\r\n        return 'green';\r\n      case 1:\r\n        return 'gray';\r\n      case 2:\r\n        return 'yellow';\r\n      case 3:\r\n        return 'red';\r\n      default:\r\n        return 'lightgray';\r\n    }\r\n  };\r\n\r\n  private chillerStatusLabel = (statusVal: number) => {\r\n    switch (statusVal) {\r\n      case 0:\r\n        return 'Within Spec';\r\n      case 1:\r\n        return 'Comm Loss';\r\n      case 2:\r\n        return 'Warning';\r\n      case 3:\r\n        return 'Alarm (our of Spec)';\r\n      default:\r\n        return '';\r\n    }\r\n  };\r\n\r\n  public gsfGrowthByClassification$ = this.dataService\r\n    .gsfGrowthByClassification()\r\n    .pipe(\r\n      map((d: any) =>\r\n        d.map((x: any) => {\r\n          const goLiveDate = new Date(x.goLiveDate);\r\n          return [\r\n            goLiveDate,\r\n            x.cncRoomsArea + x.iso8RoomsArea + x.iso7RoomsArea,\r\n            x.criticalEnvironmentParametersCount\r\n          ];\r\n        })\r\n      )\r\n    );\r\n\r\n  private _facilityFilterOptions$: BehaviorSubject<\r\n    { repName: string; sectionName: string; value: string }[]\r\n  >;\r\n  public get facilityFilterOptions$() {\r\n    return this._facilityFilterOptions$ as Observable<\r\n      { repName: string; sectionName: string; value: string }[]\r\n    >;\r\n  }\r\n}\r\n",
            "properties": [
                {
                    "name": "chillerStatusLabel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 36
                },
                {
                    "name": "endDate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "optional": false,
                    "description": "",
                    "line": 39
                },
                {
                    "name": "locationName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "startDate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "optional": false,
                    "description": "",
                    "line": 38
                },
                {
                    "name": "statusColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 37
                },
                {
                    "name": "tag",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 34
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "TimeSeriesPoint",
            "id": "interface-TimeSeriesPoint-76c68cc294c66cc4dd47198bbb51f5890b9331191bd46f1d670a3c935a7e43caed002c589150456c62a9d1d275ba3151bcafb3c8382a661ce441d71f48e8f5b4",
            "file": "src/app/api/models/timeline.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Facility, Room } from '.';\r\n\r\nexport interface TimeSeriesPoint {\r\n  timestamp: number;\r\n  numeric_value: number;\r\n}\r\n\r\nexport interface LocationTimeSeriesData<T> {\r\n  location: T; //facility or room\r\n  tag: string; // piPath\r\n  points: TimeSeriesPoint[];\r\n}\r\n\r\nexport interface FacilityTimeSeriesData {\r\n  facility: Facility;\r\n  tag: string; // piPath\r\n  points: TimeSeriesPoint[];\r\n}\r\n\r\nexport interface RoomTimeSeriesData {\r\n  room: Room;\r\n  tag: string; // piPath\r\n  points: TimeSeriesPoint[];\r\n}\r\n\r\nexport interface LocationCurrentStatus {\r\n  locationName: string; //facility or room name\r\n  attribute: 'Composite' | 'Temp' | 'Hum' | 'Airx' | 'DP';\r\n  statusPoint: TimeSeriesPoint;\r\n}\r\n\r\nexport interface LocationQuery {\r\n  locationName: string;\r\n  tag: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "numeric_value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "timestamp",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "User",
            "id": "interface-User-9c7e5f1bbbab702cb032307d130876cb68969b0cd4eedef32a0c8cad8081a54e5f8f577ed6ad4539c1b99a1d246cb34031d198c2ea8eba440e64e91b14f01fdc",
            "file": "src/stories/User.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface User {}\n",
            "properties": [],
            "indexSignatures": [],
            "methods": []
        }
    ],
    "injectables": [
        {
            "name": "ApfPortfolioAllDashboardService",
            "id": "injectable-ApfPortfolioAllDashboardService-ce099dc44b1cb99dbcfd24b66b4e90c7ffb39f37ac9ce33d5bef73cdec27864f6f795220eccb365db8e702e3ee4d81c9fa5365de2aed0f9ea644fdb68b02ffbe",
            "file": "src/app/apf-portfolio-all-dashboard/apf-portfolio-all-dashboard.service.ts",
            "properties": [
                {
                    "name": "gsfByFacility$",
                    "defaultValue": "this.dataService\r\n    .gsfByFacility()\r\n    .pipe(map((d: any) => d.map((x: any) => [x.facility, x.gsf])))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "gsfByIC$",
                    "defaultValue": "this.dataService\r\n    .gsfByIC()\r\n    .pipe(map((d: any) => d.map((x: any) => [x.ic, x.gsf])))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "gsfGrowthByClassification$",
                    "defaultValue": "this.dataService\r\n    .gsfGrowthByClassification()\r\n    .pipe(\r\n      map((d: any) =>\r\n        d.map((x: any) => {\r\n          const goLiveDate = new Date(x.goLiveDate);\r\n          return [goLiveDate, x.cncRoomsArea, x.iso8RoomsArea, x.iso7RoomsArea];\r\n        })\r\n      )\r\n    )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17
                }
            ],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { DataService } from 'src/app/api/data.service';\r\nimport { Injectable } from '@angular/core';\r\nimport { map } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class ApfPortfolioAllDashboardService {\r\n  constructor(private dataService: DataService) {}\r\n\r\n  gsfByFacility$ = this.dataService\r\n    .gsfByFacility()\r\n    .pipe(map((d: any) => d.map((x: any) => [x.facility, x.gsf])));\r\n\r\n  gsfByIC$ = this.dataService\r\n    .gsfByIC()\r\n    .pipe(map((d: any) => d.map((x: any) => [x.ic, x.gsf])));\r\n\r\n  gsfGrowthByClassification$ = this.dataService\r\n    .gsfGrowthByClassification()\r\n    .pipe(\r\n      map((d: any) =>\r\n        d.map((x: any) => {\r\n          const goLiveDate = new Date(x.goLiveDate);\r\n          return [goLiveDate, x.cncRoomsArea, x.iso8RoomsArea, x.iso7RoomsArea];\r\n        })\r\n      )\r\n    );\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "dataService",
                        "type": "DataService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 6,
                "jsdoctags": [
                    {
                        "name": "dataService",
                        "type": "DataService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "ApfPortfolioIcDashboardService",
            "id": "injectable-ApfPortfolioIcDashboardService-73942ab4d7b0476e3a4847bbfb14cada1cce0e4b3b78892ecc3e5bfc1b110366c5e08abc2d948a561150a69e503608356a8c38bd70c00a4171f2ec0ec0b64651",
            "file": "src/app/apf-portfolio-ic-dashboard/apf-portfolio-ic-dashboard.service.ts",
            "properties": [
                {
                    "name": "_apfLimits$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<apfLimitsLookup>",
                    "optional": false,
                    "description": "",
                    "line": 511,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_currentStatusValues$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<LocationCurrentStatus[]>",
                    "optional": false,
                    "description": "",
                    "line": 457,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_facilityFilterOptions$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<literal type[]>",
                    "optional": false,
                    "description": "",
                    "line": 561,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_hoveredPin$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subject<string>",
                    "optional": false,
                    "description": "",
                    "line": 484,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_hoveredTimelineLabel$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subject<string>",
                    "optional": false,
                    "description": "",
                    "line": 489,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_ic$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subject<string>",
                    "optional": false,
                    "description": "",
                    "line": 431,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_parameterValues$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<Room[]>",
                    "optional": false,
                    "description": "",
                    "line": 464,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_piDataFilter$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<PiDataFilter>",
                    "optional": false,
                    "description": "",
                    "line": 436,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_pinStates",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<locationStatusLookup>",
                    "optional": false,
                    "description": "",
                    "line": 458,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_selectedPin$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subject<string>",
                    "optional": false,
                    "description": "",
                    "line": 479,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_selectedRoomInfo$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subject<roomInfoLookup>",
                    "optional": false,
                    "description": "",
                    "line": 494,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_svgMap$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subject<SvgMap>",
                    "optional": false,
                    "description": "",
                    "line": 452,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_svgMapBackgroundImageUrl$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subject<string>",
                    "optional": false,
                    "description": "",
                    "line": 474,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_timelineChartData$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subject<TimelineChartData>",
                    "optional": false,
                    "description": "",
                    "line": 469,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "chillerStatusLabel",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 531,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "gsfGrowthByClassification$",
                    "defaultValue": "this.dataService\r\n    .gsfGrowthByClassification()\r\n    .pipe(\r\n      map((d: any) =>\r\n        d.map((x: any) => {\r\n          const goLiveDate = new Date(x.goLiveDate);\r\n          return [\r\n            goLiveDate,\r\n            x.cncRoomsArea + x.iso8RoomsArea + x.iso7RoomsArea,\r\n            x.criticalEnvironmentParametersCount\r\n          ];\r\n        })\r\n      )\r\n    )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 546,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "statusColor",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 516,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methods": [
                {
                    "name": "filterPiData",
                    "args": [
                        {
                            "name": "filter",
                            "type": "PiDataFilter",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 437,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "filter",
                            "type": "PiDataFilter",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setHoveredPin",
                    "args": [
                        {
                            "name": "pinName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 503,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "pinName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setHoveredTimelineLabel",
                    "args": [
                        {
                            "name": "label",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 507,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "label",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setIC",
                    "args": [
                        {
                            "name": "ic",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 432,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "ic",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setSelectedPin",
                    "args": [
                        {
                            "name": "pinName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 499,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "pinName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import {\r\n  BehaviorSubject,\r\n  Observable,\r\n  Subject,\r\n  combineLatest,\r\n  distinctUntilChanged,\r\n  filter,\r\n  map,\r\n  mergeMap,\r\n  of,\r\n  zip\r\n} from 'rxjs';\r\nimport {\r\n  LocationCurrentStatus,\r\n  Room,\r\n  SvgMap,\r\n} from 'src/app/api/models';\r\nimport { keyBy, reduce } from 'lodash';\r\n\r\nimport { DataService } from 'src/app/api/data.service';\r\nimport { Injectable } from '@angular/core';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\nexport interface PiDataFilter {\r\n  facility: { repName: string; sectionName: string; value: number };\r\n  status: string;\r\n  startDate: Date;\r\n  endDate: Date;\r\n  interval: number;\r\n}\r\n\r\ninterface TimelineChartDataPoint {\r\n  locationName: string;\r\n  tag: string;\r\n  // statusValue:number,\r\n  chillerStatusLabel: string;\r\n  statusColor: string;\r\n  startDate: Date;\r\n  endDate: Date;\r\n}\r\n\r\nexport interface RoomDisplayField {\r\n  name: string;\r\n  value: string;\r\n  displayType?: string;\r\n}\r\n\r\nexport interface TimelineChartData {\r\n  points: TimelineChartDataPoint[];\r\n  locations: { [name: string]: any };\r\n  locationType: 'room' | 'facility';\r\n}\r\n\r\nexport interface StatusPoint {\r\n  timeStamp: number;\r\n  numeric_value: number;\r\n}\r\n\r\nexport type locationStatusLookup = { [name: string]: string };\r\nexport type roomInfoLookup = { [name: string]: string };\r\nexport type apfLimitsLookup = { [facRoomKey: string]: any };\r\n\r\n@Injectable()\r\nexport class ApfPortfolioIcDashboardService {\r\n  constructor(private dataService: DataService) {\r\n    const defaultStartDate = new Date();\r\n    defaultStartDate.setDate(defaultStartDate.getDate() - 1);\r\n\r\n    const defaultEndDate = new Date();\r\n\r\n    this._piDataFilter$ = new BehaviorSubject<PiDataFilter>({\r\n      facility: { repName: '', sectionName: '', value: 0 },\r\n      status: '',\r\n      startDate: defaultStartDate,\r\n      endDate: defaultEndDate,\r\n      interval: 10\r\n    });\r\n\r\n    this._ic$ = new BehaviorSubject<string>('');\r\n    this._facilityFilterOptions$ = new BehaviorSubject<\r\n      { repName: string; sectionName: string; value: string }[]\r\n    >([]);\r\n    this._svgMap$ = new BehaviorSubject<SvgMap>({\r\n      name: 'apf_facility_all',\r\n      backgroundSvg: '',\r\n      id: 0,\r\n      svgMapPins: [],\r\n      svgMapArrows: [],\r\n      viewbox: '0 0 0 0',\r\n      defs: '',\r\n      facilityId: 0\r\n    });\r\n    this._svgMapBackgroundImageUrl$ = new BehaviorSubject<string>('');\r\n    this._currentStatusValues$ = new BehaviorSubject<LocationCurrentStatus[]>(\r\n      []\r\n    );\r\n    this._parameterValues$ = new BehaviorSubject<Room[]>([]);\r\n    this._timelineChartData$ = new BehaviorSubject<TimelineChartData>({\r\n      points: [],\r\n      locations: {},\r\n      locationType: 'facility'\r\n    });\r\n    this._selectedPin$ = new BehaviorSubject<string>('');\r\n    this._selectedRoomInfo$ = new BehaviorSubject<roomInfoLookup>({});\r\n    this._hoveredPin$ = new BehaviorSubject<string>('');\r\n    this._hoveredTimelineLabel$ = new BehaviorSubject<string>('');\r\n    this._apfLimits$ = new BehaviorSubject<apfLimitsLookup>({});\r\n    this._pinStates = new BehaviorSubject<locationStatusLookup>({});\r\n\r\n    // Set the list of Facilities when the IC changes\r\n    this._ic$\r\n      .pipe(\r\n        filter(Boolean),\r\n        mergeMap((ic: string) => {\r\n          return this.dataService.facilitiesByIC(ic).pipe(\r\n            map((facs) => {\r\n              const facilityOptions = facs.map((fac: any) => {\r\n                const option = {\r\n                  repName: fac.facilityRepName,\r\n                  sectionName: fac.facilitySection,\r\n                  value: fac.facilityId\r\n                };\r\n                return option;\r\n              });\r\n              const all = [\r\n                {\r\n                  repName: `All ${ic.toLocaleUpperCase()}`,\r\n                  sectionName: '',\r\n                  value: '0'\r\n                },\r\n                ...facilityOptions\r\n              ];\r\n              return all;\r\n            })\r\n          );\r\n        })\r\n      )\r\n      .subscribe((facOptions) => {\r\n        this._facilityFilterOptions$.next(facOptions);\r\n      });\r\n\r\n    // Setup APF Limits from PI for all facilities\r\n    this.dataService.apfLimits().subscribe((limits: any[]) => {\r\n      const limitsLookup = reduce(limits, (acc, limit) => {\r\n        \r\n        if(limit.Conn_Room) {\r\n          const name1 = limit.Conn_Room ? `${limit.Room}_${limit.Conn_Room}_DP` : limit.Room;\r\n          const name2 = limit.Conn_Room ? `${limit.Conn_Room}_${limit.Room}_DP` : limit.Room;\r\n          // hard to know room/conn_room order so add lookup for both directions\r\n          return{...acc,\r\n            [`${limit.Facility.toLowerCase()}|${name1.toLowerCase()}`]: limit,\r\n            [`${limit.Facility.toLowerCase()}|${name2.toLowerCase()}`]: limit,\r\n          }\r\n        } else {       \r\n          return{...acc,\r\n            [`${limit.Facility.toLowerCase()}|${limit.Room.toLowerCase()}`]: limit,\r\n          }\r\n        }\r\n\r\n      }\r\n    );\r\n\r\n      this._apfLimits$.next(limitsLookup);\r\n    });\r\n\r\n    // create an observable of the facility selected in the fillter control\r\n    const selectedFacility$ = this._piDataFilter$.pipe(\r\n      distinctUntilChanged(\r\n        (prev, curr) => prev.facility.value === curr.facility.value\r\n      ),\r\n      map((f) => f.facility)\r\n    );\r\n    \r\n    // create an observable of the marker type to use with the map - 'pin' or 'arrow'\r\n    const svgMapMarker$ = this._piDataFilter$.pipe(\r\n      map((f) => (f.status.toLowerCase() === 'dp' ? 'arrow' : 'pin')),\r\n      distinctUntilChanged()\r\n    );\r\n\r\n    // Update the floor plan, current status values for rooms, and parameter values for rooms when the facility changes\r\n    selectedFacility$\r\n      .pipe(\r\n        mergeMap((facility) =>\r\n          zip(\r\n            of(facility.value),\r\n            // of([] as any),\r\n            this.dataService.facilityCurrentStatusData(facility.value), // status for each room and attribute in facility\r\n            this.dataService.roomParameterInfo(facility.value) // parameter info from database for each room and attribute in facility\r\n          )\r\n        )\r\n      )\r\n      .subscribe(([facilityId, currentStatusValues, parameterValues]) => {\r\n        const backGroundImageUrl =\r\n          facilityId == 0\r\n            ? 'assets/images/floor-plans/apf_facility_all_background.png'\r\n            : `assets/images/orig-floor-plans/FID${facilityId}_FloorPlan.jpg`;\r\n        this._svgMapBackgroundImageUrl$.next(backGroundImageUrl);\r\n\r\n        this._currentStatusValues$.next(currentStatusValues);\r\n\r\n        const compositeStatusValues = currentStatusValues.filter(\r\n          (x) => x.attribute === 'Composite' || x.locationName.endsWith('_DP')\r\n        );\r\n        const pinStatusLookup = reduce(\r\n          compositeStatusValues,\r\n          (acc, x) => ({\r\n            ...acc,\r\n            [x.locationName]: this.statusColor(x.statusPoint.numeric_value)\r\n          }),\r\n          {}\r\n        );\r\n        this._pinStates.next(pinStatusLookup);\r\n\r\n        this._parameterValues$.next(parameterValues);\r\n\r\n        this._selectedPin$.next('');\r\n        this._selectedRoomInfo$.next({});\r\n      });\r\n\r\n    // Get the pins or arrows for the Svg Floor plan if the facility changes or attriibute changes between not dp and dp\r\n    combineLatest([selectedFacility$, svgMapMarker$])\r\n      .pipe(\r\n        mergeMap(([facility, marker]) => {\r\n          return this.dataService.svgMap(facility.value, marker);\r\n        })\r\n      )\r\n      .subscribe((svgMap) => {\r\n        this._svgMap$.next(svgMap);\r\n      });\r\n\r\n    // when a map pin is selected, prepare room info display data using the apf limits query, current status values, and the room parameters\r\n    this._selectedPin$.pipe(\r\n      filter(Boolean),\r\n      mergeMap((pin:string)=>zip(\r\n        of(pin),\r\n        this.dataService.roomCurrentAttributeData(this._piDataFilter$.value.facility.value,pin)\r\n      ))\r\n    ).subscribe(([pin,roomStatusValues]) => {\r\n      const facility =\r\n        this._piDataFilter$.value.facility.sectionName.toLowerCase();\r\n      const key = `${facility}|${pin.toLowerCase()}`; // pin = room number\r\n      const apfLimits = this._apfLimits$.value[key];\r\n      const isDP = pin.indexOf('DP') > -1;\r\n      const room = isDP ? \r\n        this._parameterValues$.value.find(\r\n          (r) => (r.formattedName.toLowerCase() === pin.toLowerCase())\r\n        ) : \r\n        this._parameterValues$.value.find(\r\n          (r) => (r.roomNumber.toLowerCase() === pin.toLowerCase())\r\n        );\r\n\r\n      const info = {\r\n        ...apfLimits,\r\n        gsf: room?.sq,\r\n        roomParameters: room?.roomParameters,\r\n        roomStatusValues,\r\n        compositeStatus: roomStatusValues.find(\r\n          (x) => x.attribute === 'Composite'\r\n        )?.statusPoint,\r\n        tempStatus: roomStatusValues.find((x) => x.attribute === 'Temp')\r\n          ?.statusPoint,\r\n        rhStatus: roomStatusValues.find((x) => x.attribute === 'Hum')\r\n          ?.statusPoint,\r\n        achStatus: roomStatusValues.find((x) => x.attribute === 'Airx')\r\n          ?.statusPoint,\r\n        dpStatus: roomStatusValues.find((x) => x.attribute === 'DP')\r\n          ?.statusPoint\r\n      };\r\n\r\n      this._selectedRoomInfo$.next(info);\r\n    });\r\n\r\n    // Prepare timeline data for All Facilities Timeline (facilityId == 0)\r\n    const facilityAllFilter$ = this._piDataFilter$.pipe(\r\n      filter((f) => f.facility.value == 0)\r\n    );\r\n\r\n    combineLatest([this._ic$, facilityAllFilter$])\r\n      .pipe(\r\n        filter(([ic, filter]) => Boolean(ic)),\r\n        mergeMap(([ic, filter]) =>\r\n          this.dataService\r\n            .facilityAlltimelineData(\r\n              ic,\r\n              filter.startDate,\r\n              filter.endDate,\r\n              filter.interval\r\n            )\r\n            .pipe(\r\n              catchError((err) => {\r\n                console.log(\r\n                  'Error from dataService.facilityAlltimelineData:' +\r\n                    JSON.stringify(err)\r\n                );\r\n                return of([]);\r\n              }),\r\n              map((data) => ({ filter, data }))\r\n            )\r\n        )\r\n      )\r\n      .subscribe((dataAndFilter) => {\r\n        const chartDataPoints: TimelineChartDataPoint[] = [];\r\n        const facilities = dataAndFilter.data.map((d) => d.facility);\r\n        const facilityLookup = keyBy(facilities, (f) => f.facilityName);\r\n        const timestamps = (dataAndFilter.data || [])\r\n          .filter((x) => x.points.some(Boolean))\r\n          .map((x) => x.points[0].timestamp);\r\n        const minTimestamp = timestamps.reduce(function (a, b) {\r\n          return a < b ? a : b;\r\n        }, Number.MAX_VALUE);\r\n\r\n        for (const x of dataAndFilter.data) {\r\n          if (!x.points.some(Boolean)) {\r\n            x.points = [\r\n              {\r\n                timestamp: minTimestamp,\r\n                numeric_value: 1\r\n              },\r\n              {\r\n                timestamp: dataAndFilter.filter.endDate.getTime(),\r\n                numeric_value: 1\r\n              }\r\n            ];\r\n          }\r\n\r\n          x.points.sort((a, b) => a.timestamp - b.timestamp);\r\n          let startTime = x.points[0].timestamp;\r\n          for (const y of x.points.sort((a, b) => a.timestamp - b.timestamp)) {\r\n            if (y.timestamp < dataAndFilter.filter.startDate.getTime()) {\r\n              console.log('error - timestamp before request time');\r\n            }\r\n            const point: TimelineChartDataPoint = {\r\n              locationName: x.facility.facilityName,\r\n              tag: x.tag,\r\n              startDate: new Date(startTime),\r\n              endDate: new Date(Math.max(y.timestamp, startTime)),\r\n              statusColor: this.statusColor(y.numeric_value),\r\n              chillerStatusLabel: this.chillerStatusLabel(y.numeric_value)\r\n            };\r\n\r\n            startTime = y.timestamp;\r\n            chartDataPoints.push(point);\r\n          }\r\n        }\r\n\r\n        this._timelineChartData$.next({\r\n          points: chartDataPoints,\r\n          locations: facilityLookup,\r\n          locationType: 'facility'\r\n        });\r\n      });\r\n\r\n    // prepare data for specific facility timeline\r\n    this._piDataFilter$\r\n      .pipe(\r\n        filter((f) => f.facility.value != 0),\r\n        mergeMap((filter: PiDataFilter) =>\r\n          this.dataService\r\n            .facilityRoomsTimelineDate(\r\n              filter.facility.value,\r\n              filter.status,\r\n              filter.startDate,\r\n              filter.endDate,\r\n              filter.interval\r\n            )\r\n            .pipe(\r\n              catchError((err) => {\r\n                console.log(\r\n                  'Error from dataService.facilityRoomsTimelineDate:' +\r\n                    JSON.stringify(err)\r\n                );\r\n                return of([]);\r\n              }),\r\n              map((data) => ({ filter, data }))\r\n            )\r\n        )\r\n      )\r\n      .subscribe((dataAndFilter) => {\r\n        const chartDataPoints: TimelineChartDataPoint[] = [];\r\n        const rooms = dataAndFilter.data.map((d) => d.room);\r\n        const roomLookup = keyBy(rooms, (r) => r.roomNumber);\r\n        const timestamps = (dataAndFilter.data || [])\r\n          .filter((x) => x.points.some(Boolean))\r\n          .map((x) => x.points[0].timestamp);\r\n        const minTimestamp = timestamps.reduce(function (a, b) {\r\n          return a < b ? a : b;\r\n        },Number.MAX_VALUE);\r\n\r\n        for (const x of dataAndFilter.data) {\r\n          if (!x.points.some(Boolean)) {\r\n            x.points = [\r\n              {\r\n                timestamp: minTimestamp,\r\n                numeric_value: 1\r\n              },\r\n              {\r\n                timestamp: dataAndFilter.filter.endDate.getTime(),\r\n                numeric_value: 1\r\n              }\r\n            ];\r\n          }\r\n\r\n          x.points.sort((a, b) => a.timestamp - b.timestamp);\r\n          let startTime = x.points[0].timestamp;\r\n          for (const y of x.points) {\r\n            if (y.timestamp < dataAndFilter.filter.startDate.getTime()) {\r\n              console.log('error - timestamp before request time');\r\n            }\r\n            const point: TimelineChartDataPoint = {\r\n              locationName: x.room.roomNumber,\r\n              tag: x.tag,\r\n              startDate: new Date(startTime),\r\n              endDate: new Date(Math.max(y.timestamp, startTime)),\r\n              statusColor: this.statusColor(y.numeric_value),\r\n              chillerStatusLabel: this.chillerStatusLabel(y.numeric_value)\r\n            };\r\n\r\n            startTime = y.timestamp;\r\n            chartDataPoints.push(point);\r\n          }\r\n        }\r\n\r\n        this._timelineChartData$.next({\r\n          points: chartDataPoints,\r\n          locations: roomLookup,\r\n          locationType: 'room'\r\n        });\r\n      });\r\n  } // end contstructor\r\n\r\n  private _ic$: Subject<string>;\r\n  public setIC(ic: string) {\r\n    this._ic$.next(ic);\r\n  }\r\n\r\n  private _piDataFilter$: BehaviorSubject<PiDataFilter>;\r\n  public filterPiData(filter: PiDataFilter) {\r\n    this._piDataFilter$.next(filter);\r\n  }\r\n  public get piDataFilter$() {\r\n    return this._piDataFilter$ as Observable<PiDataFilter>;\r\n  }\r\n\r\n  public get isFacilityAll$() {\r\n    return this._piDataFilter$.pipe(\r\n      map((f) => {\r\n        return Number(f.facility) === 0;\r\n      })\r\n    );\r\n  }\r\n\r\n  private _svgMap$: Subject<SvgMap>;\r\n  public get svgMap$() {\r\n    return this._svgMap$ as Observable<SvgMap>;\r\n  }\r\n\r\n  private _currentStatusValues$: BehaviorSubject<LocationCurrentStatus[]>;\r\n  private _pinStates: BehaviorSubject<locationStatusLookup>;\r\n\r\n  public get pinStates$() {\r\n    return this._pinStates as Observable<locationStatusLookup>;\r\n  }\r\n\r\n  private _parameterValues$: BehaviorSubject<Room[]>;\r\n  public get parameterValues$() {\r\n    return this._parameterValues$ as Observable<Room[]>;\r\n  }\r\n\r\n  private _timelineChartData$: Subject<TimelineChartData>;\r\n  public get timelineChartData$() {\r\n    return this._timelineChartData$ as Observable<TimelineChartData>;\r\n  }\r\n\r\n  private _svgMapBackgroundImageUrl$: Subject<string>;\r\n  public get svgMapBackgroundImageUrl$() {\r\n    return this._svgMapBackgroundImageUrl$ as Observable<string>;\r\n  }\r\n\r\n  private _selectedPin$: Subject<string>;\r\n  public get selectedPin$() {\r\n    return this._selectedPin$ as Observable<string>;\r\n  }\r\n\r\n  private _hoveredPin$: Subject<string>;\r\n  public get hoveredPin$() {\r\n    return this._hoveredPin$ as Observable<string>;\r\n  }\r\n\r\n  private _hoveredTimelineLabel$: Subject<string>;\r\n  public get hoveredTimelineLabel$() {\r\n    return this._hoveredTimelineLabel$ as Observable<string>;\r\n  }\r\n\r\n  private _selectedRoomInfo$: Subject<roomInfoLookup>;\r\n  public get selectedRoomInfo$() {\r\n    return this._selectedRoomInfo$ as Observable<roomInfoLookup>;\r\n  }\r\n\r\n  public setSelectedPin(pinName: string) {\r\n    this._selectedPin$.next(pinName);\r\n  }\r\n\r\n  public setHoveredPin(pinName: string) {\r\n    this._hoveredPin$.next(pinName);\r\n  }\r\n\r\n  public setHoveredTimelineLabel(label: string) {\r\n    this._hoveredTimelineLabel$.next(label);\r\n  }\r\n\r\n  private _apfLimits$: BehaviorSubject<apfLimitsLookup>;\r\n  public get apfLimits$() {\r\n    return this._apfLimits$ as Observable<apfLimitsLookup>;\r\n  }\r\n\r\n  private statusColor = (statusVal: number) => {\r\n    switch (statusVal) {\r\n      case 0:\r\n        return 'green';\r\n      case 1:\r\n        return 'gray';\r\n      case 2:\r\n        return 'yellow';\r\n      case 3:\r\n        return 'red';\r\n      default:\r\n        return 'lightgray';\r\n    }\r\n  };\r\n\r\n  private chillerStatusLabel = (statusVal: number) => {\r\n    switch (statusVal) {\r\n      case 0:\r\n        return 'Within Spec';\r\n      case 1:\r\n        return 'Comm Loss';\r\n      case 2:\r\n        return 'Warning';\r\n      case 3:\r\n        return 'Alarm (our of Spec)';\r\n      default:\r\n        return '';\r\n    }\r\n  };\r\n\r\n  public gsfGrowthByClassification$ = this.dataService\r\n    .gsfGrowthByClassification()\r\n    .pipe(\r\n      map((d: any) =>\r\n        d.map((x: any) => {\r\n          const goLiveDate = new Date(x.goLiveDate);\r\n          return [\r\n            goLiveDate,\r\n            x.cncRoomsArea + x.iso8RoomsArea + x.iso7RoomsArea,\r\n            x.criticalEnvironmentParametersCount\r\n          ];\r\n        })\r\n      )\r\n    );\r\n\r\n  private _facilityFilterOptions$: BehaviorSubject<\r\n    { repName: string; sectionName: string; value: string }[]\r\n  >;\r\n  public get facilityFilterOptions$() {\r\n    return this._facilityFilterOptions$ as Observable<\r\n      { repName: string; sectionName: string; value: string }[]\r\n    >;\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "dataService",
                        "type": "DataService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 64,
                "jsdoctags": [
                    {
                        "name": "dataService",
                        "type": "DataService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "piDataFilter$": {
                    "name": "piDataFilter$",
                    "getSignature": {
                        "name": "piDataFilter$",
                        "type": "",
                        "returnType": "",
                        "line": 440
                    }
                },
                "isFacilityAll$": {
                    "name": "isFacilityAll$",
                    "getSignature": {
                        "name": "isFacilityAll$",
                        "type": "",
                        "returnType": "",
                        "line": 444
                    }
                },
                "svgMap$": {
                    "name": "svgMap$",
                    "getSignature": {
                        "name": "svgMap$",
                        "type": "",
                        "returnType": "",
                        "line": 453
                    }
                },
                "pinStates$": {
                    "name": "pinStates$",
                    "getSignature": {
                        "name": "pinStates$",
                        "type": "",
                        "returnType": "",
                        "line": 460
                    }
                },
                "parameterValues$": {
                    "name": "parameterValues$",
                    "getSignature": {
                        "name": "parameterValues$",
                        "type": "",
                        "returnType": "",
                        "line": 465
                    }
                },
                "timelineChartData$": {
                    "name": "timelineChartData$",
                    "getSignature": {
                        "name": "timelineChartData$",
                        "type": "",
                        "returnType": "",
                        "line": 470
                    }
                },
                "svgMapBackgroundImageUrl$": {
                    "name": "svgMapBackgroundImageUrl$",
                    "getSignature": {
                        "name": "svgMapBackgroundImageUrl$",
                        "type": "",
                        "returnType": "",
                        "line": 475
                    }
                },
                "selectedPin$": {
                    "name": "selectedPin$",
                    "getSignature": {
                        "name": "selectedPin$",
                        "type": "",
                        "returnType": "",
                        "line": 480
                    }
                },
                "hoveredPin$": {
                    "name": "hoveredPin$",
                    "getSignature": {
                        "name": "hoveredPin$",
                        "type": "",
                        "returnType": "",
                        "line": 485
                    }
                },
                "hoveredTimelineLabel$": {
                    "name": "hoveredTimelineLabel$",
                    "getSignature": {
                        "name": "hoveredTimelineLabel$",
                        "type": "",
                        "returnType": "",
                        "line": 490
                    }
                },
                "selectedRoomInfo$": {
                    "name": "selectedRoomInfo$",
                    "getSignature": {
                        "name": "selectedRoomInfo$",
                        "type": "",
                        "returnType": "",
                        "line": 495
                    }
                },
                "apfLimits$": {
                    "name": "apfLimits$",
                    "getSignature": {
                        "name": "apfLimits$",
                        "type": "",
                        "returnType": "",
                        "line": 512
                    }
                },
                "facilityFilterOptions$": {
                    "name": "facilityFilterOptions$",
                    "getSignature": {
                        "name": "facilityFilterOptions$",
                        "type": "",
                        "returnType": "",
                        "line": 564
                    }
                }
            },
            "type": "injectable"
        },
        {
            "name": "DataService",
            "id": "injectable-DataService-e88db0947895e1f3b9419cb95e9e2d5dee8f0b14e9bd30573ddc1c48b5818ebc910fa88638430d252acd2a2a89b545b7883146c87935eb0f59c9ddafbd3ea5c1",
            "file": "src/app/api/data.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "apfLimits",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 149,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "appSettings",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 157,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "contactUs",
                    "args": [
                        {
                            "name": "message",
                            "type": "ContactUsMessage",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 161,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "message",
                            "type": "ContactUsMessage",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "errors",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 153,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "facilities",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "facilitiesByIC",
                    "args": [
                        {
                            "name": "ic",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "ic",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "facilityAlltimelineData",
                    "args": [
                        {
                            "name": "ic",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "startDate",
                            "type": "Date",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "endDate",
                            "type": "Date",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "interval",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 99,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "ic",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "startDate",
                            "type": "Date",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "endDate",
                            "type": "Date",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "interval",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "facilityCurrentStatusData",
                    "args": [
                        {
                            "name": "facilityId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 132,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "facilityId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "facilityDocuments",
                    "args": [
                        {
                            "name": "facilityId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 169,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "facilityId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "facilityPictures",
                    "args": [
                        {
                            "name": "facilityId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 165,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "facilityId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "facilityRoomsTimelineDate",
                    "args": [
                        {
                            "name": "facilityId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "attr",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "startDate",
                            "type": "Date",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "endDate",
                            "type": "Date",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "interval",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 116,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "facilityId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "attr",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "startDate",
                            "type": "Date",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "endDate",
                            "type": "Date",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "interval",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "get",
                    "args": [
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [
                        "T"
                    ],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "gsfByFacility",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "gsfByIC",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 49,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "gsfGrowthByClassification",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 53,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "post",
                    "args": [
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "body",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [
                        "T"
                    ],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "body",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "roomCurrentAttributeData",
                    "args": [
                        {
                            "name": "facilityId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "roomFormattedName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 143,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "facilityId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "roomFormattedName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "roomParameterInfo",
                    "args": [
                        {
                            "name": "facilityId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 65,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "facilityId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "svgMap",
                    "args": [
                        {
                            "name": "facId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "marker",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "'pin'"
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 57,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "facId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "marker",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "'pin'",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "svgMapBackgroundUrl",
                    "args": [
                        {
                            "name": "facId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 61,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "facId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "timelineData",
                    "args": [
                        {
                            "name": "facilityId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "attr",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "startDate",
                            "type": "Date",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "endDate",
                            "type": "Date",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "interval",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 69,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "facilityId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "attr",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "startDate",
                            "type": "Date",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "endDate",
                            "type": "Date",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "interval",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import {\r\n  Attachment,\r\n  AttachmentGroup,\r\n  ContactUsMessage,\r\n  ErrorLog,\r\n  Facility,\r\n  FacilityGsf,\r\n  FacilityTimeSeriesData,\r\n  GsfGrowth,\r\n  ICGsf,\r\n  LocationCurrentStatus,\r\n  LocationTimeSeriesData,\r\n  Room,\r\n  RoomTimeSeriesData,\r\n  SvgMap,\r\n  SvgMapPin\r\n} from './models';\r\n\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DataService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  private get<T>(url: string) {\r\n    return this.http.get<T>(`${environment.apiRootUrl}/${url}`);\r\n  }\r\n\r\n  private post<T>(url: string, body: any) {\r\n    return this.http.post<T>(`${environment.apiRootUrl}/${url}`, body);\r\n  }\r\n\r\n  facilities() {\r\n    return this.get<Facility[]>(`Facilities`);\r\n  }\r\n\r\n  facilitiesByIC(ic: string) {\r\n    return this.get<Facility[]>(`Facilities/ic/${ic}`);\r\n  }\r\n\r\n  gsfByFacility() {\r\n    return this.get<FacilityGsf[]>(`GsfChart/GsfByFacility`);\r\n  }\r\n\r\n  gsfByIC() {\r\n    return this.get<ICGsf[]>(`GsfChart/GsfByIC`);\r\n  }\r\n\r\n  gsfGrowthByClassification() {\r\n    return this.get<GsfGrowth[]>(`GsfChart/GsfGrowthByClassification`);\r\n  }\r\n\r\n  svgMap(facId: number, marker: string = 'pin') {\r\n    return this.get<SvgMap>(`SvgMap/${facId}?marker=${marker}`);\r\n  }\r\n\r\n  svgMapBackgroundUrl(facId: number) {\r\n    return `${environment.apiRootUrl}/SvgMap/backgroundImage/${facId}`;\r\n  }\r\n\r\n  roomParameterInfo(facilityId: number) {\r\n    return this.get<Room[]>(`SvgMap/RoomParameterInfo/facility/${facilityId}`);\r\n  }\r\n\r\n  timelineData(\r\n    facilityId: number,\r\n    attr: string,\r\n    startDate: Date,\r\n    endDate: Date,\r\n    interval: number\r\n  ) {\r\n    if (facilityId == 0) {\r\n      return this.post<LocationTimeSeriesData<Facility>[]>(\r\n        `Timeline/AllFacilityTimelineData`,\r\n        {\r\n          startDate,\r\n          endDate,\r\n          interval\r\n        }\r\n      );\r\n    }\r\n\r\n    return this.post<LocationTimeSeriesData<Room>[]>(\r\n      `Timeline/FacilityTimelineData`,\r\n      {\r\n        facilityId,\r\n        attr,\r\n        startDate,\r\n        endDate,\r\n        interval\r\n      }\r\n    );\r\n  }\r\n\r\n  facilityAlltimelineData(\r\n    ic: string,\r\n    startDate: Date,\r\n    endDate: Date,\r\n    interval: number\r\n  ) {\r\n    return this.post<FacilityTimeSeriesData[]>(\r\n      `Timeline/AllFacilityTimelineData`,\r\n      {\r\n        ic,\r\n        startDate,\r\n        endDate,\r\n        interval\r\n      }\r\n    );\r\n  }\r\n\r\n  facilityRoomsTimelineDate(\r\n    facilityId: number,\r\n    attr: string,\r\n    startDate: Date,\r\n    endDate: Date,\r\n    interval: number\r\n  ) {\r\n    return this.post<RoomTimeSeriesData[]>(`Timeline/FacilityTimelineData`, {\r\n      facilityId,\r\n      attr,\r\n      startDate,\r\n      endDate,\r\n      interval\r\n    });\r\n  }\r\n\r\n  facilityCurrentStatusData(facilityId: number) {\r\n    if (facilityId == 0) {\r\n      return this.get<LocationCurrentStatus[]>(\r\n        `Timeline/AllFacilityCurrentData`\r\n      );\r\n    }\r\n    return this.get<LocationCurrentStatus[]>(\r\n      `Timeline/FacilityCurrentCompositeData/${facilityId}`\r\n    );\r\n  }\r\n\r\n  roomCurrentAttributeData(facilityId: number, roomFormattedName: string) {\r\n    return this.get<LocationCurrentStatus[]>(\r\n      `Timeline/RoomCurrentAttributeData/facility/${facilityId}/room/${roomFormattedName}`\r\n    );\r\n  }\r\n\r\n  apfLimits() {\r\n    return this.get<any[]>(`Timeline/ApfLimits`);\r\n  }\r\n\r\n  errors() {\r\n    return this.get<ErrorLog[]>(`ErrorLog`);\r\n  }\r\n  \r\n  appSettings() {\r\n    return this.get<any>('ErrorLog/appSettings')\r\n  }\r\n\r\n  contactUs(message:ContactUsMessage) {\r\n    return this.post('Message/ContactUs',message);\r\n  }\r\n\r\n  facilityPictures(facilityId:number) {\r\n    return this.get<Attachment[]>(`Attachment/pictures/facility/${facilityId}`);\r\n  }\r\n\r\n  facilityDocuments(facilityId:number) {\r\n    return this.get<AttachmentGroup[]>(`Attachment/documents/facility/${facilityId}`);\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 26,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "FacilityInfoPageService",
            "id": "injectable-FacilityInfoPageService-55b8ad79a8a7359d3de3beaf797cc99ac9f9ad87562ff0e77248d0276780a2516c7f17a2380bc586dae0f4be90efc13503004b97b2fe4121b150be4828f48799",
            "file": "src/app/facility-info-page/facility-info-page.service.ts",
            "properties": [
                {
                    "name": "_aboutPage$",
                    "defaultValue": "new BehaviorSubject<string>('')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_diagram$",
                    "defaultValue": "new BehaviorSubject<string>('')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_documents$",
                    "defaultValue": "new BehaviorSubject<AttachmentGroup[]>([])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_pictures$",
                    "defaultValue": "new BehaviorSubject<Attachment[]>([])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "aboutPages",
                    "defaultValue": "{\r\n        1: \"B1-PET.about.html\",\r\n        2: \"B3-PET.about.html\",\r\n        3: \"CC-CCE-2J.about.html\",\r\n        4: \"CC-CCE-12E.about.html\",\r\n        5: \"CC-CCE-NCI.about.html\",\r\n        6: \"CC-DLM-LAB.about.html\",\r\n        7: \"CC-NMD_RADIO.about.html\",\r\n        8: \"I-IVAU.about.html\",\r\n        9: \"P-IVAU.about.html\",\r\n        10: \"NCI-1B42.about.html\",\r\n        11: \"NCI_3W_TIL_LAB.about.html\",\r\n        12: \"NCI-Trailer1.about.html\",\r\n        13: \"NCI-Trailer2.about.html\",\r\n        16: \"CC-CCE-3T.about.html\",\r\n        17: \"I-IVAU_Ext.about.html\",\r\n        18: \"NIAID_Viral.about.html\",\r\n        19: \"NCY_Hyperpolarized.about.html\",\r\n        20: \"NIAID_29B_Bio_Facility.about.html\"\r\n    }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "diagrams",
                    "defaultValue": "{\r\n        1: \"CC_PET_Radiopharmacy.pdf\",\r\n        2: \"CC_PET_B3_Radiochemistry.pdf\",\r\n        3: \"CCE_2J_Cell_Therapy_Lab.pdf\",\r\n        4: \"CC_CCE_12E_Cell_Therapy_Lab.pdf\",\r\n        5: \"CC_CCE_East_Terrace_Modular.pdf\",\r\n        6:\"CC_DLM_Sterility_Lab.pdf\",\r\n        8:\"CC_PHARMACY_I-IVAU.pdf\",\r\n        9:\"P-IVAU_Diagram.pdf\",\r\n        10:\"NCI_SB_1B42.pdf\",\r\n        11:\"NCI_SB_TIL_Modular.pdf\",\r\n        12:\"NCI_Trailer1-10A.pdf\",\r\n        13:\"NCI_Trailer1-10B.pdf\",\r\n        19:\"HPP_Diagram.pdf\"\r\n    }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 51
                }
            ],
            "methods": [
                {
                    "name": "Load",
                    "args": [
                        {
                            "name": "facilityId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 67,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "facilityId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Attachment, AttachmentGroup } from '../api/models';\r\nimport {\r\n    BehaviorSubject,\r\n    Observable,\r\n    Subject,\r\n    combineLatest,\r\n    distinctUntilChanged,\r\n    filter,\r\n    map,\r\n    mergeMap,\r\n    of,\r\n    zip\r\n} from 'rxjs';\r\n\r\nimport { DataService } from 'src/app/api/data.service';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable()\r\nexport class FacilityInfoPageService {\r\n    private _pictures$ = new BehaviorSubject<Attachment[]>([]);\r\n    private _documents$ = new BehaviorSubject<AttachmentGroup[]>([]);\r\n    private _aboutPage$ = new BehaviorSubject<string>('');\r\n    private _diagram$ = new BehaviorSubject<string>('')\r\n\r\n    constructor(private dataService: DataService) {\r\n    }\r\n\r\n    aboutPages:{[key:number]:string} = {\r\n        1: \"B1-PET.about.html\",\r\n        2: \"B3-PET.about.html\",\r\n        3: \"CC-CCE-2J.about.html\",\r\n        4: \"CC-CCE-12E.about.html\",\r\n        5: \"CC-CCE-NCI.about.html\",\r\n        6: \"CC-DLM-LAB.about.html\",\r\n        7: \"CC-NMD_RADIO.about.html\",\r\n        8: \"I-IVAU.about.html\",\r\n        9: \"P-IVAU.about.html\",\r\n        10: \"NCI-1B42.about.html\",\r\n        11: \"NCI_3W_TIL_LAB.about.html\",\r\n        12: \"NCI-Trailer1.about.html\",\r\n        13: \"NCI-Trailer2.about.html\",\r\n        16: \"CC-CCE-3T.about.html\",\r\n        17: \"I-IVAU_Ext.about.html\",\r\n        18: \"NIAID_Viral.about.html\",\r\n        19: \"NCY_Hyperpolarized.about.html\",\r\n        20: \"NIAID_29B_Bio_Facility.about.html\"\r\n    }\r\n\r\n\r\n    diagrams:{[key:number]:string} = {\r\n        1: \"CC_PET_Radiopharmacy.pdf\",\r\n        2: \"CC_PET_B3_Radiochemistry.pdf\",\r\n        3: \"CCE_2J_Cell_Therapy_Lab.pdf\",\r\n        4: \"CC_CCE_12E_Cell_Therapy_Lab.pdf\",\r\n        5: \"CC_CCE_East_Terrace_Modular.pdf\",\r\n        6:\"CC_DLM_Sterility_Lab.pdf\",\r\n        8:\"CC_PHARMACY_I-IVAU.pdf\",\r\n        9:\"P-IVAU_Diagram.pdf\",\r\n        10:\"NCI_SB_1B42.pdf\",\r\n        11:\"NCI_SB_TIL_Modular.pdf\",\r\n        12:\"NCI_Trailer1-10A.pdf\",\r\n        13:\"NCI_Trailer1-10B.pdf\",\r\n        19:\"HPP_Diagram.pdf\"\r\n    }\r\n      \r\n    Load(facilityId: number) {\r\n\r\n        this.dataService.facilityPictures(facilityId).subscribe((pictures: Attachment[]) => {\r\n            const picturesWithUrls = pictures.map(p => ({ ...p, url: `${environment.attachmentRootUrl}/${p.storedFileName}` }));\r\n            this._pictures$.next(picturesWithUrls);\r\n        });\r\n\r\n        this.dataService.facilityDocuments(facilityId).subscribe((documents: AttachmentGroup[]) => {\r\n            const docs = documents.map(d => ({\r\n                ...d,\r\n                attachments: d.attachments.map(a => ({ \r\n                    ...a, \r\n                    url: `${environment.attachmentRootUrl}/${a.storedFileName}` }))\r\n            }));\r\n            this._documents$.next(docs.filter(d=>d.description !== 'Facility Digram'));\r\n\r\n            \r\n        });\r\n\r\n        const aboutPage = this.aboutPages[facilityId] ? 'about/'+this.aboutPages[facilityId] : '';\r\n        const diagram = this.diagrams[facilityId] ? 'assets/diagrams/'+this.diagrams[facilityId] : '';\r\n        this._aboutPage$.next(aboutPage);\r\n        this._diagram$.next(diagram)\r\n    }\r\n\r\n    public get pictures$() {\r\n        return this._pictures$ as Observable<Attachment[]>;\r\n    }\r\n\r\n    public get documents$() {\r\n        return this._documents$ as Observable<AttachmentGroup[]>;\r\n    }\r\n\r\n    public get aboutPage$() {\r\n        return this._aboutPage$ as Observable<string>;\r\n    }\r\n    \r\n    public get diagram$() {\r\n        return this._diagram$ as Observable<string>;\r\n    }\r\n}",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "dataService",
                        "type": "DataService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 24,
                "jsdoctags": [
                    {
                        "name": "dataService",
                        "type": "DataService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "pictures$": {
                    "name": "pictures$",
                    "getSignature": {
                        "name": "pictures$",
                        "type": "",
                        "returnType": "",
                        "line": 92
                    }
                },
                "documents$": {
                    "name": "documents$",
                    "getSignature": {
                        "name": "documents$",
                        "type": "",
                        "returnType": "",
                        "line": 96
                    }
                },
                "aboutPage$": {
                    "name": "aboutPage$",
                    "getSignature": {
                        "name": "aboutPage$",
                        "type": "",
                        "returnType": "",
                        "line": 100
                    }
                },
                "diagram$": {
                    "name": "diagram$",
                    "getSignature": {
                        "name": "diagram$",
                        "type": "",
                        "returnType": "",
                        "line": 104
                    }
                }
            },
            "type": "injectable"
        }
    ],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "ApfMonitoredRoomsChartComponent",
            "id": "component-ApfMonitoredRoomsChartComponent-ebcc06cd39af7229b3294e0d8a7d304b42a7b83224df8f0c4f19271d535a33e5deee49cae47fcba21835cc6a738f46b364481cca255006dc00b8737fa6d7f835",
            "file": "src/app/apf-monitored-rooms-chart/apf-monitored-rooms-chart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-apf-monitored-rooms-chart",
            "styleUrls": [
                "./apf-monitored-rooms-chart.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./apf-monitored-rooms-chart.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "chartData",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "any[]",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_chartData",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "chartType",
                    "defaultValue": "ChartType.AreaChart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "columnNames",
                    "defaultValue": "['Go Live Date', 'Area', 'Critical Environmental Parameters']",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "data",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 28
                }
            ],
            "methodsClass": [
                {
                    "name": "chartOptions",
                    "args": [
                        {
                            "name": "data",
                            "type": "any[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "{ isStacked: string; height: number; legend: { position: string; maxLines: number; }; seriesType: string; series: { 1: { type: string; }; }; vAxis: { minValue: number; }; hAxis: { format: string; ticks: {}; }; }",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "any[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\nimport { ChartType } from 'angular-google-charts';\r\n\r\n@Component({\r\n  selector: 'app-apf-monitored-rooms-chart',\r\n  templateUrl: './apf-monitored-rooms-chart.component.html',\r\n  styleUrls: ['./apf-monitored-rooms-chart.component.scss']\r\n})\r\nexport class ApfMonitoredRoomsChartComponent {\r\n  constructor() {}\r\n\r\n  private _chartData: any[] = [];\r\n\r\n  @Input()\r\n  get chartData(): any[] {\r\n    return this._chartData;\r\n  }\r\n  set chartData(v: any[]) {\r\n    if (v.some(Boolean)) {\r\n      this._chartData = v;\r\n      this.options = this.chartOptions(this._chartData);\r\n    }\r\n  }\r\n\r\n  chartType = ChartType.AreaChart;\r\n  columnNames = ['Go Live Date', 'Area', 'Critical Environmental Parameters'];\r\n  data: any[] = [];\r\n  options: any;\r\n\r\n  chartOptions(data: any[]) {\r\n    const ystart = new Date(data[0][0]).getFullYear();\r\n    const yend = new Date(data[data.length - 1][0]).getFullYear();\r\n    const ycount = yend - ystart + 1;\r\n    const hAxisTicks: any[] = [...Array(ycount).keys()].map(\r\n      (y) => new Date(y + ystart, 1, 1)\r\n    );\r\n\r\n    const options = {\r\n      //fullStacked\r\n      isStacked: 'absolute',\r\n      height: 300,\r\n      legend: { position: 'top', maxLines: 3 },\r\n      seriesType: 'area',\r\n      series: { 1: { type: 'line' } },\r\n      vAxis: {\r\n        minValue: 0\r\n      },\r\n      hAxis: {\r\n        format: 'yyyy',\r\n        ticks: hAxisTicks\r\n      }\r\n    };\r\n    return options;\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./apf-monitored-rooms-chart.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 9
            },
            "accessors": {
                "chartData": {
                    "name": "chartData",
                    "setSignature": {
                        "name": "chartData",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "v",
                                "type": "any[]",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 18,
                        "jsdoctags": [
                            {
                                "name": "v",
                                "type": "any[]",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "chartData",
                        "type": "[]",
                        "returnType": "any[]",
                        "line": 15
                    }
                }
            },
            "templateData": "<google-chart\r\n  style=\"width: 100%\"\r\n  [type]=\"chartType\"\r\n  [data]=\"chartData\"\r\n  [columns]=\"columnNames\"\r\n  [options]=\"options\"\r\n>\r\n</google-chart>\r\n"
        },
        {
            "name": "ApfPortfolioAllDashboardComponent",
            "id": "component-ApfPortfolioAllDashboardComponent-1b2f01f198259448e6b955d56745a53cb4916f8bfdd7c22719f0d2ddf29f65d3f447ebfbab39d7b7154bf6486be569de2583d1e786718ce3927258d75cd3048d",
            "file": "src/app/apf-portfolio-all-dashboard/apf-portfolio-all-dashboard.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "ApfPortfolioAllDashboardService"
                }
            ],
            "selector": "app-apf-portfolio-all-dashboard",
            "styleUrls": [
                "./apf-portfolio-all-dashboard.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./apf-portfolio-all-dashboard.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "service",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ApfPortfolioAllDashboardService",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { ApfPortfolioAllDashboardService } from './apf-portfolio-all-dashboard.service';\r\n\r\n@Component({\r\n  selector: 'app-apf-portfolio-all-dashboard',\r\n  templateUrl: './apf-portfolio-all-dashboard.component.html',\r\n  styleUrls: ['./apf-portfolio-all-dashboard.component.scss'],\r\n  providers: [ApfPortfolioAllDashboardService]\r\n})\r\nexport class ApfPortfolioAllDashboardComponent {\r\n  constructor(public service: ApfPortfolioAllDashboardService) {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "// * {\r\n//     border:0px solid blue;\r\n// }\r\n\r\n.chart-label {\r\n  margin-top: -4px;\r\n  text-align: center;\r\n  font-weight: bold;\r\n  font-size: smaller;\r\n}\r\n",
                    "styleUrl": "./apf-portfolio-all-dashboard.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "service",
                        "type": "ApfPortfolioAllDashboardService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "service",
                        "type": "ApfPortfolioAllDashboardService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<div class=\"card\">\r\n  <div class=\"card-body\">\r\n    <div class=\"row\" id=\"rowTest\" style=\"border: 0px solid red\">\r\n      <div class=\"col-md-3\">\r\n        <app-apf-portfolio-all-map></app-apf-portfolio-all-map>\r\n      </div>\r\n\r\n      <div class=\"panel-center col-md-9\" style=\"border: 0px solid black\">\r\n        <div class=\"row\">\r\n          <div class=\"panel-center col-md-12\" style=\"border: 0px solid black\">\r\n            <h4 style=\"color: #b3172c\">\r\n              Aseptic Processing Facilities (APF) Portfolio Web Portal\r\n            </h4>\r\n            <p>\r\n              The National Institutes of Health (NIH) APF Portfolio consists of\r\n              12 facilites, including pharmacies, radiopharmacies ...\r\n            </p>\r\n            <app-gsf-growth-by-classification-chart\r\n              [chartData]=\"(service.gsfGrowthByClassification$ | async) || []\"\r\n            >\r\n            </app-gsf-growth-by-classification-chart>\r\n            <div class=\"chart-label\">\r\n              APF Portfolio GSF Growth by Classification\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n          <div class=\"panel-center col-md-6\" style=\"border: 0px solid black\">\r\n            <app-gsf-pie-chart [chartData]=\"(service.gsfByIC$ | async) || []\">\r\n              <!-- gsfByIcData -->\r\n            </app-gsf-pie-chart>\r\n            <div class=\"chart-label\">APF Portfolio GSF by IC</div>\r\n          </div>\r\n\r\n          <div class=\"panel-center col-md-6\" style=\"border: 0px solid black\">\r\n            <app-gsf-pie-chart\r\n              [chartData]=\"(service.gsfByFacility$ | async) || []\"\r\n            ></app-gsf-pie-chart>\r\n            <div class=\"chart-label\">APF Portfolio GSF by Facility</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "ApfPortfolioIcDashboardComponent",
            "id": "component-ApfPortfolioIcDashboardComponent-d053cc2622770368f305b09164b48d9260aae92378662d4760b09e6edac0d95781ac2bcc7f0adea0b82d2e4d01af70da096dcc3cfef41ce506bcfdd0428805d4",
            "file": "src/app/apf-portfolio-ic-dashboard/apf-portfolio-ic-dashboard.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "ApfPortfolioIcDashboardService"
                }
            ],
            "selector": "app-apf-portfolio-ic-dashboard",
            "styleUrls": [
                "./apf-portfolio-ic-dashboard.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./apf-portfolio-ic-dashboard.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "defaultSvgMap",
                    "defaultValue": "{\r\n    backgroundSvg: '',\r\n    id: 0,\r\n    name: '',\r\n    svgMapPins: [],\r\n    svgMapArrows: [],\r\n    viewbox: '',\r\n    defs: '',\r\n    facilityId: 0\r\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SvgMap",
                    "optional": false,
                    "description": "",
                    "line": 87
                },
                {
                    "name": "facilityFilterOptions$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<literal type[]>",
                    "optional": false,
                    "description": "",
                    "line": 80
                },
                {
                    "name": "filterParams",
                    "defaultValue": "{\r\n    facility:'',\r\n    startDate:'',\r\n    endDate:'',\r\n    status:'',\r\n    interval:''\r\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 106
                },
                {
                    "name": "hasSelectedRoom$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<boolean>",
                    "optional": false,
                    "description": "",
                    "line": 104
                },
                {
                    "name": "hoveredPin$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<string>",
                    "optional": false,
                    "description": "",
                    "line": 97
                },
                {
                    "name": "hoveredTimelineLabel$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<string>",
                    "optional": false,
                    "description": "",
                    "line": 98
                },
                {
                    "name": "isFacilityAll$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<boolean>",
                    "optional": false,
                    "description": "",
                    "line": 101
                },
                {
                    "name": "isLoading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 121
                },
                {
                    "name": "monitoredRoomsChartData$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any[]>",
                    "optional": false,
                    "description": "",
                    "line": 79
                },
                {
                    "name": "pinStates$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<locationStatusLookup>",
                    "optional": false,
                    "description": "",
                    "line": 86
                },
                {
                    "name": "selectedAttributeStatus$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<string>",
                    "optional": false,
                    "description": "",
                    "line": 102
                },
                {
                    "name": "selectedRoomInfo$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<literal type>",
                    "optional": false,
                    "description": "",
                    "line": 99
                },
                {
                    "name": "service",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ApfPortfolioIcDashboardService",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "showFilterToolbar",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 123
                },
                {
                    "name": "showMapKey",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 125
                },
                {
                    "name": "svgBackgroundImageUrl$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<string>",
                    "optional": false,
                    "description": "",
                    "line": 85
                },
                {
                    "name": "svgMap$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<SvgMap>",
                    "optional": false,
                    "description": "",
                    "line": 84
                },
                {
                    "name": "timelineChartData$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<TimelineChartData>",
                    "optional": false,
                    "description": "",
                    "line": 83
                }
            ],
            "methodsClass": [
                {
                    "name": "chartLabelClick",
                    "args": [
                        {
                            "name": "$event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 128,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "$event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "chartLabelMouseOut",
                    "args": [
                        {
                            "name": "$event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 136,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "$event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "chartLabelMouseOver",
                    "args": [
                        {
                            "name": "$event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 132,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "$event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "filterChange",
                    "args": [
                        {
                            "name": "$event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 114,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "$event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "pinClick",
                    "args": [
                        {
                            "name": "$event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 140,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "$event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "pinMouseOut",
                    "args": [
                        {
                            "name": "$event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 149,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "$event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "pinMouseOver",
                    "args": [
                        {
                            "name": "$event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 145,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "$event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {} from './apf-portfolio-ic-dashboard.service';\r\n\r\nimport {\r\n  ApfPortfolioIcDashboardService,\r\n  TimelineChartData,\r\n  locationStatusLookup\r\n} from './apf-portfolio-ic-dashboard.service';\r\nimport { Observable, filter, map } from 'rxjs';\r\n\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Component } from '@angular/core';\r\nimport { PiDataFilter } from './apf-portfolio-ic-dashboard.service';\r\nimport { SvgMap } from '../api/models';\r\n\r\n@Component({\r\n  selector: 'app-apf-portfolio-ic-dashboard',\r\n  templateUrl: './apf-portfolio-ic-dashboard.component.html',\r\n  styleUrls: ['./apf-portfolio-ic-dashboard.component.scss'],\r\n  providers: [ApfPortfolioIcDashboardService]\r\n})\r\nexport class ApfPortfolioIcDashboardComponent {\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    public service: ApfPortfolioIcDashboardService\r\n  ) {\r\n    this.monitoredRoomsChartData$ = this.service.gsfGrowthByClassification$;\r\n\r\n    this.activatedRoute.params\r\n      .pipe(\r\n        filter(Boolean),\r\n        map((p) => p.ic?.toLowerCase() || '')\r\n      )\r\n      .subscribe((ic) => {\r\n        this.service.setIC(ic);\r\n\r\n        const yesterday = new Date();\r\n        yesterday.setDate(yesterday.getDate() - 1);\r\n        this.service.filterPiData({\r\n          facility: { value: 0, repName: '', sectionName: '' },\r\n          interval: 30,\r\n          status: 'Sum All',\r\n          startDate: new Date(),\r\n          endDate: yesterday\r\n        });\r\n      });\r\n\r\n    this.svgMap$ = this.service.svgMap$;\r\n    this.svgBackgroundImageUrl$ = this.service.svgMapBackgroundImageUrl$;\r\n    this.pinStates$ = this.service.pinStates$;\r\n    this.hoveredPin$ = this.service.hoveredPin$;\r\n    this.hoveredTimelineLabel$ = this.service.hoveredTimelineLabel$;\r\n    this.timelineChartData$ = this.service.timelineChartData$;\r\n    this.selectedRoomInfo$ = this.service.selectedRoomInfo$;\r\n    this.isFacilityAll$ = this.service.isFacilityAll$;\r\n    this.selectedAttributeStatus$ = this.service.piDataFilter$.pipe(\r\n      map((x) => x.status)\r\n    );\r\n    this.hasSelectedRoom$ = this.selectedRoomInfo$.pipe(\r\n      map((x) => Object.keys(x).length > 0)\r\n    );\r\n    this.facilityFilterOptions$ = this.service.facilityFilterOptions$;\r\n\r\n    this.timelineChartData$.subscribe(()=>{\r\n      this.isLoading = false;\r\n    });\r\n\r\n    service.piDataFilter$.subscribe((x)=>{\r\n      this.filterParams = {\r\n        facility: x.facility.repName || 'All Facility',\r\n        startDate: `${x.startDate.getMonth() + 1}/${x.startDate.getDate()}/${x.startDate.getFullYear()}`,\r\n        endDate: `${x.endDate.getMonth() + 1}/${x.endDate.getDate()}/${x.endDate.getFullYear()}`,\r\n        status: x.status === 'Sum All' ? 'Composite' :  x.status === 'DP' ? 'dP' : x.status,\r\n        interval: x.interval        \r\n      }\r\n\r\n    })\r\n  }\r\n\r\n  monitoredRoomsChartData$: Observable<any[]>;\r\n  facilityFilterOptions$: Observable<\r\n    { repName: string; sectionName: string; value: string }[]\r\n  >;\r\n  timelineChartData$: Observable<TimelineChartData>;\r\n  svgMap$: Observable<SvgMap>;\r\n  svgBackgroundImageUrl$: Observable<string>;\r\n  pinStates$: Observable<locationStatusLookup>;\r\n  defaultSvgMap: SvgMap = {\r\n    backgroundSvg: '',\r\n    id: 0,\r\n    name: '',\r\n    svgMapPins: [],\r\n    svgMapArrows: [],\r\n    viewbox: '',\r\n    defs: '',\r\n    facilityId: 0\r\n  };\r\n  hoveredPin$: Observable<string>;\r\n  hoveredTimelineLabel$: Observable<string>;\r\n  selectedRoomInfo$: Observable<{ [field: string]: string }>;\r\n\r\n  isFacilityAll$: Observable<boolean>;\r\n  selectedAttributeStatus$: Observable<string>;\r\n\r\n  hasSelectedRoom$: Observable<boolean>;\r\n\r\n  filterParams: any = {\r\n    facility:'',\r\n    startDate:'',\r\n    endDate:'',\r\n    status:'',\r\n    interval:''\r\n  };\r\n\r\n  filterChange($event: any) {\r\n    this.isLoading = true;\r\n    setTimeout(() => {\r\n      this.service.filterPiData($event);\r\n    }, 0);\r\n  }\r\n\r\n  isLoading=false;\r\n\r\n  showFilterToolbar=false;\r\n\r\n  showMapKey=false;\r\n\r\n\r\n  chartLabelClick($event: any) {\r\n    // console.log($event);\r\n  }\r\n\r\n  chartLabelMouseOver($event: any) {\r\n    this.service.setHoveredTimelineLabel($event);\r\n  }\r\n\r\n  chartLabelMouseOut($event: any) {\r\n    this.service.setHoveredTimelineLabel('');\r\n  }\r\n\r\n  pinClick($event: any) {\r\n    this.service.setSelectedPin($event);\r\n    // console.log($event);\r\n  }\r\n\r\n  pinMouseOver($event: any) {\r\n    this.service.setHoveredPin($event);\r\n  }\r\n\r\n  pinMouseOut($event: any) {\r\n    this.service.setHoveredPin('');\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "a { cursor: pointer;}\r\n.chart-label {\r\n  margin-top: -4px;\r\n  text-align: center;\r\n  font-weight: bold;\r\n  font-size: smaller;\r\n}\r\n\r\n.filter-toolbar-container {\r\n  margin-bottom: 8px;\r\n  z-index: 999;\r\n}\r\n\r\n.timeline-chart-container {\r\n  margin-top: 8px;\r\n  // position:fixed;\r\n}\r\n\r\n.svg-map-container {\r\n  padding: 4px;\r\n  background-color: white;\r\n}\r\n\r\n.room-info-display-container {\r\n  padding: 4px;\r\n}\r\n\r\n\r\n.sidebar {\r\n  height: 100%;\r\n  width: 200px;\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  padding-top: 8px;\r\n  padding-left:8px;\r\n  background-color: black;\r\n  color:white;\r\n  }\r\n  \r\n.sidebar div {\r\n  padding: 8px;\r\n  font-size: small;\r\n  display: block;\r\n  }\r\n  \r\n.body-text {\r\n  // margin-left: 200px;\r\n  font-size: 18px;\r\n}\r\n\r\n.floor-plan-key {\r\n  display: block;\r\n\r\n}\r\n",
                    "styleUrl": "./apf-portfolio-ic-dashboard.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "activatedRoute",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "service",
                        "type": "ApfPortfolioIcDashboardService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 21,
                "jsdoctags": [
                    {
                        "name": "activatedRoute",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "service",
                        "type": "ApfPortfolioIcDashboardService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<div style=\"position: relative;\">\r\n  <!-- Nav bar -->\r\n  <!-- <div class=\"sidebar\">\r\n    <div>Home</div>\r\n    <div>Crit Env Parameters</div>\r\n    <div>System Crit Parameters</div>\r\n    <div>System Crit Parameters</div>\r\n    <div>Damage Report</div>\r\n\r\n    <div>-------------</div>\r\n\r\n    <div>Capa Dashboard</div>\r\n    <div>FCIS Buisness Dashboard</div>\r\n    <div>Pi Dashboard</div>\r\n    <div>Master Control</div>\r\n\r\n\r\n    <div>--------------</div>\r\n\r\n\r\n    <div>Resources</div>\r\n    <div>Contact FCIS</div>\r\n  </div> -->\r\n\r\n  <div class=\"body-text\">\r\n    <div class=\"row\" style=\"position:relative;\">\r\n\r\n      <div class=\"col-md-6\">\r\n\r\n        <div style=\"display:flex; width:100%;\">\r\n          <div style=\"display:flex; position:relative\">\r\n            <div style=\"border:1px solid lightgray; padding:4px 16px;\"><a (click)=\"opFilter.toggle($event)\"><i\r\n                  class=\"pi pi-filter\" style=\"font-size: 2rem; cursor:pointer\"></i></a></div>\r\n            <div style=\"border:1px solid lightgray; padding:4px 16px;\"><a (click)=\"opKey.toggle($event)\"><i class=\"pi pi-key\"\r\n                  style=\"font-size: 2rem\"></i></a></div>\r\n          </div>\r\n  \r\n          <div style=\"color: #b3172c; font-weight:bold; display:flex; justify-content: center; align-items:center; width:100%;\">\r\n            <h4>{{filterParams.facility}}</h4>      \r\n          </div>\r\n  \r\n  \r\n        </div>\r\n  \r\n  \r\n        <p-overlayPanel #opFilter>\r\n          <app-pi-data-filter-toolbar [facilities]=\"(facilityFilterOptions$ | async)!\" [defaultFacilityId]=\"0\"\r\n            [defaultInterval]=\"30\" (filterChange)=\"filterChange($event)\"></app-pi-data-filter-toolbar>\r\n        </p-overlayPanel>\r\n  \r\n        <p-overlayPanel #opKey>\r\n          <div class=\"floor-plan-key\">\r\n            <img\r\n            src=\"assets/images/floor-plans/FloorPlanColorKey.svg\"\r\n            style=\"width: 500px; border: 1px solid red\"/>\r\n          </div>\r\n  \r\n        </p-overlayPanel>\r\n\r\n        <div class=\"svg-map-container\">\r\n          <app-svg-status-map [svgMap]=\"(svgMap$ | async) || defaultSvgMap\" [pinStates]=\"(pinStates$ | async) || {}\"\r\n            [backgroundImageUrl]=\"(svgBackgroundImageUrl$ | async) || ''\"\r\n            [highlightedMapPin]=\"(hoveredTimelineLabel$ | async) || ''\" (pinClick)=\"pinClick($event)\"\r\n            (pinMouseOver)=\"pinMouseOver($event)\" (pinMouseOut)=\"pinMouseOut($event)\">\r\n          </app-svg-status-map>\r\n        </div>\r\n\r\n      </div>\r\n\r\n      <div class=\"col-md-6\" style=\"border: 0px solid black\">\r\n        <div class=\"row\" *ngIf=\"isFacilityAll$ | async\">\r\n          <div class=\"col-md-12\" style=\"border: 0px solid rgb(219, 213, 213)\">\r\n            <h4 style=\"color: #b3172c\">\r\n              Composite Health Status of the APF Portfolio\r\n            </h4>\r\n\r\n            <app-apf-monitored-rooms-chart\r\n              [chartData]=\"(monitoredRoomsChartData$ | async) || []\"></app-apf-monitored-rooms-chart>\r\n            <div class=\"chart-label\">\r\n              APF Portfolio: Monitored Rooms and Critical Environmental\r\n              Parameter Points\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"row\">\r\n          <div class=\"col-12 justify-content-center\" style=\"height: 520px\">\r\n            <div id=\"loadingGif\" style=\"\r\n                  display: none;\r\n                  position: fixed;\r\n                  z-index: 1031;\r\n                  top: 50%;\r\n                  right: 30%;\r\n                  margin-top: 100px;\r\n                  margin-right: -100px;\r\n                \">\r\n              <img src=\"assets/images/giphy.gif\" alt=\"loading\" />\r\n            </div>\r\n\r\n            <div class=\"timeline-chart-container\">\r\n              <h4 style=\"color: #b3172c\">Critical Parameter Timeline - {{filterParams.status}} {{filterParams.startDate}} - {{filterParams.endDate}} ({{filterParams.interval}} minute interval)</h4>\r\n              <app-apf-timeline-chart [chartData]=\"\r\n                    (timelineChartData$ | async) || {\r\n                      points: [],\r\n                      locations: {},\r\n                      locationType: 'facility'\r\n                    }\r\n                  \" [highlightedLabel]=\"(hoveredPin$ | async) || ''\" [isLoading]=\"isLoading\"\r\n                (chartLabelClick)=\"chartLabelClick($event)\" (chartLabelMouseOver)=\"chartLabelMouseOver($event)\"\r\n                (chartLabelMouseOut)=\"chartLabelMouseOut($event)\"></app-apf-timeline-chart>\r\n            </div>\r\n\r\n            <div class=\"room-info-display-container\" *ngIf=\"(hasSelectedRoom$ | async) || false\">\r\n              <app-room-info-display [roomInfo]=\"(selectedRoomInfo$ | async) || {}\"\r\n                [attribute]=\"(selectedAttributeStatus$ | async) || 'composite'\"></app-room-info-display>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>"
        },
        {
            "name": "ApfPortfolioIcMapComponent",
            "id": "component-ApfPortfolioIcMapComponent-061237228e7047c4eae9745eb7bae279e0d5ae07e08e9247be98e5c22cf8babe4abe09539a397089f10de1baa63855d508f467459f73d97d534a1f847b36a8ad",
            "file": "src/app/apf-portfolio-ic-map/apf-portfolio-ic-map.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-apf-portfolio-ic-map",
            "styleUrls": [
                "./apf-portfolio-ic-map.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./apf-portfolio-ic-map.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-apf-portfolio-ic-map',\r\n  templateUrl: './apf-portfolio-ic-map.component.html',\r\n  styleUrls: ['./apf-portfolio-ic-map.component.scss']\r\n})\r\nexport class ApfPortfolioIcMapComponent {\r\n  constructor() {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "/*@MM new classes for facility selection*/\r\nsvg.FID_0 {\r\n  background-image: url(../../assets/images/_APF-Portfolio_Revised_FacilityHealthv2vFinal.svg);\r\n  background-size: 100% 100%;\r\n  background-repeat: no-repeat;\r\n  max-width: 900px;\r\n  width: 90%;\r\n}\r\n\r\nsvg.FID_3 {\r\n  background-image: url(../../assets/images/_windowAFID3vJPEG.jpg);\r\n  background-size: 100% 100%;\r\n  background-repeat: no-repeat;\r\n  max-width: 900px;\r\n  width: 100%;\r\n  /*margin-top: 100px;*/\r\n}\r\n\r\nsvg.FID_10 {\r\n  background-image: url(../../assets/images/_windowAFID10vJPEG.jpg);\r\n  background-size: 100% 100%;\r\n  background-repeat: no-repeat;\r\n  max-width: 900px;\r\n  width: 100%;\r\n  /*margin-top: 100px;*/\r\n}\r\n\r\nsvg.FID_17 {\r\n  background-image: url(../../assets/images/_windowAFID17vJPEG.jpg);\r\n  background-size: 100% 100%;\r\n  background-repeat: no-repeat;\r\n  max-width: 900px;\r\n  width: 100%;\r\n}\r\n\r\nsvg.FID_6 {\r\n  background-image: url(../../assets/images/_windowAFID6vJPEG.jpg);\r\n  background-size: 100% 100%;\r\n  background-repeat: no-repeat;\r\n  max-width: 900px;\r\n  width: 100%;\r\n}\r\n\r\nsvg.FID_5 {\r\n  background-image: url(../../assets/images/_windowAFID5vJPEG.jpg);\r\n  background-size: 100% 100%;\r\n  background-repeat: no-repeat;\r\n  max-width: 900px;\r\n  width: 100%;\r\n}\r\n\r\nsvg.FID_19 {\r\n  background-image: url(../../assets/images/_windowAFID19vJPEG.jpg);\r\n  background-size: 100% 100%;\r\n  background-repeat: no-repeat;\r\n  max-width: 900px;\r\n  width: 100%;\r\n}\r\n\r\nsvg.FID_11 {\r\n  background-image: url(../../assets/images/_windowAFID11vJPEG.jpg);\r\n  background-size: 100% 100%;\r\n  background-repeat: no-repeat;\r\n  max-width: 900px;\r\n  width: 100%;\r\n}\r\n\r\nsvg.FID_12 {\r\n  background-image: url(../../assets/images/_windowAFID1213vJPEG.jpg);\r\n  background-size: 100% 100%;\r\n  background-repeat: no-repeat;\r\n  max-width: 900px;\r\n  width: 100%;\r\n}\r\n\r\nsvg.FID_13 {\r\n  background-image: url(../../assets/images/_windowAFID1213vJPEG.jpg);\r\n  background-size: 100% 100%;\r\n  background-repeat: no-repeat;\r\n  max-width: 900px;\r\n  width: 100%;\r\n}\r\n\r\nsvg.FID_1 {\r\n  background-image: url(../../assets/images/_windowAFID1vJPEG.jpg);\r\n  background-size: 100% 100%;\r\n  background-repeat: no-repeat;\r\n  max-width: 900px;\r\n  width: 100%;\r\n}\r\n\r\nsvg.FID_2 {\r\n  background-image: url(../../assets/images/_windowAFID2vJPEGvFinal.jpg);\r\n  background-size: 100% 100%;\r\n  background-repeat: no-repeat;\r\n  max-width: 900px;\r\n  width: 100%;\r\n}\r\n\r\npath.windowA {\r\n  fill: transparent;\r\n  cursor: pointer;\r\n  transition: fill 0.2s;\r\n}\r\n\r\n/*test with new svg*/\r\n/*CCE Facility = brown*/\r\nsvg #Pin_Facility_2J a:hover path {\r\n  fill: rgb(180, 107, 23);\r\n  cursor: pointer;\r\n}\r\n\r\nsvg #Pin_Facility_2E a:hover path {\r\n  fill: rgb(180, 107, 23);\r\n  cursor: pointer;\r\n}\r\n\r\nsvg #Pin_Facility_3E a:hover path {\r\n  fill: rgb(180, 107, 23);\r\n  cursor: pointer;\r\n}\r\n\r\nsvg #Pin_Facility_East_Terrace a:hover path {\r\n  fill: rgb(180, 107, 23);\r\n  cursor: pointer;\r\n}\r\n\r\n/*CC Pharmacy Facility = green*/\r\nsvg #Pin_Facility_I_IVAU a:hover path {\r\n  fill: #b5fd19;\r\n  cursor: pointer;\r\n}\r\n\r\nsvg #Pin_Facility_P_IVAU a:hover path {\r\n  fill: #b5fd19;\r\n  cursor: pointer;\r\n}\r\n\r\n/*CC Other Facilities = fuchsia*/\r\nsvg #Pin_Facility_DLM_Image a:hover path {\r\n  fill: #fb09bf;\r\n  cursor: pointer;\r\n}\r\n\r\nsvg #Pin_Facility_NMD a:hover path {\r\n  fill: #fb09bf;\r\n  cursor: pointer;\r\n}\r\n\r\nsvg #Pin_Facility_PET_B3 a:hover path {\r\n  fill: #fb09bf;\r\n  cursor: pointer;\r\n}\r\n\r\nsvg #Pin_Facility_PET_Radiopharm a:hover path {\r\n  fill: #fb09bf;\r\n  cursor: pointer;\r\n}\r\n\r\n/*NCI Facility = blue*/\r\nsvg #Ownership_Facility_Other a:hover path {\r\n  fill: #0ff;\r\n  cursor: pointer;\r\n}\r\n\r\nsvg #Pin_Facility_HPC13 a:hover path {\r\n  /*lab 7*/\r\n  fill: #0ff;\r\n  cursor: pointer;\r\n}\r\n\r\nsvg #Pin_Facility_1B42 a:hover path {\r\n  fill: #0ff;\r\n  cursor: pointer;\r\n}\r\n\r\nsvg #Pin_Facility_10A a:hover path {\r\n  fill: #0ff;\r\n  cursor: pointer;\r\n}\r\n\r\nsvg #Pin_Facility_10B a:hover path {\r\n  fill: #0ff;\r\n  cursor: pointer;\r\n}\r\n\r\n/*NIAID Facility = red*/\r\nsvg #Ownership_Facility_NIAID a:hover path {\r\n  /*lab 2*/\r\n  fill: #c9363c;\r\n  cursor: pointer;\r\n}\r\n\r\n.stRed {\r\n  fill: red;\r\n}\r\n\r\n.stYellow {\r\n  fill: yellow;\r\n}\r\n\r\n.stGray {\r\n  fill: gray;\r\n}\r\n\r\n.stBlack {\r\n  fill: black;\r\n}\r\n\r\n.stGreen {\r\n  fill: green;\r\n}\r\n\r\n.stWhite {\r\n  fill: white;\r\n}\r\n\r\n.stBackHover {\r\n  fill: gray;\r\n  fill-opacity: 0.3;\r\n}\r\n\r\n/*  CSS for dP arrow components  */\r\n.stArrowColorWhite {\r\n  fill: white;\r\n}\r\n\r\n.stArrowBackGray {\r\n  stroke: darkslategray;\r\n  stroke-width: 3px;\r\n  /*stroke-opacity: .5;*/\r\n}\r\n\r\n.stArrowBackGrayHover {\r\n  stroke: black;\r\n  stroke-width: 3px;\r\n  /*stroke-opacity: .5;*/\r\n}\r\n\r\n.st1 {\r\n  fill: #e1e1e1;\r\n}\r\n\r\n.st2 {\r\n  fill: #fbb03b;\r\n}\r\n\r\n.st3 {\r\n  fill-opacity: 0.25;\r\n  stroke: #000;\r\n  stroke-linecap: round;\r\n  stroke-linejoin: round;\r\n}\r\n\r\n.st4 {\r\n  fill: #94762d;\r\n}\r\n\r\n.st5 {\r\n  fill: #0ff;\r\n}\r\n\r\n.st6 {\r\n  fill: #fb09bf;\r\n}\r\n\r\n.st7 {\r\n  fill: #b5fd19;\r\n}\r\n\r\n.st9 {\r\n  fill: none;\r\n}\r\n\r\n.st10 {\r\n  fill: #676767;\r\n}\r\n\r\n.st11 {\r\n  font-family: Calibri;\r\n}\r\n\r\n.st12 {\r\n  font-size: 320.8324px;\r\n}\r\n\r\n.st14 {\r\n  font-size: 213.8883px;\r\n}\r\n",
                    "styleUrl": "./apf-portfolio-ic-map.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "templateData": "<svg\r\n  id=\"statusOverlay\"\r\n  class=\"windowA FID_0\"\r\n  runat=\"server\"\r\n  xmlns=\"http://www.w3.org/2000/svg\"\r\n  viewBox=\"0 0 7613 11828.29\"\r\n>\r\n  <g id=\"pinsFID3\" runat=\"server\" Visible=\"false\">\r\n    <g id=\"pin2N2J1\">\r\n      <circle id=\"pinBack2N2J1\" class=\"stGray\" cx=\"579.1\" cy=\"161\" r=\"15\" />\r\n      <circle id=\"pinColor2N2J1\" class=\"stWhite\" cx=\"579.1\" cy=\"161\" r=\"10\" />\r\n    </g>\r\n    <g id=\"pin2N3071\">\r\n      <circle id=\"pinBack2N3071\" class=\"stGray\" cx=\"97.9\" cy=\"70\" r=\"15\" />\r\n      <circle id=\"pinColor2N3071\" class=\"stWhite\" cx=\"97.9\" cy=\"70\" r=\"10\" />\r\n    </g>\r\n    <g id=\"pin2N3072\">\r\n      <circle id=\"pinBack2N3072\" class=\"stGray\" cx=\"95.8\" cy=\"145.2\" r=\"15\" />\r\n      <circle id=\"pinColor2N3072\" class=\"stWhite\" cx=\"95.8\" cy=\"145.2\" r=\"10\" />\r\n    </g>\r\n    <g id=\"pin2N3073\">\r\n      <circle id=\"pinBack2N3073\" class=\"stGray\" cx=\"301.1\" cy=\"159.1\" r=\"15\" />\r\n      <circle\r\n        id=\"pinColor2N3073\"\r\n        class=\"stWhite\"\r\n        cx=\"301.1\"\r\n        cy=\"159.1\"\r\n        r=\"10\"\r\n      />\r\n    </g>\r\n    <g id=\"pin2N3074\">\r\n      <circle id=\"pinBack2N3074\" class=\"stGray\" cx=\"521.1\" cy=\"160\" r=\"15\" />\r\n      <circle id=\"pinColor2N3074\" class=\"stWhite\" cx=\"521.1\" cy=\"160\" r=\"10\" />\r\n    </g>\r\n    <g id=\"pin2N307A\">\r\n      <circle id=\"pinBack2N307A\" class=\"stGray\" cx=\"323\" cy=\"79.9\" r=\"15\" />\r\n      <circle id=\"pinColor2N307A\" class=\"stWhite\" cx=\"323\" cy=\"79.9\" r=\"10\" />\r\n    </g>\r\n    <g id=\"pin2N307B\">\r\n      <circle id=\"pinBack2N307B\" class=\"stGray\" cx=\"263.7\" cy=\"79.9\" r=\"15\" />\r\n      <circle id=\"pinColor2N307B\" class=\"stWhite\" cx=\"263.7\" cy=\"79.9\" r=\"10\" />\r\n    </g>\r\n    <g id=\"pin2N307C\">\r\n      <circle id=\"pinBack2N307C\" class=\"stGray\" cx=\"212.4\" cy=\"79.9\" r=\"15\" />\r\n      <circle id=\"pinColor2N307C\" class=\"stWhite\" cx=\"212.4\" cy=\"79.9\" r=\"10\" />\r\n    </g>\r\n    <g id=\"pin2N307D\">\r\n      <circle\r\n        id=\"pinBack2N307D\"\r\n        class=\"stGray\"\r\n        cx=\"131.7\"\r\n        cy=\"124.6\"\r\n        r=\"13.5\"\r\n      />\r\n      <circle id=\"pinColor2N307D\" class=\"stWhite\" cx=\"131.7\" cy=\"124.6\" r=\"9\" />\r\n    </g>\r\n    <g id=\"pin2N307G\">\r\n      <circle id=\"pinBack2N307G\" class=\"stGray\" cx=\"134.3\" cy=\"213.5\" r=\"15\" />\r\n      <circle\r\n        id=\"pinColor2N307G\"\r\n        class=\"stWhite\"\r\n        cx=\"134.3\"\r\n        cy=\"213.5\"\r\n        r=\"10\"\r\n      />\r\n    </g>\r\n    <g id=\"pin2N307H\">\r\n      <circle id=\"pinBack2N307H\" class=\"stGray\" cx=\"219.8\" cy=\"213.5\" r=\"15\" />\r\n      <circle\r\n        id=\"pinColor2N307H\"\r\n        class=\"stWhite\"\r\n        cx=\"219.8\"\r\n        cy=\"213.5\"\r\n        r=\"10\"\r\n      />\r\n    </g>\r\n    <g id=\"pin2N307J\">\r\n      <circle id=\"pinBack2N307J\" class=\"stGray\" cx=\"299.1\" cy=\"213.5\" r=\"15\" />\r\n      <circle\r\n        id=\"pinColor2N307J\"\r\n        class=\"stWhite\"\r\n        cx=\"299.1\"\r\n        cy=\"213.5\"\r\n        r=\"10\"\r\n      />\r\n    </g>\r\n    <g id=\"pin2N307JC\">\r\n      <circle id=\"pinBack2N307JC\" class=\"stGray\" cx=\"75\" cy=\"206.3\" r=\"15\" />\r\n      <circle id=\"pinColor2N307JC\" class=\"stWhite\" cx=\"75\" cy=\"206.3\" r=\"10\" />\r\n    </g>\r\n    <g id=\"pin2N307K\">\r\n      <circle id=\"pinBack2N307K\" class=\"stGray\" cx=\"381.8\" cy=\"213.5\" r=\"15\" />\r\n      <circle\r\n        id=\"pinColor2N307K\"\r\n        class=\"stWhite\"\r\n        cx=\"381.8\"\r\n        cy=\"213.5\"\r\n        r=\"10\"\r\n      />\r\n    </g>\r\n    <g id=\"pin2N307L\">\r\n      <circle id=\"pinBack2N307L\" class=\"stGray\" cx=\"479.3\" cy=\"213.5\" r=\"15\" />\r\n      <circle\r\n        id=\"pinColor2N307L\"\r\n        class=\"stWhite\"\r\n        cx=\"479.3\"\r\n        cy=\"213.5\"\r\n        r=\"10\"\r\n      />\r\n    </g>\r\n    <g id=\"pin2N308\">\r\n      <circle id=\"pinBack2N3078\" class=\"stGray\" cx=\"537.1\" cy=\"117.7\" r=\"15\" />\r\n      <circle id=\"pinColor2N308\" class=\"stWhite\" cx=\"537.1\" cy=\"117.7\" r=\"10\" />\r\n    </g>\r\n    <g id=\"pin2N308A\">\r\n      <circle id=\"pinBack2N308A\" class=\"stGray\" cx=\"577.1\" cy=\"68\" r=\"15\" />\r\n      <circle id=\"pinColor2N308A\" class=\"stWhite\" cx=\"577.1\" cy=\"68\" r=\"10\" />\r\n    </g>\r\n    <g id=\"pin2N308C\">\r\n      <circle id=\"pinBack2N308C\" class=\"stGray\" cx=\"485.9\" cy=\"68\" r=\"15\" />\r\n      <circle id=\"pinColor2N308C\" class=\"stWhite\" cx=\"485.9\" cy=\"68\" r=\"10\" />\r\n    </g>\r\n    <g id=\"pin2N308D\">\r\n      <circle id=\"pinBack2N308D\" class=\"stGray\" cx=\"454.8\" cy=\"120.7\" r=\"15\" />\r\n      <circle\r\n        id=\"pinColor2N308D\"\r\n        class=\"stWhite\"\r\n        cx=\"454.8\"\r\n        cy=\"120.7\"\r\n        r=\"10\"\r\n      />\r\n    </g>\r\n    <g id=\"pin2N312\">\r\n      <circle id=\"pinBack2N312\" class=\"stGray\" cx=\"384.8\" cy=\"81.9\" r=\"15\" />\r\n      <circle id=\"pinColor2N312\" class=\"stWhite\" cx=\"384.8\" cy=\"81.9\" r=\"10\" />\r\n    </g>\r\n    <g id=\"pin2N316\">\r\n      <circle id=\"pinBack2N316\" class=\"stGray\" cx=\"148.2\" cy=\"70\" r=\"15\" />\r\n      <circle id=\"pinColor2N316\" class=\"stWhite\" cx=\"148.2\" cy=\"70\" r=\"10\" />\r\n    </g>\r\n  </g>\r\n  <g id=\"dPArrowsFID3\" runat=\"server\" Visible=\"false\">\r\n    <g id=\"pin2N3072_2N3071_DP\">\r\n      <polygon\r\n        id=\"pinBack2N3072_2N3071_DP\"\r\n        class=\"stGray\"\r\n        points=\"97.84 85.79 82.87 101.29 91.88 101.29 91.88 125.55 103.81 125.55 103.81 101.29 112.87 101.29 97.84 85.79\"\r\n      />\r\n      <polygon\r\n        id=\"pinColor2N3072_2N3071_DP\"\r\n        class=\"stWhite\"\r\n        points=\"97.85 88.64 87.55 99.31 93.87 99.31 93.87 123.57 101.83 123.57 101.83 99.31 108.19 99.31 97.85 88.64\"\r\n      />\r\n    </g>\r\n    <g id=\"pin2N3073_2N3072_DP\">\r\n      <polygon\r\n        id=\"pinBack2N3073_2N3072_DP\"\r\n        class=\"stGray\"\r\n        points=\"102.86 166.09 118.36 181.06 118.36 172.05 142.63 172.05 142.63 160.12 118.36 160.12 118.36 151.06 102.86 166.09\"\r\n      />\r\n      <polygon\r\n        id=\"pinColor2N3073_2N3072_DP\"\r\n        class=\"stWhite\"\r\n        points=\"105.72 166.09 116.38 176.39 116.38 170.07 140.64 170.07 140.64 162.11 116.38 162.11 116.38 155.75 105.72 166.09\"\r\n      />\r\n    </g>\r\n    <g id=\"pin2N3074_2N3073_DP\">\r\n      <polygon\r\n        id=\"pinBack2N3074_2N3073_DP\"\r\n        class=\"stGray\"\r\n        points=\"508.77 166.68 493.27 151.71 493.27 160.72 469.01 160.72 469.01 172.65 493.27 172.65 493.27 181.71 508.77 166.68\"\r\n      />\r\n      <polygon\r\n        id=\"pinColor2N3074_2N3073_DP\"\r\n        class=\"stWhite\"\r\n        points=\"505.92 166.69 495.25 156.39 495.25 162.71 470.99 162.71 470.99 170.67 495.25 170.67 495.25 177.02 505.92 166.69\"\r\n      />\r\n    </g>\r\n    <g id=\"pin2N307A_2N3073_DP\">\r\n      <polygon\r\n        id=\"pinBack2N307A_2N3073_DP\"\r\n        class=\"stGray\"\r\n        points=\"333.63 107.8 318.66 123.31 327.67 123.31 327.67 147.57 339.6 147.57 339.6 123.31 348.66 123.31 333.63 107.8\"\r\n      />\r\n      <polygon\r\n        id=\"pinColor2N307A_2N3073_DP\"\r\n        class=\"stWhite\"\r\n        points=\"333.64 110.66 323.34 121.32 329.66 121.32 329.66 145.58 337.62 145.58 337.62 121.32 343.98 121.32 333.64 110.66\"\r\n      />\r\n    </g>\r\n    <g id=\"pin2N307B_2N3073_DP\">\r\n      <polygon\r\n        id=\"pinBack2N307B_2N3073_DP\"\r\n        class=\"stGray\"\r\n        points=\"266.46 157.24 281.43 141.74 272.42 141.74 272.42 117.48 260.49 117.48 260.49 141.74 251.43 141.74 266.46 157.24\"\r\n      />\r\n      <polygon\r\n        id=\"pinColor2N307B_2N3073_DP\"\r\n        class=\"stWhite\"\r\n        points=\"266.46 154.39 276.75 143.73 270.44 143.73 270.44 119.46 262.48 119.46 262.48 143.73 256.12 143.73 266.46 154.39\"\r\n      />\r\n    </g>\r\n    <g id=\"pin2N307C_2N3073_DP\">\r\n      <polygon\r\n        id=\"pinBack2N307C_2N3073_DP\"\r\n        class=\"stGray\"\r\n        points=\"206.83 158 221.81 142.5 212.8 142.5 212.8 118.24 200.87 118.24 200.87 142.5 191.81 142.5 206.83 158\"\r\n      />\r\n      <polygon\r\n        id=\"pinColor2N307C_2N3073_DP\"\r\n        class=\"stWhite\"\r\n        points=\"206.83 155.14 217.13 144.48 210.81 144.48 210.81 120.22 202.85 120.22 202.85 144.48 196.49 144.48 206.83 155.14\"\r\n      />\r\n    </g>\r\n    <g id=\"pin2N307D_2N3073_DP\">\r\n      <polygon\r\n        id=\"pinBack2N307D_2N3073_DP\"\r\n        class=\"stGray\"\r\n        points=\"162.16 114.79 147.19 130.29 156.2 130.29 156.2 154.55 168.13 154.55 168.13 130.29 177.19 130.29 162.16 114.79\"\r\n      />\r\n      <polygon\r\n        id=\"pinColor2N307D_2N3073_DP\"\r\n        class=\"stWhite\"\r\n        points=\"162.16 117.64 151.86 128.31 158.18 128.31 158.18 152.57 166.14 152.57 166.14 128.31 172.5 128.31 162.16 117.64\"\r\n      />\r\n    </g>\r\n    <g id=\"pin2N307G_2N3073_DP\">\r\n      <polygon\r\n        id=\"pinBack2N307G_2N3073_DP\"\r\n        class=\"stGray\"\r\n        points=\"163.16 158.06 148.19 173.56 157.2 173.56 157.2 197.82 169.13 197.82 169.13 173.56 178.19 173.56 163.16 158.06\"\r\n      />\r\n      <polygon\r\n        id=\"pinColor2N307G_2N3073_DP\"\r\n        class=\"stWhite\"\r\n        points=\"163.16 160.91 152.86 171.58 159.18 171.58 159.18 195.84 167.14 195.84 167.14 171.58 173.5 171.58 163.16 160.91\"\r\n      />\r\n    </g>\r\n    <g id=\"pin2N307H_2N3073_DP\">\r\n      <polygon\r\n        id=\"pinBack2N307H_2N3073_DP\"\r\n        class=\"stGray\"\r\n        points=\"204.78 158.5 189.81 174 198.81 174 198.81 198.26 210.74 198.26 210.74 174 219.81 174 204.78 158.5\"\r\n      />\r\n      <polygon\r\n        id=\"pinColor2N307H_2N3073_DP\"\r\n        class=\"stWhite\"\r\n        points=\"204.78 161.35 194.48 172.01 200.8 172.01 200.8 196.27 208.76 196.27 208.76 172.01 215.12 172.01 204.78 161.35\"\r\n      />\r\n    </g>\r\n    <g id=\"pin2N307J_2N3073_DP\">\r\n      <polygon\r\n        id=\"pinBack2N307J_2N3073_DP\"\r\n        class=\"stGray\"\r\n        points=\"325.53 154.06 310.56 169.56 319.56 169.56 319.56 193.82 331.5 193.82 331.5 169.56 340.56 169.56 325.53 154.06\"\r\n      />\r\n      <polygon\r\n        id=\"pinColor2N307J_2N3073_DP\"\r\n        class=\"stWhite\"\r\n        points=\"325.53 156.91 315.23 167.58 321.55 167.58 321.55 191.84 329.51 191.84 329.51 167.58 335.87 167.58 325.53 156.91\"\r\n      />\r\n    </g>\r\n    <g id=\"pin2N307K_2N3073_DP\">\r\n      <polygon\r\n        id=\"pinBack2N307K_2N3073_DP\"\r\n        class=\"stGray\"\r\n        points=\"356.6 153.93 341.63 169.43 350.64 169.43 350.64 193.69 362.57 193.69 362.57 169.43 371.63 169.43 356.6 153.93\"\r\n      />\r\n      <polygon\r\n        id=\"pinColor2N307K_2N3073_DP\"\r\n        class=\"stWhite\"\r\n        points=\"356.61 156.78 346.31 167.45 352.63 167.45 352.63 191.71 360.59 191.71 360.59 167.45 366.95 167.45 356.61 156.78\"\r\n      />\r\n    </g>\r\n    <g id=\"pin2N307L_2N3073_DP\">\r\n      <polygon\r\n        id=\"pinBack2N307L_2N3073_DP\"\r\n        class=\"stGray\"\r\n        points=\"449.25 157.93 434.28 173.43 443.29 173.43 443.29 197.69 455.22 197.69 455.22 173.43 464.28 173.43 449.25 157.93\"\r\n      />\r\n      <polygon\r\n        id=\"pinColor2N307L_2N3073_DP\"\r\n        class=\"stWhite\"\r\n        points=\"449.25 160.78 438.95 171.45 445.27 171.45 445.27 195.71 453.23 195.71 453.23 171.45 459.59 171.45 449.25 160.78\"\r\n      />\r\n    </g>\r\n    <g id=\"pin2N308D_2N3073_DP\">\r\n      <polygon\r\n        id=\"pinBack2N308D_2N3073_DP\"\r\n        class=\"stGray\"\r\n        points=\"474.94 159.61 489.92 144.11 480.91 144.11 480.91 119.85 468.98 119.85 468.98 144.11 459.92 144.11 474.94 159.61\"\r\n      />\r\n      <polygon\r\n        id=\"pinColor2N308D_2N3073_DP\"\r\n        class=\"stWhite\"\r\n        points=\"474.94 156.76 485.24 146.09 478.92 146.09 478.92 121.83 470.96 121.83 470.96 146.09 464.6 146.09 474.94 156.76\"\r\n      />\r\n    </g>\r\n    <g id=\"pin2N2J1_2N3074_DP\">\r\n      <polygon\r\n        id=\"pinBack2N2J1_2N3074_DP\"\r\n        class=\"stGray\"\r\n        points=\"560.96 165.03 545.46 150.06 545.46 159.07 521.2 159.07 521.2 171 545.46 171 545.46 180.06 560.96 165.03\"\r\n      />\r\n      <polygon\r\n        id=\"pinColor2N2J1_2N3074_DP\"\r\n        class=\"stWhite\"\r\n        points=\"558.11 165.03 547.45 154.74 547.45 161.05 523.18 161.05 523.18 169.01 547.45 169.01 547.45 175.37 558.11 165.03\"\r\n      />\r\n    </g>\r\n    <g id=\"pin2N308_2N3074_DP\">\r\n      <polygon\r\n        id=\"pinBack2N308_2N3074_DP\"\r\n        class=\"stGray\"\r\n        points=\"505.69 158.57 520.66 143.06 511.65 143.06 511.65 118.8 499.72 118.8 499.72 143.06 490.66 143.06 505.69 158.57\"\r\n      />\r\n      <polygon\r\n        id=\"pinColor2N308_2N3074_DP\"\r\n        class=\"stWhite\"\r\n        points=\"505.69 155.71 515.99 145.05 509.67 145.05 509.67 120.79 501.71 120.79 501.71 145.05 495.35 145.05 505.69 155.71\"\r\n      />\r\n    </g>\r\n    <g id=\"pin2N308_2N308A_DP\">\r\n      <polygon\r\n        id=\"pinBack2N308_2N308A_DP\"\r\n        class=\"stGray\"\r\n        points=\"581.05 74 566.08 89.5 575.09 89.5 575.09 113.76 587.02 113.76 587.02 89.5 596.08 89.5 581.05 74\"\r\n      />\r\n      <polygon\r\n        id=\"pinColor2N308_2N308A_DP\"\r\n        class=\"stWhite\"\r\n        points=\"581.05 76.85 570.75 87.51 577.07 87.51 577.07 111.77 585.03 111.77 585.03 87.51 591.39 87.51 581.05 76.85\"\r\n      />\r\n    </g>\r\n    <g id=\"pin2N308A_2N308C_DP\">\r\n      <polygon\r\n        id=\"pinBack2N308A_2N308C_DP\"\r\n        class=\"stGray\"\r\n        points=\"571.96 60.86 556.46 45.89 556.46 54.9 532.2 54.9 532.2 66.83 556.46 66.83 556.46 75.89 571.96 60.86\"\r\n      />\r\n      <polygon\r\n        id=\"pinColor2N308A_2N308C_DP\"\r\n        class=\"stWhite\"\r\n        points=\"569.11 60.86 558.45 50.56 558.45 56.88 534.18 56.88 534.18 64.84 558.45 64.84 558.45 71.2 569.11 60.86\"\r\n      />\r\n    </g>\r\n    <g id=\"pin2N308C_2N308D_DP\">\r\n      <polygon\r\n        id=\"pinBack2N308C_2N308D_DP\"\r\n        class=\"stGray\"\r\n        points=\"432.85 76 417.88 91.5 426.89 91.5 426.89 115.76 438.82 115.76 438.82 91.5 447.88 91.5 432.85 76\"\r\n      />\r\n      <polygon\r\n        id=\"pinColor2N308C_2N308D_DP\"\r\n        class=\"stWhite\"\r\n        points=\"432.85 78.85 422.55 89.51 428.87 89.51 428.87 113.77 436.83 113.77 436.83 89.51 443.19 89.51 432.85 78.85\"\r\n      />\r\n    </g>\r\n  </g>\r\n\r\n  <g id=\"pinsFID17\" runat=\"server\" Visible=\"false\">\r\n    <g id=\"pin1C166A5A1\">\r\n      <circle\r\n        id=\"pinBack1C166A5A1\"\r\n        class=\"stGray\"\r\n        cx=\"475.1\"\r\n        cy=\"556.5\"\r\n        r=\"15\"\r\n      />\r\n      <circle\r\n        id=\"pinColor1C166A5A1\"\r\n        class=\"stWhite\"\r\n        cx=\"475.1\"\r\n        cy=\"556.5\"\r\n        r=\"10\"\r\n      />\r\n    </g>\r\n    <g id=\"pin1C166A5A\">\r\n      <circle\r\n        id=\"pinBack1C166A5A\"\r\n        class=\"stGray\"\r\n        cx=\"536.4\"\r\n        cy=\"487.8\"\r\n        r=\"15\"\r\n      />\r\n      <circle\r\n        id=\"pinColor1C166A5A\"\r\n        class=\"stWhite\"\r\n        cx=\"536.4\"\r\n        cy=\"487.8\"\r\n        r=\"10\"\r\n      />\r\n    </g>\r\n    <g id=\"pin1C166A5B\">\r\n      <circle id=\"pinBack1C166A5B\" class=\"stGray\" cx=\"429\" cy=\"487.8\" r=\"15\" />\r\n      <circle\r\n        id=\"pinColor1C166A5B\"\r\n        class=\"stWhite\"\r\n        cx=\"429\"\r\n        cy=\"487.8\"\r\n        r=\"10\"\r\n      />\r\n    </g>\r\n    <g id=\"pin1C166A5\">\r\n      <circle id=\"pinBack1C166A5\" class=\"stGray\" cx=\"570.6\" cy=\"420.3\" r=\"15\" />\r\n      <circle\r\n        id=\"pinColor1C166A5\"\r\n        class=\"stWhite\"\r\n        cx=\"570.6\"\r\n        cy=\"420.3\"\r\n        r=\"10\"\r\n      />\r\n    </g>\r\n    <g id=\"pin1C166A5B1\">\r\n      <circle\r\n        id=\"pinBack1C166A5B1\"\r\n        class=\"stGray\"\r\n        cx=\"379.8\"\r\n        cy=\"420.3\"\r\n        r=\"15\"\r\n      />\r\n      <circle\r\n        id=\"pinColor1C166A5B1\"\r\n        class=\"stWhite\"\r\n        cx=\"379.8\"\r\n        cy=\"420.3\"\r\n        r=\"10\"\r\n      />\r\n    </g>\r\n    <g id=\"pin1C166A1\">\r\n      <circle id=\"pinBack1C166A1\" class=\"stGray\" cx=\"536.4\" cy=\"210.1\" r=\"15\" />\r\n      <circle\r\n        id=\"pinColor1C166A1\"\r\n        class=\"stWhite\"\r\n        cx=\"536.4\"\r\n        cy=\"210.1\"\r\n        r=\"10\"\r\n      />\r\n    </g>\r\n    <g id=\"pin1C166A4\">\r\n      <circle id=\"pinBack1C166A4\" class=\"stGray\" cx=\"581.5\" cy=\"335.4\" r=\"15\" />\r\n      <circle\r\n        id=\"pinColor1C166A4\"\r\n        class=\"stWhite\"\r\n        cx=\"581.5\"\r\n        cy=\"335.4\"\r\n        r=\"10\"\r\n      />\r\n    </g>\r\n    <g id=\"pin1C166A3\">\r\n      <circle id=\"pinBack1C166A3\" class=\"stGray\" cx=\"523\" cy=\"335.4\" r=\"15\" />\r\n      <circle id=\"pinColor1C166A3\" class=\"stWhite\" cx=\"523\" cy=\"335.4\" r=\"10\" />\r\n    </g>\r\n    <g id=\"pin1C166A7A\">\r\n      <circle id=\"pinBack1C166A7A\" class=\"stGray\" cx=\"330\" cy=\"437.9\" r=\"15\" />\r\n      <circle\r\n        id=\"pinColor1C166A7A\"\r\n        class=\"stWhite\"\r\n        cx=\"330\"\r\n        cy=\"437.9\"\r\n        r=\"10\"\r\n      />\r\n    </g>\r\n    <g id=\"pin1C166A7B\">\r\n      <circle id=\"pinBack1C166A7B\" class=\"stGray\" cx=\"306\" cy=\"539.8\" r=\"15\" />\r\n      <circle\r\n        id=\"pinColor1C166A7B\"\r\n        class=\"stWhite\"\r\n        cx=\"306\"\r\n        cy=\"539.8\"\r\n        r=\"10\"\r\n      />\r\n    </g>\r\n    <g id=\"pin1C166A7\">\r\n      <circle id=\"pinBack1C166A7\" class=\"stGray\" cx=\"193.5\" cy=\"486.8\" r=\"15\" />\r\n      <circle\r\n        id=\"pinColor1C166A7\"\r\n        class=\"stWhite\"\r\n        cx=\"193.5\"\r\n        cy=\"486.8\"\r\n        r=\"10\"\r\n      />\r\n    </g>\r\n    <g id=\"pin1C166A7C\">\r\n      <circle\r\n        id=\"pinBack1C166A7C\"\r\n        class=\"stGray\"\r\n        cx=\"224.8\"\r\n        cy=\"532.7\"\r\n        r=\"15\"\r\n      />\r\n      <circle\r\n        id=\"pinColor1C166A7C\"\r\n        class=\"stWhite\"\r\n        cx=\"224.8\"\r\n        cy=\"532.7\"\r\n        r=\"10\"\r\n      />\r\n    </g>\r\n    <g id=\"pin1C166A7D\">\r\n      <circle\r\n        id=\"pinBack1C166A7D\"\r\n        class=\"stGray\"\r\n        cx=\"144.1\"\r\n        cy=\"544.6\"\r\n        r=\"15\"\r\n      />\r\n      <circle\r\n        id=\"pinColor1C166A7D\"\r\n        class=\"stWhite\"\r\n        cx=\"144.1\"\r\n        cy=\"544.6\"\r\n        r=\"10\"\r\n      />\r\n    </g>\r\n    <g id=\"pin1C166A7E\">\r\n      <circle\r\n        id=\"pinBack1C166A7E\"\r\n        class=\"stGray\"\r\n        cx=\"163.5\"\r\n        cy=\"434.1\"\r\n        r=\"15\"\r\n      />\r\n      <circle\r\n        id=\"pinColor1C166A7E\"\r\n        class=\"stWhite\"\r\n        cx=\"163.5\"\r\n        cy=\"434.1\"\r\n        r=\"10\"\r\n      />\r\n    </g>\r\n    <g id=\"pin1C166A\">\r\n      <circle id=\"pinBack1C166A\" class=\"stGray\" cx=\"280.3\" cy=\"385.8\" r=\"15\" />\r\n      <circle\r\n        id=\"pinColor1C166A\"\r\n        class=\"stWhite\"\r\n        cx=\"280.3\"\r\n        cy=\"385.8\"\r\n        r=\"10\"\r\n      />\r\n    </g>\r\n    <g id=\"pin1C166A9\">\r\n      <circle id=\"pinBack1C166A9\" class=\"stGray\" cx=\"97.8\" cy=\"453.2\" r=\"15\" />\r\n      <circle\r\n        id=\"pinColor1C166A9\"\r\n        class=\"stWhite\"\r\n        cx=\"97.8\"\r\n        cy=\"453.2\"\r\n        r=\"10\"\r\n      />\r\n    </g>\r\n    <g id=\"pin1C166A9A\">\r\n      <circle id=\"pinBack1C166A9A\" class=\"stGray\" cx=\"49.8\" cy=\"544.6\" r=\"15\" />\r\n      <circle\r\n        id=\"pinColor1C166A9A\"\r\n        class=\"stWhite\"\r\n        cx=\"49.8\"\r\n        cy=\"544.6\"\r\n        r=\"10\"\r\n      />\r\n    </g>\r\n    <g id=\"pin1C166A9B\">\r\n      <circle id=\"pinBack1C166A9B\" class=\"stGray\" cx=\"37.9\" cy=\"434.1\" r=\"15\" />\r\n      <circle\r\n        id=\"pinColor1C166A9B\"\r\n        class=\"stWhite\"\r\n        cx=\"37.9\"\r\n        cy=\"434.1\"\r\n        r=\"10\"\r\n      />\r\n    </g>\r\n    <g id=\"pin1C166B\">\r\n      <circle id=\"pinBack1C166B\" class=\"stGray\" cx=\"388.2\" cy=\"96.1\" r=\"15\" />\r\n      <circle id=\"pinColor1C166B\" class=\"stWhite\" cx=\"388.2\" cy=\"96.1\" r=\"10\" />\r\n    </g>\r\n    <g id=\"pin1C166B1\">\r\n      <circle id=\"pinBack1C166B1\" class=\"stGray\" cx=\"234\" cy=\"96.1\" r=\"15\" />\r\n      <circle id=\"pinColor1C166B1\" class=\"stWhite\" cx=\"234\" cy=\"96.1\" r=\"10\" />\r\n    </g>\r\n    <g id=\"pin1C166C\">\r\n      <circle id=\"pinBack1C166C\" class=\"stGray\" cx=\"438.3\" cy=\"274.1\" r=\"15\" />\r\n      <circle\r\n        id=\"pinColor1C166C\"\r\n        class=\"stWhite\"\r\n        cx=\"438.3\"\r\n        cy=\"274.1\"\r\n        r=\"10\"\r\n      />\r\n    </g>\r\n    <g id=\"pin1C166C1\">\r\n      <circle id=\"pinBack1C166C1\" class=\"stGray\" cx=\"427.3\" cy=\"346.3\" r=\"15\" />\r\n      <circle\r\n        id=\"pinColor1C166C1\"\r\n        class=\"stWhite\"\r\n        cx=\"427.3\"\r\n        cy=\"346.3\"\r\n        r=\"10\"\r\n      />\r\n    </g>\r\n    <g id=\"pin1C166D\">\r\n      <circle id=\"pinBack1C166D\" class=\"stGray\" cx=\"381.3\" cy=\"327.9\" r=\"15\" />\r\n      <circle\r\n        id=\"pinColor1C166D\"\r\n        class=\"stWhite\"\r\n        cx=\"381.3\"\r\n        cy=\"327.9\"\r\n        r=\"10\"\r\n      />\r\n    </g>\r\n    <g id=\"pin1C166D1\">\r\n      <circle id=\"pinBack1C166D1\" class=\"stGray\" cx=\"386.3\" cy=\"266.4\" r=\"15\" />\r\n      <circle\r\n        id=\"pinColor1C166D1\"\r\n        class=\"stWhite\"\r\n        cx=\"386.3\"\r\n        cy=\"266.4\"\r\n        r=\"10\"\r\n      />\r\n    </g>\r\n    <g id=\"pin1C166D1A\">\r\n      <circle\r\n        id=\"pinBack1C166D1A\"\r\n        class=\"stGray\"\r\n        cx=\"326.7\"\r\n        cy=\"304.1\"\r\n        r=\"15\"\r\n      />\r\n      <circle\r\n        id=\"pinColor1C166D1A\"\r\n        class=\"stWhite\"\r\n        cx=\"326.7\"\r\n        cy=\"304.1\"\r\n        r=\"10\"\r\n      />\r\n    </g>\r\n    <g id=\"pin1C166G\">\r\n      <circle id=\"pinBack1C166G\" class=\"stGray\" cx=\"141.7\" cy=\"334.4\" r=\"15\" />\r\n      <circle\r\n        id=\"pinColor1C166G\"\r\n        class=\"stWhite\"\r\n        cx=\"141.7\"\r\n        cy=\"334.4\"\r\n        r=\"10\"\r\n      />\r\n    </g>\r\n    <g id=\"pin1C166G1\">\r\n      <circle id=\"pinBack1C166G1\" class=\"stGray\" cx=\"187.7\" cy=\"304.1\" r=\"15\" />\r\n      <circle\r\n        id=\"pinColor1C166G1\"\r\n        class=\"stWhite\"\r\n        cx=\"187.7\"\r\n        cy=\"304.1\"\r\n        r=\"10\"\r\n      />\r\n    </g>\r\n    <g id=\"pin1C166G1A\">\r\n      <circle\r\n        id=\"pinBack1C166G1A\"\r\n        class=\"stGray\"\r\n        cx=\"234.7\"\r\n        cy=\"274.1\"\r\n        r=\"15\"\r\n      />\r\n      <circle\r\n        id=\"pinColor1C166G1A\"\r\n        class=\"stWhite\"\r\n        cx=\"234.7\"\r\n        cy=\"274.1\"\r\n        r=\"10\"\r\n      />\r\n    </g>\r\n  </g>\r\n  <g id=\"dPArrowsFID17\" runat=\"server\" Visible=\"false\">\r\n    <g id=\"pin1C166A3_1C166A_DP\">\r\n      <polygon\r\n        id=\"pinBack1C166A3_1C166A_DP\"\r\n        class=\"stGray\"\r\n        points=\"531.6 334.46 512.74 353.99 524.09 353.99 524.09 384.55 539.12 384.55 539.12 353.99 550.54 353.99 531.6 334.46\"\r\n      />\r\n      <polygon\r\n        id=\"pinColor1C166A3_1C166A_DP\"\r\n        class=\"stWhite\"\r\n        points=\"531.61 338.05 518.63 351.49 526.59 351.49 526.59 382.05 536.62 382.05 536.62 351.49 544.63 351.49 531.61 338.05\"\r\n      />\r\n    </g>\r\n    <g id=\"pin1C166A4_1C166A_DP\">\r\n      <polygon\r\n        id=\"pinBack1C166A4_1C166A_DP\"\r\n        class=\"stGray\"\r\n        points=\"572.4 335 553.54 354.53 564.89 354.53 564.89 385.1 579.92 385.1 579.92 354.53 591.33 354.53 572.4 335\"\r\n      />\r\n      <polygon\r\n        id=\"pinColor1C166A4_1C166A_DP\"\r\n        class=\"stWhite\"\r\n        points=\"572.4 338.6 559.43 352.03 567.39 352.03 567.39 382.6 577.42 382.6 577.42 352.03 585.43 352.03 572.4 338.6\"\r\n      />\r\n    </g>\r\n    <g id=\"pin1C166A5_1C166A_DP\">\r\n      <polygon\r\n        id=\"pinBack1C166A5_1C166A_DP\"\r\n        class=\"stGray\"\r\n        points=\"589.3 377.46 570.43 396.99 581.78 396.99 581.78 427.55 596.82 427.55 596.82 396.99 608.23 396.99 589.3 377.46\"\r\n      />\r\n      <polygon\r\n        id=\"pinColor1C166A5_1C166A_DP\"\r\n        class=\"stWhite\"\r\n        points=\"589.3 381.05 576.32 394.49 584.28 394.49 584.28 425.05 594.31 425.05 594.31 394.49 602.32 394.49 589.3 381.05\"\r\n      />\r\n    </g>\r\n    <g id=\"pin1C166A6_1C166A_DP\">\r\n      <polygon\r\n        id=\"pinBack1C166A6_1C166A_DP\"\r\n        class=\"stGray\"\r\n        points=\"460.86 428.1 479.72 408.57 468.37 408.57 468.37 378.01 453.34 378.01 453.34 408.57 441.93 408.57 460.86 428.1\"\r\n      />\r\n      <polygon\r\n        id=\"pinColor1C166A6_1C166A_DP\"\r\n        class=\"stWhite\"\r\n        points=\"460.86 424.51 473.83 411.07 465.87 411.07 465.87 380.51 455.84 380.51 455.84 411.07 447.83 411.07 460.86 424.51\"\r\n      />\r\n    </g>\r\n    <g id=\"pin1C166A9_1C166A_DP\">\r\n      <polygon\r\n        id=\"pinBack1C166A9_1C166A_DP\"\r\n        class=\"stGray\"\r\n        points=\"97.45 445.22 116.31 425.69 104.96 425.69 104.96 395.13 89.93 395.13 89.93 425.69 78.52 425.69 97.45 445.22\"\r\n      />\r\n      <polygon\r\n        id=\"pinColor1C166A9_1C166A_DP\"\r\n        class=\"stWhite\"\r\n        points=\"97.45 441.63 110.42 428.19 102.46 428.19 102.46 397.63 92.43 397.63 92.43 428.19 84.42 428.19 97.45 441.63\"\r\n      />\r\n    </g>\r\n    <g id=\"pin1C166A9B_1C166A_DP\">\r\n      <polygon\r\n        id=\"pinBack1C166A9B_1C166A_DP\"\r\n        class=\"stGray\"\r\n        points=\"36.32 384.2 63.47 383.73 55.44 375.71 77.06 354.09 66.43 343.46 44.81 365.08 36.74 357.01 36.32 384.2\"\r\n      />\r\n      <polygon\r\n        id=\"pinColor1C166A9B_1C166A_DP\"\r\n        class=\"stWhite\"\r\n        points=\"38.86 381.66 57.53 381.33 51.91 375.71 73.52 354.09 66.43 347 44.81 368.61 39.15 362.95 38.86 381.66\"\r\n      />\r\n    </g>\r\n    <g id=\"pin1C166C_1C166A_DP\">\r\n      <polygon\r\n        id=\"pinBack1C166C_1C166A_DP\"\r\n        class=\"stGray\"\r\n        points=\"494.07 310.79 474.54 291.93 474.54 303.28 443.98 303.28 443.98 318.31 474.54 318.31 474.54 329.72 494.07 310.79\"\r\n      />\r\n      <polygon\r\n        id=\"pinColor1C166C_1C166A_DP\"\r\n        class=\"stWhite\"\r\n        points=\"490.48 310.79 477.04 297.82 477.04 305.78 446.48 305.78 446.48 315.81 477.04 315.81 477.04 323.82 490.48 310.79\"\r\n      />\r\n    </g>\r\n    <g id=\"pin1C166C1_1C166A_DP\">\r\n      <polygon\r\n        id=\"pinBack1C166C1_1C166A_DP\"\r\n        class=\"stGray\"\r\n        points=\"440.79 350.9 460.32 369.76 460.32 358.41 490.88 358.41 490.88 343.38 460.32 343.38 460.32 331.97 440.79 350.9\"\r\n      />\r\n      <polygon\r\n        id=\"pinColor1C166C1_1C166A_DP\"\r\n        class=\"stWhite\"\r\n        points=\"444.38 350.9 457.81 363.87 457.81 355.91 488.38 355.91 488.38 345.88 457.81 345.88 457.81 337.87 444.38 350.9\"\r\n      />\r\n    </g>\r\n    <g id=\"pin1C166D_1C166A_DP\">\r\n      <polygon\r\n        id=\"pinBack1C166D_1C166A_DP\"\r\n        class=\"stGray\"\r\n        points=\"375.63 394.81 394.49 375.28 383.14 375.28 383.14 344.72 368.11 344.72 368.11 375.28 356.7 375.28 375.63 394.81\"\r\n      />\r\n      <polygon\r\n        id=\"pinColor1C166D_1C166A_DP\"\r\n        class=\"stWhite\"\r\n        points=\"375.63 391.22 388.6 377.78 380.64 377.78 380.64 347.22 370.61 347.22 370.61 377.78 362.6 377.78 375.63 391.22\"\r\n      />\r\n    </g>\r\n    <g id=\"pin1C166G_1C166A_DP\">\r\n      <polygon\r\n        id=\"pinBack1C166G_1C166A_DP\"\r\n        class=\"stGray\"\r\n        points=\"137.25 391.81 156.11 372.28 144.76 372.28 144.76 341.72 129.73 341.72 129.73 372.28 118.31 372.28 137.25 391.81\"\r\n      />\r\n      <polygon\r\n        id=\"pinColor1C166G_1C166A_DP\"\r\n        class=\"stWhite\"\r\n        points=\"137.24 388.22 150.22 374.78 142.26 374.78 142.26 344.22 132.23 344.22 132.23 374.78 124.22 374.78 137.24 388.22\"\r\n      />\r\n    </g>\r\n    <g id=\"pin1C166A7A_1C166A_DP\">\r\n      <polygon\r\n        id=\"pinBack1C166A7A_1C166A_DP\"\r\n        class=\"stGray\"\r\n        points=\"278.5 377.46 259.64 396.99 270.99 396.99 270.99 427.55 286.02 427.55 286.02 396.99 297.44 396.99 278.5 377.46\"\r\n      />\r\n      <polygon\r\n        id=\"pinColor1C166A7A_1C166A_DP\"\r\n        class=\"stWhite\"\r\n        points=\"278.5 381.05 265.53 394.49 273.49 394.49 273.49 425.05 283.52 425.05 283.52 394.49 291.53 394.49 278.5 381.05\"\r\n      />\r\n    </g>\r\n    <g id=\"pin1C166B_1C166A1_DP\">\r\n      <polygon\r\n        id=\"pinBack1C166B_1C166A1_DP\"\r\n        class=\"stGray\"\r\n        points=\"490.85 142.25 471.98 161.78 483.33 161.78 483.33 192.34 498.36 192.34 498.36 161.78 509.78 161.78 490.85 142.25\"\r\n      />\r\n      <polygon\r\n        id=\"pinColor1C166B_1C166A1_DP\"\r\n        class=\"stWhite\"\r\n        points=\"490.85 145.85 477.87 159.28 485.83 159.28 485.83 189.85 495.86 189.85 495.86 159.28 503.87 159.28 490.85 145.85\"\r\n      />\r\n    </g>\r\n    <g id=\"pin1C166A5A_1C166A5_DP\">\r\n      <polygon\r\n        id=\"pinBack1C166A5A_1C166A5_DP\"\r\n        class=\"stGray\"\r\n        points=\"552.5 411.16 533.64 430.69 544.99 430.69 544.99 461.25 560.02 461.25 560.02 430.69 571.43 430.69 552.5 411.16\"\r\n      />\r\n      <polygon\r\n        id=\"pinColor1C166A5A_1C166A5_DP\"\r\n        class=\"stWhite\"\r\n        points=\"552.5 414.75 539.53 428.19 547.49 428.19 547.49 458.75 557.52 458.75 557.52 428.19 565.53 428.19 552.5 414.75\"\r\n      />\r\n    </g>\r\n    <g id=\"pin1C166A5A1_1C166A5A_DP\">\r\n      <polygon\r\n        id=\"pinBack1C166A5A1_1C166A5A_DP\"\r\n        class=\"stGray\"\r\n        points=\"511.7 512.51 492.84 532.03 504.19 532.03 504.19 562.6 519.22 562.6 519.22 532.03 530.64 532.03 511.7 512.51\"\r\n      />\r\n      <polygon\r\n        id=\"pinColor1C166A5A1_1C166A5A_DP\"\r\n        class=\"stWhite\"\r\n        points=\"511.71 516.1 498.73 529.53 506.69 529.53 506.69 560.1 516.72 560.1 516.72 529.53 524.73 529.53 511.71 516.1\"\r\n      />\r\n    </g>\r\n    <g id=\"pin1C166A5B_1C166A5A1_DP\">\r\n      <polygon\r\n        id=\"pinBack1C166A5B_1C166A5A1_DP\"\r\n        class=\"stGray\"\r\n        points=\"438.36 563.14 457.22 543.62 445.87 543.62 445.87 513.05 430.84 513.05 430.84 543.62 419.42 543.62 438.36 563.14\"\r\n      />\r\n      <polygon\r\n        id=\"pinColor1C166A5B_1C166A5A1_DP\"\r\n        class=\"stWhite\"\r\n        points=\"438.35 559.55 451.33 546.12 443.37 546.12 443.37 515.55 433.34 515.55 433.34 546.12 425.33 546.12 438.35 559.55\"\r\n      />\r\n    </g>\r\n    <g id=\"pin1C166A7_1C166A7A_DP\">\r\n      <polygon\r\n        id=\"pinBack1C166A7_1C166A7A_DP\"\r\n        class=\"stGray\"\r\n        points=\"283.5 433.7 264.64 453.23 275.99 453.23 275.99 483.8 291.02 483.8 291.02 453.23 302.44 453.23 283.5 433.7\"\r\n      />\r\n      <polygon\r\n        id=\"pinColor1C166A7_1C166A7A_DP\"\r\n        class=\"stWhite\"\r\n        points=\"283.5 437.3 270.53 450.73 278.49 450.73 278.49 481.3 288.52 481.3 288.52 450.73 296.53 450.73 283.5 437.3\"\r\n      />\r\n    </g>\r\n    <g id=\"pin1C166A7B_1C166A7_DP\">\r\n      <polygon\r\n        id=\"pinBack1C166A7B_1C166A7_DP\"\r\n        class=\"stGray\"\r\n        points=\"275.57 541.17 294.43 521.65 283.08 521.65 283.08 491.08 268.05 491.08 268.05 521.65 256.63 521.65 275.57 541.17\"\r\n      />\r\n      <polygon\r\n        id=\"pinColor1C166A7B_1C166A7_DP\"\r\n        class=\"stWhite\"\r\n        points=\"275.56 537.58 288.54 524.15 280.58 524.15 280.58 493.58 270.55 493.58 270.55 524.15 262.54 524.15 275.56 537.58\"\r\n      />\r\n    </g>\r\n    <g id=\"pin1C166A7C_1C166A7_DP\">\r\n      <polygon\r\n        id=\"pinBack1C166A7C_1C166A7_DP\"\r\n        class=\"stGray\"\r\n        points=\"188.92 540.6 207.78 521.07 196.43 521.07 196.43 490.5 181.4 490.5 181.4 521.07 169.98 521.07 188.92 540.6\"\r\n      />\r\n      <polygon\r\n        id=\"pinColor1C166A7C_1C166A7_DP\"\r\n        class=\"stWhite\"\r\n        points=\"188.91 537 201.89 523.57 193.93 523.57 193.93 493 183.9 493 183.9 523.57 175.89 523.57 188.91 537\"\r\n      />\r\n    </g>\r\n    <g id=\"pin1C166A7D_1C166A7_DP\">\r\n      <polygon\r\n        id=\"pinBack1C166A7D_1C166A7_DP\"\r\n        class=\"stGray\"\r\n        points=\"151.25 541.05 170.12 521.52 158.77 521.52 158.77 490.95 143.74 490.95 143.74 521.52 132.32 521.52 151.25 541.05\"\r\n      />\r\n      <polygon\r\n        id=\"pinColor1C166A7D_1C166A7_DP\"\r\n        class=\"stWhite\"\r\n        points=\"151.25 537.46 164.23 524.02 156.27 524.02 156.27 493.45 146.24 493.45 146.24 524.02 138.23 524.02 151.25 537.46\"\r\n      />\r\n    </g>\r\n    <g id=\"pin1C166A7E_1C166A7_DP\">\r\n      <polygon\r\n        id=\"pinBack1C166A7E_1C166A7_DP\"\r\n        class=\"stGray\"\r\n        points=\"133.28 434.25 114.42 453.78 125.77 453.78 125.77 484.35 140.8 484.35 140.8 453.78 152.22 453.78 133.28 434.25\"\r\n      />\r\n      <polygon\r\n        id=\"pinColor1C166A7E_1C166A7_DP\"\r\n        class=\"stWhite\"\r\n        points=\"133.29 437.85 120.31 451.28 128.27 451.28 128.27 481.85 138.3 481.85 138.3 451.28 146.31 451.28 133.29 437.85\"\r\n      />\r\n    </g>\r\n    <g id=\"pin1C166A7F_1C166A7_DP\">\r\n      <polygon\r\n        id=\"pinBack1C166A7F_1C166A7_DP\"\r\n        class=\"stGray\"\r\n        points=\"244.59 433.2 225.73 452.73 237.08 452.73 237.08 483.3 252.11 483.3 252.11 452.73 263.53 452.73 244.59 433.2\"\r\n      />\r\n      <polygon\r\n        id=\"pinColor1C166A7F_1C166A7_DP\"\r\n        class=\"stWhite\"\r\n        points=\"244.6 436.8 231.62 450.23 239.58 450.23 239.58 480.8 249.61 480.8 249.61 450.23 257.62 450.23 244.6 436.8\"\r\n      />\r\n    </g>\r\n    <g id=\"pin1C166A9A_1C166A9_DP\">\r\n      <polygon\r\n        id=\"pinBack1C166A9A_1C166A9_DP\"\r\n        class=\"stGray\"\r\n        points=\"88.46 540.05 107.32 520.52 95.97 520.52 95.97 489.95 80.94 489.95 80.94 520.52 69.53 520.52 88.46 540.05\"\r\n      />\r\n      <polygon\r\n        id=\"pinColor1C166A9A_1C166A9_DP\"\r\n        class=\"stWhite\"\r\n        points=\"88.46 536.46 101.43 523.02 93.47 523.02 93.47 492.45 83.44 492.45 83.44 523.02 75.43 523.02 88.46 536.46\"\r\n      />\r\n    </g>\r\n    <g id=\"pin1C166A9B_1C166A9_DP\">\r\n      <polygon\r\n        id=\"pinBack1C166A9B_1C166A9_DP\"\r\n        class=\"stGray\"\r\n        points=\"29.43 480.34 48.96 499.2 48.96 487.85 79.53 487.85 79.53 472.82 48.96 472.82 48.96 461.4 29.43 480.34\"\r\n      />\r\n      <polygon\r\n        id=\"pinColor1C166A9B_1C166A9_DP\"\r\n        class=\"stWhite\"\r\n        points=\"33.02 480.33 46.46 493.31 46.46 485.35 77.03 485.35 77.03 475.32 46.46 475.32 46.46 467.31 33.02 480.33\"\r\n      />\r\n    </g>\r\n    <g id=\"pin1C166B1_1C166B_DP\">\r\n      <polygon\r\n        id=\"pinBack1C166B1_1C166B_DP\"\r\n        class=\"stGray\"\r\n        points=\"273.48 122.19 293.01 141.05 293.01 129.7 323.58 129.7 323.58 114.67 293.01 114.67 293.01 103.25 273.48 122.19\"\r\n      />\r\n      <polygon\r\n        id=\"pinColor1C166B1_1C166B_DP\"\r\n        class=\"stWhite\"\r\n        points=\"277.08 122.18 290.51 135.16 290.51 127.2 321.08 127.2 321.08 117.17 290.51 117.17 290.51 109.16 277.08 122.18\"\r\n      />\r\n    </g>\r\n    <g id=\"pin1C166D1_1C166D_DP\">\r\n      <polygon\r\n        id=\"pinBack1C166D1_1C166D_DP\"\r\n        class=\"stGray\"\r\n        points=\"371.12 331.98 389.98 312.45 378.63 312.45 378.63 281.89 363.6 281.89 363.6 312.45 352.19 312.45 371.12 331.98\"\r\n      />\r\n      <polygon\r\n        id=\"pinColor1C166D1_1C166D_DP\"\r\n        class=\"stWhite\"\r\n        points=\"371.12 328.39 384.09 314.95 376.13 314.95 376.13 284.39 366.1 284.39 366.1 314.95 358.09 314.95 371.12 328.39\"\r\n      />\r\n    </g>\r\n    <g id=\"pin1C166D1A_1C166D1_DP\">\r\n      <polygon\r\n        id=\"pinBack1C166D1A_1C166D1_DP\"\r\n        class=\"stGray\"\r\n        points=\"327.14 264.07 346.67 282.94 346.67 271.59 377.24 271.59 377.24 256.56 346.67 256.56 346.67 245.14 327.14 264.07\"\r\n      />\r\n      <polygon\r\n        id=\"pinColor1C166D1A_1C166D1_DP\"\r\n        class=\"stWhite\"\r\n        points=\"330.74 264.07 344.17 277.05 344.17 269.09 374.74 269.09 374.74 259.06 344.17 259.06 344.17 251.05 330.74 264.07\"\r\n      />\r\n    </g>\r\n    <g id=\"pin1C166G1_1C166G_DP\">\r\n      <polygon\r\n        id=\"pinBack1C166G1_1C166G_DP\"\r\n        class=\"stGray\"\r\n        points=\"145.07 344.25 164.6 363.11 164.6 351.76 195.16 351.76 195.16 336.73 164.6 336.73 164.6 325.32 145.07 344.25\"\r\n      />\r\n      <polygon\r\n        id=\"pinColor1C166G1_1C166G_DP\"\r\n        class=\"stWhite\"\r\n        points=\"148.66 344.25 162.1 357.22 162.1 349.26 192.66 349.26 192.66 339.23 162.1 339.23 162.1 331.22 148.66 344.25\"\r\n      />\r\n    </g>\r\n    <g id=\"pin1C166G1A_1C166G1_DP\">\r\n      <polygon\r\n        id=\"pinBack1C166G1A_1C166G1_DP\"\r\n        class=\"stGray\"\r\n        points=\"182.73 315.98 202.26 334.84 202.26 323.49 232.82 323.49 232.82 308.46 202.26 308.46 202.26 297.05 182.73 315.98\"\r\n      />\r\n      <polygon\r\n        id=\"pinColor1C166G1A_1C166G1_DP\"\r\n        class=\"stWhite\"\r\n        points=\"186.32 315.98 199.76 328.95 199.76 320.99 230.32 320.99 230.32 310.96 199.76 310.96 199.76 302.95 186.32 315.98\"\r\n      />\r\n    </g>\r\n  </g>\r\n\r\n  <g id=\"pinsFID10\" runat=\"server\" Visible=\"false\">\r\n    <g id=\"pin1B42\">\r\n      <circle id=\"pinBack1B42\" class=\"stGray\" cx=\"247.88\" cy=\"82.12\" r=\"15\" />\r\n      <circle id=\"pinColor1B42\" class=\"stWhite\" cx=\"247.88\" cy=\"82.12\" r=\"10\" />\r\n    </g>\r\n    <g id=\"pin1B42A\">\r\n      <circle id=\"pinBack1B42A\" class=\"stGray\" cx=\"171.91\" cy=\"82.12\" r=\"15\" />\r\n      <circle\r\n        id=\"pinColor1B42A\"\r\n        class=\"stWhite\"\r\n        cx=\"171.91\"\r\n        cy=\"82.12\"\r\n        r=\"10\"\r\n      />\r\n    </g>\r\n    <g id=\"pin1B42A1\">\r\n      <circle\r\n        id=\"pinBack1B42A1\"\r\n        class=\"stGray\"\r\n        cx=\"123.91\"\r\n        cy=\"155.32\"\r\n        r=\"15\"\r\n      />\r\n      <circle\r\n        id=\"pinColor1B42A1\"\r\n        class=\"stWhite\"\r\n        cx=\"123.91\"\r\n        cy=\"155.32\"\r\n        r=\"10\"\r\n      />\r\n    </g>\r\n  </g>\r\n  <g id=\"dPArrowsFID10\" runat=\"server\" Visible=\"false\">\r\n    <g id=\"pin1B42A_1B42_DP\">\r\n      <polygon\r\n        id=\"pinBack1B42A_1B42_DP\"\r\n        class=\"stGray\"\r\n        points=\"234.99 91.56 215.46 72.7 215.46 84.05 184.9 84.05 184.9 99.08 215.46 99.08 215.46 110.5 234.99 91.56\"\r\n      />\r\n      <polygon\r\n        id=\"pinColor1B42A_1B42_DP\"\r\n        class=\"stWhite\"\r\n        points=\"231.4 91.56 217.96 78.59 217.96 86.55 187.4 86.55 187.4 96.58 217.96 96.58 217.96 104.59 231.4 91.56\"\r\n      />\r\n    </g>\r\n    <g id=\"pin1B42A_1B42A1_DP\">\r\n      <polygon\r\n        id=\"pinBack1B42A_1B42A1_DP\"\r\n        class=\"stGray\"\r\n        points=\"113.9 91.63 133.43 110.5 133.43 99.14 163.99 99.14 163.99 84.11 133.43 84.11 133.43 72.7 113.9 91.63\"\r\n      />\r\n      <polygon\r\n        id=\"pinColor1B42A_1B42A1_DP\"\r\n        class=\"stWhite\"\r\n        points=\"117.49 91.63 130.93 104.61 130.93 96.64 161.49 96.64 161.49 86.61 130.93 86.61 130.93 78.61 117.49 91.63\"\r\n      />\r\n    </g>\r\n    <g id=\"pin1B42_1C1_DP\">\r\n      <polygon\r\n        id=\"pinBack1B42_1C1_DP\"\r\n        class=\"stGray\"\r\n        points=\"319.99 91.56 300.46 72.7 300.46 84.05 269.9 84.05 269.9 99.08 300.46 99.08 300.46 110.5 319.99 91.56\"\r\n      />\r\n      <polygon\r\n        id=\"pinColor1B42_1C1_DP\"\r\n        class=\"stWhite\"\r\n        points=\"316.4 91.56 302.96 78.59 302.96 86.55 272.4 86.55 272.4 96.58 302.96 96.58 302.96 104.59 316.4 91.56\"\r\n      />\r\n    </g>\r\n  </g>\r\n\r\n  <g id=\"pinsFID13\" runat=\"server\" Visible=\"false\">\r\n    <g id=\"pin102\">\r\n      <circle id=\"pinBack102\" class=\"stGray\" cx=\"501.61\" cy=\"255.64\" r=\"20\" />\r\n      <circle\r\n        id=\"pinColor102\"\r\n        class=\"stWhite\"\r\n        cx=\"501.61\"\r\n        cy=\"255.64\"\r\n        r=\"13.33\"\r\n      />\r\n    </g>\r\n    <g id=\"pin104\">\r\n      <circle id=\"pinBack104\" class=\"stGray\" cx=\"402.27\" cy=\"245.64\" r=\"20\" />\r\n      <circle\r\n        id=\"pinColor104\"\r\n        class=\"stWhite\"\r\n        cx=\"402.27\"\r\n        cy=\"245.64\"\r\n        r=\"13.33\"\r\n      />\r\n    </g>\r\n    <g id=\"pin106\">\r\n      <circle id=\"pinBack106\" class=\"stGray\" cx=\"234.15\" cy=\"248.41\" r=\"20\" />\r\n      <circle\r\n        id=\"pinColor106\"\r\n        class=\"stWhite\"\r\n        cx=\"234.15\"\r\n        cy=\"248.41\"\r\n        r=\"13.33\"\r\n      />\r\n    </g>\r\n  </g>\r\n  <g id=\"pinsFID12\" runat=\"server\" Visible=\"false\">\r\n    <g id=\"pin101\">\r\n      <circle id=\"pinBack101\" class=\"stGray\" cx=\"491.61\" cy=\"80.23\" r=\"20\" />\r\n      <circle\r\n        id=\"pinColor101\"\r\n        class=\"stWhite\"\r\n        cx=\"491.61\"\r\n        cy=\"80.23\"\r\n        r=\"13.33\"\r\n      />\r\n    </g>\r\n    <g id=\"pin103\">\r\n      <circle id=\"pinBack103\" class=\"stGray\" cx=\"404.27\" cy=\"95.16\" r=\"20\" />\r\n      <circle\r\n        id=\"pinColor103\"\r\n        class=\"stWhite\"\r\n        cx=\"404.27\"\r\n        cy=\"95.16\"\r\n        r=\"13.33\"\r\n      />\r\n    </g>\r\n    <g id=\"pin105\">\r\n      <circle id=\"pinBack105\" class=\"stGray\" cx=\"230.15\" cy=\"91.15\" r=\"20\" />\r\n      <circle\r\n        id=\"pinColor105\"\r\n        class=\"stWhite\"\r\n        cx=\"230.15\"\r\n        cy=\"91.15\"\r\n        r=\"13.33\"\r\n      />\r\n    </g>\r\n  </g>\r\n  <g id=\"dPArrowsFID12\" runat=\"server\" Visible=\"false\">\r\n    <g id=\"pin101_100_DP\">\r\n      <polygon\r\n        id=\"pinBack101_100_DP\"\r\n        class=\"stGray\"\r\n        points=\"519.99 160.49 542.58 137.1 528.99 137.1 528.99 100.49 510.99 100.49 510.99 137.1 497.31 137.1 519.99 160.49\"\r\n      />\r\n      <polygon\r\n        id=\"pinColor101_100_DP\"\r\n        class=\"stWhite\"\r\n        points=\"519.99 156.19 535.53 140.1 525.99 140.1 525.99 103.49 513.98 103.49 513.98 140.1 504.39 140.1 519.99 156.19\"\r\n      />\r\n    </g>\r\n    <g id=\"pin103_101_DP\">\r\n      <polygon\r\n        id=\"pinBack103_101_DP\"\r\n        class=\"stGray\"\r\n        points=\"477.61 104.44 454.22 81.84 454.22 95.44 417.61 95.44 417.61 113.44 454.22 113.44 454.22 127.11 477.61 104.44\"\r\n      />\r\n      <polygon\r\n        id=\"pinColor103_101_DP\"\r\n        class=\"stWhite\"\r\n        points=\"473.3 104.44 457.21 88.9 457.21 98.43 420.6 98.43 420.6 110.45 457.21 110.45 457.21 120.04 473.3 104.44\"\r\n      />\r\n    </g>\r\n    <g id=\"pin105_103_DP\">\r\n      <polygon\r\n        id=\"pinBack105_103_DP\"\r\n        class=\"stGray\"\r\n        points=\"369.81 103.44 346.42 80.84 346.42 94.44 309.81 94.44 309.81 112.44 346.42 112.44 346.42 126.11 369.81 103.44\"\r\n      />\r\n      <polygon\r\n        id=\"pinColor105_103_DP\"\r\n        class=\"stWhite\"\r\n        points=\"365.5 103.44 349.41 87.9 349.41 97.43 312.8 97.43 312.8 109.45 349.41 109.45 349.41 119.04 365.5 103.44\"\r\n      />\r\n    </g>\r\n  </g>\r\n  <g id=\"dPArrowsFID13\" runat=\"server\" Visible=\"false\"></g>\r\n\r\n  <g id=\"pinsFID11\" runat=\"server\" Visible=\"false\">\r\n    <g id=\"pinVest1_2\">\r\n      <circle\r\n        id=\"pinBackVest1_2\"\r\n        class=\"stGray\"\r\n        cx=\"320.47\"\r\n        cy=\"254.98\"\r\n        r=\"15\"\r\n      />\r\n      <circle\r\n        id=\"pinColorVest1_2\"\r\n        class=\"stWhite\"\r\n        cx=\"320.47\"\r\n        cy=\"254.98\"\r\n        r=\"10\"\r\n      />\r\n    </g>\r\n    <g id=\"pin100B1\">\r\n      <circle\r\n        id=\"pinBack100B1\"\r\n        class=\"stGray\"\r\n        cx=\"370.26\"\r\n        cy=\"135.49\"\r\n        r=\"13.5\"\r\n      />\r\n      <circle\r\n        id=\"pinColor100B1\"\r\n        class=\"stWhite\"\r\n        cx=\"370.26\"\r\n        cy=\"135.49\"\r\n        r=\"9\"\r\n      />\r\n    </g>\r\n    <g id=\"pin100C1\">\r\n      <circle\r\n        id=\"pinBack100C1\"\r\n        class=\"stGray\"\r\n        cx=\"271.45\"\r\n        cy=\"173.02\"\r\n        r=\"12.5\"\r\n      />\r\n      <circle\r\n        id=\"pinColor100C1\"\r\n        class=\"stWhite\"\r\n        cx=\"271.45\"\r\n        cy=\"173.02\"\r\n        r=\"8.33\"\r\n      />\r\n    </g>\r\n    <g id=\"pin100C2\">\r\n      <circle\r\n        id=\"pinBack100C2\"\r\n        class=\"stGray\"\r\n        cx=\"300.68\"\r\n        cy=\"173.02\"\r\n        r=\"12.5\"\r\n      />\r\n      <circle\r\n        id=\"pinColor100C2\"\r\n        class=\"stWhite\"\r\n        cx=\"300.68\"\r\n        cy=\"173.02\"\r\n        r=\"8.33\"\r\n      />\r\n    </g>\r\n    <g id=\"pin100C3\">\r\n      <circle\r\n        id=\"pinBack100C3\"\r\n        class=\"stGray\"\r\n        cx=\"328.63\"\r\n        cy=\"173.02\"\r\n        r=\"12.5\"\r\n      />\r\n      <circle\r\n        id=\"pinColor100C3\"\r\n        class=\"stWhite\"\r\n        cx=\"328.63\"\r\n        cy=\"173.02\"\r\n        r=\"8.33\"\r\n      />\r\n    </g>\r\n    <g id=\"pin100C4\">\r\n      <circle id=\"pinBack100C4\" class=\"stGray\" cx=\"365.91\" cy=\"191.67\" r=\"15\" />\r\n      <circle\r\n        id=\"pinColor100C4\"\r\n        class=\"stWhite\"\r\n        cx=\"365.91\"\r\n        cy=\"191.67\"\r\n        r=\"10\"\r\n      />\r\n    </g>\r\n    <g id=\"pin100D\">\r\n      <circle id=\"pinBack100D\" class=\"stGray\" cx=\"298.6\" cy=\"338.28\" r=\"15\" />\r\n      <circle id=\"pinColor100D\" class=\"stWhite\" cx=\"298.6\" cy=\"338.28\" r=\"10\" />\r\n    </g>\r\n    <g id=\"pin100D1\">\r\n      <circle id=\"pinBack100D1\" class=\"stGray\" cx=\"379.83\" cy=\"275.32\" r=\"15\" />\r\n      <circle\r\n        id=\"pinColor100D1\"\r\n        class=\"stWhite\"\r\n        cx=\"379.83\"\r\n        cy=\"275.32\"\r\n        r=\"10\"\r\n      />\r\n    </g>\r\n    <g id=\"pin100D2\">\r\n      <circle id=\"pinBack100D2\" class=\"stGray\" cx=\"405.91\" cy=\"199.06\" r=\"15\" />\r\n      <circle\r\n        id=\"pinColor100D2\"\r\n        class=\"stWhite\"\r\n        cx=\"405.91\"\r\n        cy=\"199.06\"\r\n        r=\"10\"\r\n      />\r\n    </g>\r\n    <g id=\"pin100D2A\">\r\n      <circle id=\"pinBack100D2A\" class=\"stGray\" cx=\"541\" cy=\"189.13\" r=\"15\" />\r\n      <circle id=\"pinColor100D2A\" class=\"stWhite\" cx=\"541\" cy=\"189.13\" r=\"10\" />\r\n    </g>\r\n    <g id=\"pin100D3\">\r\n      <circle id=\"pinBack100D3\" class=\"stGray\" cx=\"445.57\" cy=\"273.32\" r=\"15\" />\r\n      <circle\r\n        id=\"pinColor100D3\"\r\n        class=\"stWhite\"\r\n        cx=\"445.57\"\r\n        cy=\"273.32\"\r\n        r=\"10\"\r\n      />\r\n    </g>\r\n    <g id=\"pin100D3A\">\r\n      <circle\r\n        id=\"pinBack100D3A\"\r\n        class=\"stGray\"\r\n        cx=\"572.77\"\r\n        cy=\"273.33\"\r\n        r=\"15\"\r\n      />\r\n      <circle\r\n        id=\"pinColor100D3A\"\r\n        class=\"stWhite\"\r\n        cx=\"572.77\"\r\n        cy=\"273.33\"\r\n        r=\"10\"\r\n      />\r\n    </g>\r\n    <g id=\"pin100D4\">\r\n      <circle id=\"pinBack100D4\" class=\"stGray\" cx=\"405.91\" cy=\"349.7\" r=\"15\" />\r\n      <circle\r\n        id=\"pinColor100D4\"\r\n        class=\"stWhite\"\r\n        cx=\"405.91\"\r\n        cy=\"349.7\"\r\n        r=\"10\"\r\n      />\r\n    </g>\r\n    <g id=\"pin100D4A\">\r\n      <circle id=\"pinBack100D4A\" class=\"stGray\" cx=\"541\" cy=\"356.13\" r=\"15\" />\r\n      <circle id=\"pinColor100D4A\" class=\"stWhite\" cx=\"541\" cy=\"356.13\" r=\"10\" />\r\n    </g>\r\n    <g id=\"pin100D5\">\r\n      <circle id=\"pinBack100D5\" class=\"stGray\" cx=\"358.98\" cy=\"349.7\" r=\"15\" />\r\n      <circle\r\n        id=\"pinColor100D5\"\r\n        class=\"stWhite\"\r\n        cx=\"358.98\"\r\n        cy=\"349.7\"\r\n        r=\"10\"\r\n      />\r\n    </g>\r\n    <g id=\"pin100D5A\">\r\n      <circle\r\n        id=\"pinBack100B1D5A\"\r\n        class=\"stGray\"\r\n        cx=\"339.49\"\r\n        cy=\"439.06\"\r\n        r=\"15\"\r\n      />\r\n      <circle\r\n        id=\"pinColor100D5A\"\r\n        class=\"stWhite\"\r\n        cx=\"339.49\"\r\n        cy=\"439.06\"\r\n        r=\"10\"\r\n      />\r\n    </g>\r\n  </g>\r\n  <g id=\"dPArrowsFID11\" runat=\"server\" Visible=\"false\">\r\n    <g id=\"pin100A1_100_DP\">\r\n      <polygon\r\n        id=\"pinBack100A1_100_DP\"\r\n        class=\"stGray\"\r\n        points=\"194.99 125.99 209.96 110.49 200.95 110.49 200.95 86.23 189.02 86.23 189.02 110.49 179.96 110.49 194.99 125.99\"\r\n      />\r\n      <polygon\r\n        id=\"pinColor100A1_100_DP\"\r\n        class=\"stWhite\"\r\n        points=\"194.98 123.14 205.28 112.47 198.96 112.47 198.96 88.21 191 88.21 191 112.47 184.65 112.47 194.98 123.14\"\r\n      />\r\n    </g>\r\n    <g id=\"pin100A1_Vest1_3_DP\">\r\n      <polygon\r\n        id=\"pinBack100A1_Vest1_3_DP\"\r\n        class=\"stGray\"\r\n        points=\"375.14 103 359.63 88.03 359.63 97.04 335.37 97.04 335.37 108.97 359.63 108.97 359.63 118.03 375.14 103\"\r\n      />\r\n      <polygon\r\n        id=\"pinColor100A1_Vest1_3_DP\"\r\n        class=\"stWhite\"\r\n        points=\"372.28 103 361.62 92.7 361.62 99.02 337.36 99.02 337.36 106.98 361.62 106.98 361.62 113.34 372.28 103\"\r\n      />\r\n    </g>\r\n    <g id=\"pin100B1_Vest1_3_DP\">\r\n      <polygon\r\n        id=\"pinBack100B1_Vest1_3_DP\"\r\n        class=\"stGray\"\r\n        points=\"387.73 97.11 372.75 112.61 381.76 112.61 381.76 136.87 393.69 136.87 393.69 112.61 402.75 112.61 387.73 97.11\"\r\n      />\r\n      <polygon\r\n        id=\"pinColor100B1_Vest1_3_DP\"\r\n        class=\"stWhite\"\r\n        points=\"387.73 99.96 377.43 110.63 383.75 110.63 383.75 134.89 391.71 134.89 391.71 110.63 398.07 110.63 387.73 99.96\"\r\n      />\r\n    </g>\r\n    <g id=\"pin100C4_100B1_DP\">\r\n      <polygon\r\n        id=\"pinBack100C4_100B1_DP\"\r\n        class=\"stGray\"\r\n        points=\"369.93 129.85 354.96 145.35 363.97 145.35 363.97 169.62 375.9 169.62 375.9 145.35 384.96 145.35 369.93 129.85\"\r\n      />\r\n      <polygon\r\n        id=\"pinColor100C4_100B1_DP\"\r\n        class=\"stWhite\"\r\n        points=\"369.93 132.71 359.63 143.37 365.95 143.37 365.95 167.63 373.91 167.63 373.91 143.37 380.27 143.37 369.93 132.71\"\r\n      />\r\n    </g>\r\n    <g id=\"pin100C4_100C_DP\">\r\n      <polygon\r\n        id=\"pinBack100C4_100C_DP\"\r\n        class=\"stGray\"\r\n        points=\"339.1 209.09 354.6 224.06 354.6 215.06 378.86 215.06 378.86 203.13 354.6 203.13 354.6 194.06 339.1 209.09\"\r\n      />\r\n      <polygon\r\n        id=\"pinColor100C4_100C_DP\"\r\n        class=\"stWhite\"\r\n        points=\"341.95 209.09 352.62 219.39 352.62 213.07 376.88 213.07 376.88 205.11 352.62 205.11 352.62 198.75 341.95 209.09\"\r\n      />\r\n    </g>\r\n    <g id=\"pin100D_100_DP\">\r\n      <polygon\r\n        id=\"pinBack100D_100_DP\"\r\n        class=\"stGray\"\r\n        points=\"231.69 298.95 247.19 313.92 247.19 304.91 271.45 304.91 271.45 292.98 247.19 292.98 247.19 283.92 231.69 298.95\"\r\n      />\r\n      <polygon\r\n        id=\"pinColor100D_100_DP\"\r\n        class=\"stWhite\"\r\n        points=\"234.54 298.95 245.2 309.25 245.2 302.93 269.46 302.93 269.46 294.97 245.2 294.97 245.2 288.61 234.54 298.95\"\r\n      />\r\n    </g>\r\n    <g id=\"pin100D1_100C4_DP\">\r\n      <polygon\r\n        id=\"pinBack100D1_100C4_DP\"\r\n        class=\"stGray\"\r\n        points=\"368.95 227.1 353.98 242.6 362.99 242.6 362.99 266.86 374.92 266.86 374.92 242.6 383.98 242.6 368.95 227.1\"\r\n      />\r\n      <polygon\r\n        id=\"pinColor100D1_100C4_DP\"\r\n        class=\"stWhite\"\r\n        points=\"368.96 229.95 358.66 240.61 364.98 240.61 364.98 264.88 372.94 264.88 372.94 240.61 379.3 240.61 368.96 229.95\"\r\n      />\r\n    </g>\r\n    <g id=\"pin100D1_100D_DP\">\r\n      <polygon\r\n        id=\"pinBack100D1_100D_DP\"\r\n        class=\"stGray\"\r\n        points=\"300.42 294.16 315.92 309.13 315.92 300.12 340.18 300.12 340.18 288.19 315.92 288.19 315.92 279.13 300.42 294.16\"\r\n      />\r\n      <polygon\r\n        id=\"pinColor100D1_100D_DP\"\r\n        class=\"stWhite\"\r\n        points=\"303.27 294.15 313.93 304.45 313.93 298.13 338.19 298.13 338.19 290.17 313.93 290.17 313.93 283.81 303.27 294.15\"\r\n      />\r\n    </g>\r\n    <g id=\"pin100D1_100D5_DP\">\r\n      <polygon\r\n        id=\"pinBack100D1_100D5_DP\"\r\n        class=\"stGray\"\r\n        points=\"356.78 337.75 371.75 322.25 362.75 322.25 362.75 297.99 350.82 297.99 350.82 322.25 341.75 322.25 356.78 337.75\"\r\n      />\r\n      <polygon\r\n        id=\"pinColor100D1_100D5_DP\"\r\n        class=\"stWhite\"\r\n        points=\"356.78 334.9 367.08 324.23 360.76 324.23 360.76 299.97 352.8 299.97 352.8 324.23 346.44 324.23 356.78 334.9\"\r\n      />\r\n    </g>\r\n    <g id=\"pin100D1_Vest1_2_DP\">\r\n      <polygon\r\n        id=\"pinBack100D1_Vest1_2_DP\"\r\n        class=\"stGray\"\r\n        points=\"317.08 256.69 332.58 271.67 332.58 262.66 356.85 262.66 356.85 250.73 332.58 250.73 332.58 241.66 317.08 256.69\"\r\n      />\r\n      <polygon\r\n        id=\"pinColor100D1_Vest1_2_DP\"\r\n        class=\"stWhite\"\r\n        points=\"319.94 256.69 330.6 266.99 330.6 260.67 354.86 260.67 354.86 252.71 330.6 252.71 330.6 246.35 319.94 256.69\"\r\n      />\r\n    </g>\r\n    <g id=\"pin100D2_100D1_DP\">\r\n      <polygon\r\n        id=\"pinBack100D2_100D1_DP\"\r\n        class=\"stGray\"\r\n        points=\"400.69 235.07 415.67 219.57 406.66 219.57 406.66 195.31 394.73 195.31 394.73 219.57 385.67 219.57 400.69 235.07\"\r\n      />\r\n      <polygon\r\n        id=\"pinColor100D2_100D1_DP\"\r\n        class=\"stWhite\"\r\n        points=\"400.69 232.22 410.99 221.56 404.67 221.56 404.67 197.29 396.71 197.29 396.71 221.56 390.35 221.56 400.69 232.22\"\r\n      />\r\n    </g>\r\n    <g id=\"pin100D2A_100D2_DP\">\r\n      <polygon\r\n        id=\"pinBack100D2A_100D2_DP\"\r\n        class=\"stGray\"\r\n        points=\"457.28 181.65 441.78 166.67 441.78 175.68 417.51 175.68 417.51 187.61 441.78 187.61 441.78 196.67 457.28 181.65\"\r\n      />\r\n      <polygon\r\n        id=\"pinColor100D2A_100D2_DP\"\r\n        class=\"stWhite\"\r\n        points=\"454.42 181.65 443.76 171.35 443.76 177.67 419.5 177.67 419.5 185.63 443.76 185.63 443.76 191.99 454.42 181.65\"\r\n      />\r\n    </g>\r\n    <g id=\"pin100D3_100D1_DP\">\r\n      <polygon\r\n        id=\"pinBack100D3_100D1_DP\"\r\n        class=\"stGray\"\r\n        points=\"398.78 252.63 414.28 267.6 414.28 258.59 438.54 258.59 438.54 246.66 414.28 246.66 414.28 237.6 398.78 252.63\"\r\n      />\r\n      <polygon\r\n        id=\"pinColor100D3_100D1_DP\"\r\n        class=\"stWhite\"\r\n        points=\"401.63 252.62 412.3 262.92 412.3 256.6 436.56 256.6 436.56 248.64 412.3 248.64 412.3 242.28 401.63 252.62\"\r\n      />\r\n    </g>\r\n    <g id=\"pin100D3A_100D3_DP\">\r\n      <polygon\r\n        id=\"pinBack100D3A_100D3_DP\"\r\n        class=\"stGray\"\r\n        points=\"502.34 286.29 486.83 271.32 486.83 280.33 462.57 280.33 462.57 292.26 486.83 292.26 486.83 301.32 502.34 286.29\"\r\n      />\r\n      <polygon\r\n        id=\"pinColor100D3A_100D3_DP\"\r\n        class=\"stWhite\"\r\n        points=\"499.48 286.29 488.82 275.99 488.82 282.31 464.56 282.31 464.56 290.27 488.82 290.27 488.82 296.63 499.48 286.29\"\r\n      />\r\n    </g>\r\n    <g id=\"pin100D4_100D1_DP\">\r\n      <polygon\r\n        id=\"pinBack100D4_100D1_DP\"\r\n        class=\"stGray\"\r\n        points=\"395.76 341.94 410.73 326.44 401.72 326.44 401.72 302.18 389.79 302.18 389.79 326.44 380.73 326.44 395.76 341.94\"\r\n      />\r\n      <polygon\r\n        id=\"pinColor100D4_100D1_DP\"\r\n        class=\"stWhite\"\r\n        points=\"395.76 339.09 406.06 328.42 399.74 328.42 399.74 304.16 391.77 304.16 391.77 328.42 385.42 328.42 395.76 339.09\"\r\n      />\r\n    </g>\r\n    <g id=\"pin100D4A_100D4_DP\">\r\n      <polygon\r\n        id=\"pinBack100D4A_100D4_DP\"\r\n        class=\"stGray\"\r\n        points=\"458.42 367.24 442.92 352.27 442.92 361.28 418.66 361.28 418.66 373.21 442.92 373.21 442.92 382.27 458.42 367.24\"\r\n      />\r\n      <polygon\r\n        id=\"pinColor100D4A_100D4_DP\"\r\n        class=\"stWhite\"\r\n        points=\"455.57 367.25 444.9 356.95 444.9 363.26 420.64 363.26 420.64 371.23 444.9 371.23 444.9 377.58 455.57 367.25\"\r\n      />\r\n    </g>\r\n    <g id=\"pin100D5_100D5A_DP\">\r\n      <polygon\r\n        id=\"pinBack100D5_100D5A_DP\"\r\n        class=\"stGray\"\r\n        points=\"356.88 420.79 371.85 405.28 362.84 405.28 362.84 381.02 350.91 381.02 350.91 405.28 341.85 405.28 356.88 420.79\"\r\n      />\r\n      <polygon\r\n        id=\"pinColor100D5_100D5A_DP\"\r\n        class=\"stWhite\"\r\n        points=\"356.87 417.93 367.17 407.27 360.85 407.27 360.85 383.01 352.89 383.01 352.89 407.27 346.53 407.27 356.87 417.93\"\r\n      />\r\n    </g>\r\n    <g id=\"pin100D5A_100_DP\">\r\n      <polygon\r\n        id=\"pinBack100D5A_100_DP\"\r\n        class=\"stGray\"\r\n        points=\"231.69 439.09 247.19 454.06 247.19 445.06 271.45 445.06 271.45 433.13 247.19 433.13 247.19 424.06 231.69 439.09\"\r\n      />\r\n      <polygon\r\n        id=\"pinColor100D5A_100_DP\"\r\n        class=\"stWhite\"\r\n        points=\"234.54 439.09 245.2 449.39 245.2 443.07 269.46 443.07 269.46 435.11 245.2 435.11 245.2 428.75 234.54 439.09\"\r\n      />\r\n    </g>\r\n    <g id=\"pin100D5A_Outdoor_DP\">\r\n      <polygon\r\n        id=\"pinBack100D5A_Outdoor_DP\"\r\n        class=\"stGray\"\r\n        points=\"354.88 514.83 369.85 499.32 360.84 499.32 360.84 475.06 348.91 475.06 348.91 499.32 339.85 499.32 354.88 514.83\"\r\n      />\r\n      <polygon\r\n        id=\"pinColor100D5A_Outdoor_DP\"\r\n        class=\"stWhite\"\r\n        points=\"354.88 511.97 365.18 501.31 358.86 501.31 358.86 477.05 350.9 477.05 350.9 501.31 344.54 501.31 354.88 511.97\"\r\n      />\r\n    </g>\r\n    <g id=\"pinVest1_2_100C_DP\">\r\n      <polygon\r\n        id=\"pinBackVest1_2_100C_DP\"\r\n        class=\"stGray\"\r\n        points=\"263.72 260.35 279.22 275.32 279.22 266.31 303.48 266.31 303.48 254.38 279.22 254.38 279.22 245.32 263.72 260.35\"\r\n      />\r\n      <polygon\r\n        id=\"pinColorVest1_2_100C_DP\"\r\n        class=\"stWhite\"\r\n        points=\"266.57 260.35 277.23 270.64 277.23 264.33 301.5 264.33 301.5 256.37 277.23 256.37 277.23 250.01 266.57 260.35\"\r\n      />\r\n    </g>\r\n  </g>\r\n\r\n  <g id=\"pinsFID6\" runat=\"server\" Visible=\"false\">\r\n    <g id=\"pin2C450\">\r\n      <ellipse\r\n        id=\"pinBack2C450\"\r\n        class=\"stGray\"\r\n        cx=\"502.74\"\r\n        cy=\"167.27\"\r\n        rx=\"20\"\r\n        ry=\"19.32\"\r\n      />\r\n      <ellipse\r\n        id=\"pinColor2C450\"\r\n        class=\"stWhite\"\r\n        cx=\"502.74\"\r\n        cy=\"167.27\"\r\n        rx=\"13.33\"\r\n        ry=\"12.88\"\r\n      />\r\n    </g>\r\n    <g id=\"pin2C451A\">\r\n      <ellipse\r\n        id=\"pinBack2C451A\"\r\n        class=\"stGray\"\r\n        cx=\"588.55\"\r\n        cy=\"162.33\"\r\n        rx=\"20\"\r\n        ry=\"19.32\"\r\n      />\r\n      <ellipse\r\n        id=\"pinColor2C451A\"\r\n        class=\"stWhite\"\r\n        cx=\"588.55\"\r\n        cy=\"162.33\"\r\n        rx=\"13.33\"\r\n        ry=\"12.88\"\r\n      />\r\n    </g>\r\n    <g id=\"pin2C451B\">\r\n      <ellipse\r\n        id=\"pinBack2C451B\"\r\n        class=\"stGray\"\r\n        cx=\"657.87\"\r\n        cy=\"86.6\"\r\n        rx=\"20\"\r\n        ry=\"19.32\"\r\n      />\r\n      <ellipse\r\n        id=\"pinColor2C451B\"\r\n        class=\"stWhite\"\r\n        cx=\"657.87\"\r\n        cy=\"86.6\"\r\n        rx=\"13.33\"\r\n        ry=\"12.88\"\r\n      />\r\n    </g>\r\n    <g id=\"pin2C452A\">\r\n      <ellipse\r\n        id=\"pinBack2C452A\"\r\n        class=\"stGray\"\r\n        cx=\"419.38\"\r\n        cy=\"158.35\"\r\n        rx=\"20\"\r\n        ry=\"19.32\"\r\n      />\r\n      <ellipse\r\n        id=\"pinColor2C452A\"\r\n        class=\"stWhite\"\r\n        cx=\"419.38\"\r\n        cy=\"158.35\"\r\n        rx=\"13.33\"\r\n        ry=\"12.88\"\r\n      />\r\n    </g>\r\n    <g id=\"pin2C452B\">\r\n      <ellipse\r\n        id=\"pinBack2C452B\"\r\n        class=\"stGray\"\r\n        cx=\"221.66\"\r\n        cy=\"112.6\"\r\n        rx=\"20\"\r\n        ry=\"19.32\"\r\n      />\r\n      <ellipse\r\n        id=\"pinColor2C452B\"\r\n        class=\"stWhite\"\r\n        cx=\"221.66\"\r\n        cy=\"112.6\"\r\n        rx=\"13.33\"\r\n        ry=\"12.88\"\r\n      />\r\n    </g>\r\n  </g>\r\n  <g id=\"dPArrowsFID6\" runat=\"server\" Visible=\"false\">\r\n    <g id=\"pin2C450_2C452C_DP\">\r\n      <polygon\r\n        id=\"pinBack2C450_2C452C_DP\"\r\n        class=\"stGray\"\r\n        points=\"489.45 256.82 512.04 233.43 498.45 233.43 498.45 196.82 480.45 196.82 480.45 233.43 466.77 233.43 489.45 256.82\"\r\n      />\r\n      <polygon\r\n        id=\"pinColor2C450_2C452C_DP\"\r\n        class=\"stWhite\"\r\n        points=\"489.45 252.52 504.99 236.43 495.45 236.43 495.45 199.82 483.44 199.82 483.44 236.43 473.85 236.43 489.45 252.52\"\r\n      />\r\n    </g>\r\n    <g id=\"pin2C451A_2C450_DP\">\r\n      <polygon\r\n        id=\"pinBack2C451A_2C450_DP\"\r\n        class=\"stGray\"\r\n        points=\"520.74 192.9 544.13 215.49 544.13 201.9 580.74 201.9 580.74 183.9 544.13 183.9 544.13 170.22 520.74 192.9\"\r\n      />\r\n      <polygon\r\n        id=\"pinColor2C451A_2C450_DP\"\r\n        class=\"stWhite\"\r\n        points=\"525.05 192.9 541.14 208.44 541.14 198.91 577.75 198.91 577.75 186.89 541.14 186.89 541.14 177.3 525.05 192.9\"\r\n      />\r\n    </g>\r\n    <g id=\"pin2C451B_2C451A_DP\">\r\n      <polygon\r\n        id=\"pinBack2C451B_2C451A_DP\"\r\n        class=\"stGray\"\r\n        points=\"594.53 156.91 617.12 133.52 603.53 133.52 603.53 96.91 585.53 96.91 585.53 133.52 571.86 133.52 594.53 156.91\"\r\n      />\r\n      <polygon\r\n        id=\"pinColor2C451B_2C451A_DP\"\r\n        class=\"stWhite\"\r\n        points=\"594.53 152.6 610.07 136.51 600.53 136.51 600.53 99.91 588.52 99.91 588.52 136.51 578.93 136.51 594.53 152.6\"\r\n      />\r\n    </g>\r\n    <g id=\"pin2C452A_2C450_DP\">\r\n      <polygon\r\n        id=\"pinBack2C452A_2C450_DP\"\r\n        class=\"stGray\"\r\n        points=\"467.38 192.81 443.99 170.22 443.99 183.82 407.38 183.82 407.38 201.82 443.99 201.82 443.99 215.49 467.38 192.81\"\r\n      />\r\n      <polygon\r\n        id=\"pinColor2C452A_2C450_DP\"\r\n        class=\"stWhite\"\r\n        points=\"463.08 192.82 446.99 177.28 446.99 186.81 410.38 186.81 410.38 198.83 446.99 198.83 446.99 208.42 463.08 192.82\"\r\n      />\r\n    </g>\r\n    <g id=\"pin2C452B_2C452A_DP\">\r\n      <polygon\r\n        id=\"pinBack2C452B_2C452A_DP\"\r\n        class=\"stGray\"\r\n        points=\"410.33 75.91 387.74 99.3 401.34 99.3 401.34 135.91 419.34 135.91 419.34 99.3 433.01 99.3 410.33 75.91\"\r\n      />\r\n      <polygon\r\n        id=\"pinColor2C452B_2C452A_DP\"\r\n        class=\"stWhite\"\r\n        points=\"410.34 80.22 394.8 96.31 404.33 96.31 404.33 132.92 416.34 132.92 416.34 96.31 425.94 96.31 410.34 80.22\"\r\n      />\r\n    </g>\r\n  </g>\r\n\r\n  <g id=\"pinsFID1\" runat=\"server\" Visible=\"false\">\r\n    <g id=\"pin1C482_1\">\r\n      <circle\r\n        id=\"pinBack1C482_1\"\r\n        class=\"stGray\"\r\n        cx=\"158.86\"\r\n        cy=\"98.95\"\r\n        r=\"20\"\r\n      />\r\n      <circle\r\n        id=\"pinColor1C482_1\"\r\n        class=\"stWhite\"\r\n        cx=\"158.86\"\r\n        cy=\"98.95\"\r\n        r=\"13.33\"\r\n      />\r\n    </g>\r\n    <g id=\"pin1C482_2\">\r\n      <circle\r\n        id=\"pinBack1C482_2\"\r\n        class=\"stGray\"\r\n        cx=\"298.54\"\r\n        cy=\"98.95\"\r\n        r=\"20\"\r\n      />\r\n      <circle\r\n        id=\"pinColor1C482_2\"\r\n        class=\"stWhite\"\r\n        cx=\"298.54\"\r\n        cy=\"98.95\"\r\n        r=\"13.33\"\r\n      />\r\n    </g>\r\n  </g>\r\n  <g id=\"dPArrowsFID1\" runat=\"server\" Visible=\"false\"></g>\r\n\r\n  <g id=\"pinsFID2\" runat=\"server\" Visible=\"false\">\r\n    <g id=\"pin5640\">\r\n      <circle id=\"pinBack5640\" class=\"stGray\" cx=\"429.78\" cy=\"547.43\" r=\"20\" />\r\n      <circle\r\n        id=\"pinColor5640\"\r\n        class=\"stWhite\"\r\n        cx=\"429.78\"\r\n        cy=\"547.43\"\r\n        r=\"14\"\r\n      />\r\n    </g>\r\n    <g id=\"pin5642\">\r\n      <circle id=\"pinBack5642\" class=\"stGray\" cx=\"530.21\" cy=\"546.43\" r=\"20\" />\r\n      <circle\r\n        id=\"pinColor5642\"\r\n        class=\"stWhite\"\r\n        cx=\"530.21\"\r\n        cy=\"546.43\"\r\n        r=\"14\"\r\n      />\r\n    </g>\r\n    <g id=\"pin6624\">\r\n      <circle id=\"pinBack6624\" class=\"stGray\" cx=\"258.92\" cy=\"223.15\" r=\"20\" />\r\n      <circle\r\n        id=\"pinColor6624\"\r\n        class=\"stWhite\"\r\n        cx=\"258.92\"\r\n        cy=\"223.15\"\r\n        r=\"14\"\r\n      />\r\n    </g>\r\n  </g>\r\n  <g id=\"dPArrowsFID2\" runat=\"server\" Visible=\"false\"></g>\r\n\r\n  <g id=\"pinsFID5\" runat=\"server\" Visible=\"false\">\r\n    <g id=\"pin1CM100A\">\r\n      <ellipse\r\n        id=\"pinBack1CM100A\"\r\n        class=\"stGray\"\r\n        cx=\"204.7\"\r\n        cy=\"164.8\"\r\n        rx=\"15\"\r\n        ry=\"14.49\"\r\n      />\r\n      <ellipse\r\n        id=\"pinColor1CM100A\"\r\n        class=\"stWhite\"\r\n        cx=\"204.7\"\r\n        cy=\"164.8\"\r\n        rx=\"10\"\r\n        ry=\"9.66\"\r\n      />\r\n    </g>\r\n    <g id=\"pin1CM100B\">\r\n      <ellipse\r\n        id=\"pinBack1CM100B\"\r\n        class=\"stGray\"\r\n        cx=\"228.54\"\r\n        cy=\"260.53\"\r\n        rx=\"15\"\r\n        ry=\"14.49\"\r\n      />\r\n      <ellipse\r\n        id=\"pinColor1CM100B\"\r\n        class=\"stWhite\"\r\n        cx=\"228.54\"\r\n        cy=\"260.53\"\r\n        rx=\"10\"\r\n        ry=\"9.66\"\r\n      />\r\n    </g>\r\n    <g id=\"pin1CM100D\">\r\n      <ellipse\r\n        id=\"pinBack1CM100D\"\r\n        class=\"stGray\"\r\n        cx=\"282.92\"\r\n        cy=\"368.53\"\r\n        rx=\"15\"\r\n        ry=\"14.49\"\r\n      />\r\n      <ellipse\r\n        id=\"pinColor1CM100D\"\r\n        class=\"stWhite\"\r\n        cx=\"282.92\"\r\n        cy=\"368.53\"\r\n        rx=\"10\"\r\n        ry=\"9.66\"\r\n      />\r\n    </g>\r\n    <g id=\"pin1CM102\">\r\n      <ellipse\r\n        id=\"pinBack1CM102\"\r\n        class=\"stGray\"\r\n        cx=\"299.01\"\r\n        cy=\"223.82\"\r\n        rx=\"15\"\r\n        ry=\"14.49\"\r\n      />\r\n      <ellipse\r\n        id=\"pinColor1CM102\"\r\n        class=\"stWhite\"\r\n        cx=\"299.01\"\r\n        cy=\"223.82\"\r\n        rx=\"10\"\r\n        ry=\"9.66\"\r\n      />\r\n    </g>\r\n    <g id=\"pin1CM104\">\r\n      <ellipse\r\n        id=\"pinBack1CM104\"\r\n        class=\"stGray\"\r\n        cx=\"357.98\"\r\n        cy=\"196.19\"\r\n        rx=\"15\"\r\n        ry=\"14.49\"\r\n      />\r\n      <ellipse\r\n        id=\"pinColor1CM104\"\r\n        class=\"stWhite\"\r\n        cx=\"357.98\"\r\n        cy=\"196.19\"\r\n        rx=\"10\"\r\n        ry=\"9.66\"\r\n      />\r\n    </g>\r\n    <g id=\"pin1CM104A\">\r\n      <ellipse\r\n        id=\"pinBack1CM104A\"\r\n        class=\"stGray\"\r\n        cx=\"373.67\"\r\n        cy=\"294.56\"\r\n        rx=\"15\"\r\n        ry=\"14.49\"\r\n      />\r\n      <ellipse\r\n        id=\"pinColor1CM104A\"\r\n        class=\"stWhite\"\r\n        cx=\"373.67\"\r\n        cy=\"294.56\"\r\n        rx=\"10\"\r\n        ry=\"9.66\"\r\n      />\r\n    </g>\r\n    <g id=\"pin1CM104B\">\r\n      <ellipse\r\n        id=\"pinBack1CM104B\"\r\n        class=\"stGray\"\r\n        cx=\"361.75\"\r\n        cy=\"409.89\"\r\n        rx=\"15\"\r\n        ry=\"14.49\"\r\n      />\r\n      <ellipse\r\n        id=\"pinColor1CM104B\"\r\n        class=\"stWhite\"\r\n        cx=\"361.75\"\r\n        cy=\"409.89\"\r\n        rx=\"10\"\r\n        ry=\"9.66\"\r\n      />\r\n    </g>\r\n    <g id=\"pin1CM106\">\r\n      <ellipse\r\n        id=\"pinBack1CM106\"\r\n        class=\"stGray\"\r\n        cx=\"479.01\"\r\n        cy=\"196.19\"\r\n        rx=\"15\"\r\n        ry=\"14.49\"\r\n      />\r\n      <ellipse\r\n        id=\"pinColor1CM106\"\r\n        class=\"stWhite\"\r\n        cx=\"479.01\"\r\n        cy=\"196.19\"\r\n        rx=\"10\"\r\n        ry=\"9.66\"\r\n      />\r\n    </g>\r\n    <g id=\"pin1CM106A\">\r\n      <ellipse\r\n        id=\"pinBack1CM106A\"\r\n        class=\"stGray\"\r\n        cx=\"460.62\"\r\n        cy=\"294.56\"\r\n        rx=\"15\"\r\n        ry=\"14.49\"\r\n      />\r\n      <ellipse\r\n        id=\"pinColor1CM106A\"\r\n        class=\"stWhite\"\r\n        cx=\"460.62\"\r\n        cy=\"294.56\"\r\n        rx=\"10\"\r\n        ry=\"9.66\"\r\n      />\r\n    </g>\r\n    <g id=\"pin1CM106B\">\r\n      <ellipse\r\n        id=\"pinBack1CM106B\"\r\n        class=\"stGray\"\r\n        cx=\"477.02\"\r\n        cy=\"409.89\"\r\n        rx=\"15\"\r\n        ry=\"14.49\"\r\n      />\r\n      <ellipse\r\n        id=\"pinColor1CM106B\"\r\n        class=\"stWhite\"\r\n        cx=\"477.02\"\r\n        cy=\"409.89\"\r\n        rx=\"10\"\r\n        ry=\"9.66\"\r\n      />\r\n    </g>\r\n    <g id=\"pin1CM108\">\r\n      <ellipse\r\n        id=\"pinBack1CM108\"\r\n        class=\"stGray\"\r\n        cx=\"547.94\"\r\n        cy=\"196.19\"\r\n        rx=\"15\"\r\n        ry=\"14.49\"\r\n      />\r\n      <ellipse\r\n        id=\"pinColor1CM108\"\r\n        class=\"stWhite\"\r\n        cx=\"547.94\"\r\n        cy=\"196.19\"\r\n        rx=\"10\"\r\n        ry=\"9.66\"\r\n      />\r\n    </g>\r\n    <g id=\"pin1CM108A\">\r\n      <ellipse\r\n        id=\"pinBack1CM108A\"\r\n        class=\"stGray\"\r\n        cx=\"571.75\"\r\n        cy=\"294.56\"\r\n        rx=\"15\"\r\n        ry=\"14.49\"\r\n      />\r\n      <ellipse\r\n        id=\"pinColor1CM108A\"\r\n        class=\"stWhite\"\r\n        cx=\"571.75\"\r\n        cy=\"294.56\"\r\n        rx=\"10\"\r\n        ry=\"9.66\"\r\n      />\r\n    </g>\r\n    <g id=\"pin1CM108B\">\r\n      <ellipse\r\n        id=\"pinBack1CM108B\"\r\n        class=\"stGray\"\r\n        cx=\"549.93\"\r\n        cy=\"409.89\"\r\n        rx=\"15\"\r\n        ry=\"14.49\"\r\n      />\r\n      <ellipse\r\n        id=\"pinColor1CM108B\"\r\n        class=\"stWhite\"\r\n        cx=\"549.93\"\r\n        cy=\"409.89\"\r\n        rx=\"10\"\r\n        ry=\"9.66\"\r\n      />\r\n    </g>\r\n    <g id=\"pin1CM110\">\r\n      <ellipse\r\n        id=\"pinBack1CM110\"\r\n        class=\"stGray\"\r\n        cx=\"671.58\"\r\n        cy=\"179.24\"\r\n        rx=\"15\"\r\n        ry=\"14.49\"\r\n      />\r\n      <ellipse\r\n        id=\"pinColor1CM110\"\r\n        class=\"stWhite\"\r\n        cx=\"671.58\"\r\n        cy=\"179.24\"\r\n        rx=\"10\"\r\n        ry=\"9.66\"\r\n      />\r\n    </g>\r\n    <g id=\"pin1CM110A\">\r\n      <ellipse\r\n        id=\"pinBack1CM110A\"\r\n        class=\"stGray\"\r\n        cx=\"650.58\"\r\n        cy=\"294.56\"\r\n        rx=\"15\"\r\n        ry=\"14.49\"\r\n      />\r\n      <ellipse\r\n        id=\"pinColor1CM110A\"\r\n        class=\"stWhite\"\r\n        cx=\"650.58\"\r\n        cy=\"294.56\"\r\n        rx=\"10\"\r\n        ry=\"9.66\"\r\n      />\r\n    </g>\r\n    <g id=\"pin1CM110B\">\r\n      <ellipse\r\n        id=\"pinBack1CM110B\"\r\n        class=\"stGray\"\r\n        cx=\"668.96\"\r\n        cy=\"409.89\"\r\n        rx=\"15\"\r\n        ry=\"14.49\"\r\n      />\r\n      <ellipse\r\n        id=\"pinColor1CM110B\"\r\n        class=\"stWhite\"\r\n        cx=\"668.96\"\r\n        cy=\"409.89\"\r\n        rx=\"10\"\r\n        ry=\"9.66\"\r\n      />\r\n    </g>\r\n    <g id=\"pinCorr1CM_1\">\r\n      <ellipse\r\n        id=\"pinBackCorr1CM_1\"\r\n        class=\"stGray\"\r\n        cx=\"419.35\"\r\n        cy=\"164.8\"\r\n        rx=\"15\"\r\n        ry=\"14.49\"\r\n      />\r\n      <ellipse\r\n        id=\"pinColorCorr1CM_1\"\r\n        class=\"stWhite\"\r\n        cx=\"419.35\"\r\n        cy=\"164.8\"\r\n        rx=\"10\"\r\n        ry=\"9.66\"\r\n      />\r\n    </g>\r\n    <g id=\"pinCorr1CM_2\">\r\n      <ellipse\r\n        id=\"pinBackCorr1CM_2\"\r\n        class=\"stGray\"\r\n        cx=\"514.39\"\r\n        cy=\"457.39\"\r\n        rx=\"15\"\r\n        ry=\"14.49\"\r\n      />\r\n      <ellipse\r\n        id=\"pinColorCorr1CM_2\"\r\n        class=\"stWhite\"\r\n        cx=\"514.39\"\r\n        cy=\"457.39\"\r\n        rx=\"10\"\r\n        ry=\"9.66\"\r\n      />\r\n    </g>\r\n  </g>\r\n  <g id=\"dPArrowsFID5\" runat=\"server\" Visible=\"false\">\r\n    <g id=\"pin1CM100B_1CM100_DP\">\r\n      <polygon\r\n        id=\"pinBack1CM100B_1CM100_DP\"\r\n        class=\"stGray\"\r\n        points=\"152.15 304.26 170.23 321.72 170.23 311.21 198.53 311.21 198.53 297.29 170.23 297.29 170.23 286.72 152.15 304.26\"\r\n      />\r\n      <polygon\r\n        id=\"pinColor1CM100B_1CM100_DP\"\r\n        class=\"stWhite\"\r\n        points=\"155.47 304.25 167.91 316.27 167.91 308.9 196.22 308.9 196.22 299.61 167.91 299.61 167.91 292.19 155.47 304.25\"\r\n      />\r\n    </g>\r\n    <g id=\"pin1CM100D_1CM100_DP\">\r\n      <polygon\r\n        id=\"pinBack1CM100D_1CM100_DP\"\r\n        class=\"stGray\"\r\n        points=\"205.35 395.44 223.43 412.9 223.43 402.39 251.74 402.39 251.74 388.47 223.43 388.47 223.43 377.9 205.35 395.44\"\r\n      />\r\n      <polygon\r\n        id=\"pinColor1CM100D_1CM100_DP\"\r\n        class=\"stWhite\"\r\n        points=\"208.68 395.43 221.12 407.45 221.12 400.07 249.42 400.07 249.42 390.79 221.12 390.79 221.12 383.37 208.68 395.43\"\r\n      />\r\n    </g>\r\n    <g id=\"pin1CM100D_1CM100B_DP\">\r\n      <polygon\r\n        id=\"pinBack1CM100D_1CM100B_DP\"\r\n        class=\"stGray\"\r\n        points=\"261.07 315.39 278.54 297.3 268.03 297.3 268.03 269 254.11 269 254.11 297.3 243.54 297.3 261.07 315.39\"\r\n      />\r\n      <polygon\r\n        id=\"pinColor1CM100D_1CM100B_DP\"\r\n        class=\"stWhite\"\r\n        points=\"261.07 312.06 273.09 299.62 265.71 299.62 265.71 271.31 256.43 271.31 256.43 299.62 249.01 299.62 261.07 312.06\"\r\n      />\r\n    </g>\r\n    <g id=\"pin1CM102_1CM100B_DP\">\r\n      <polygon\r\n        id=\"pinBack1CM102_1CM100B_DP\"\r\n        class=\"stGray\"\r\n        points=\"249.89 246.07 267.98 263.54 267.98 253.03 296.28 253.03 296.28 239.11 267.98 239.11 267.98 228.54 249.89 246.07\"\r\n      />\r\n      <polygon\r\n        id=\"pinColor1CM102_1CM100B_DP\"\r\n        class=\"stWhite\"\r\n        points=\"253.22 246.07 265.66 258.08 265.66 250.71 293.97 250.71 293.97 241.43 265.66 241.43 265.66 234.01 253.22 246.07\"\r\n      />\r\n    </g>\r\n    <g id=\"pinCORR1CM_1_1CM102_DP\">\r\n      <polygon\r\n        id=\"pinBackCORR1CM_1_1CM102_DP\"\r\n        class=\"stGray\"\r\n        points=\"295.93 160.09 278.47 178.18 288.98 178.18 288.98 206.48 302.89 206.48 302.89 178.18 313.47 178.18 295.93 160.09\"\r\n      />\r\n      <polygon\r\n        id=\"pinColorCORR1CM_1_1CM102_DP\"\r\n        class=\"stWhite\"\r\n        points=\"295.94 163.42 283.92 175.86 291.29 175.86 291.29 204.17 300.58 204.17 300.58 175.86 308 175.86 295.94 163.42\"\r\n      />\r\n    </g>\r\n    <g id=\"pin1CM104_CORR1CM_1_DP\">\r\n      <polygon\r\n        id=\"pinBack1CM104_CORR1CM_1_DP\"\r\n        class=\"stGray\"\r\n        points=\"342.48 149.9 325.02 167.99 335.53 167.99 335.53 196.29 349.45 196.29 349.45 167.99 360.02 167.99 342.48 149.9\"\r\n      />\r\n      <polygon\r\n        id=\"pinColor1CM104_CORR1CM_1_DP\"\r\n        class=\"stWhite\"\r\n        points=\"342.49 153.23 330.47 165.67 337.84 165.67 337.84 193.98 347.13 193.98 347.13 165.67 354.55 165.67 342.49 153.23\"\r\n      />\r\n    </g>\r\n    <g id=\"pin1CM104A_1CM104_DP\">\r\n      <polygon\r\n        id=\"pinBack1CM104A_1CM104_DP\"\r\n        class=\"stGray\"\r\n        points=\"374.88 242.4 392.34 224.31 381.83 224.31 381.83 196.01 367.92 196.01 367.92 224.31 357.34 224.31 374.88 242.4\"\r\n      />\r\n      <polygon\r\n        id=\"pinColor1CM104A_1CM104_DP\"\r\n        class=\"stWhite\"\r\n        points=\"374.88 239.07 386.89 226.63 379.52 226.63 379.52 198.32 370.23 198.32 370.23 226.63 362.81 226.63 374.88 239.07\"\r\n      />\r\n    </g>\r\n    <g id=\"pin1CM104B_1CM104A_DP\">\r\n      <polygon\r\n        id=\"pinBack1CM104B_1CM104A_DP\"\r\n        class=\"stGray\"\r\n        points=\"368.14 397.17 385.61 379.08 375.1 379.08 375.1 350.78 361.18 350.78 361.18 379.08 350.61 379.08 368.14 397.17\"\r\n      />\r\n      <polygon\r\n        id=\"pinColor1CM104B_1CM104A_DP\"\r\n        class=\"stWhite\"\r\n        points=\"368.14 393.84 380.15 381.4 372.78 381.4 372.78 353.09 363.49 353.09 363.49 381.4 356.08 381.4 368.14 393.84\"\r\n      />\r\n    </g>\r\n    <g id=\"pinCORR1CM_2_1CM104B_DP\">\r\n      <polygon\r\n        id=\"pinBackCORR1CM_2_1CM104B_DP\"\r\n        class=\"stGray\"\r\n        points=\"376.71 409.89 359.25 427.97 369.76 427.97 369.76 456.28 383.68 456.28 383.68 427.97 394.25 427.97 376.71 409.89\"\r\n      />\r\n      <polygon\r\n        id=\"pinColorCORR1CM_2_1CM104B_DP\"\r\n        class=\"stWhite\"\r\n        points=\"376.72 413.22 364.7 425.66 372.07 425.66 372.07 453.96 381.36 453.96 381.36 425.66 388.78 425.66 376.72 413.22\"\r\n      />\r\n    </g>\r\n    <g id=\"pin1CM106_CORR1CM_1_DP\">\r\n      <polygon\r\n        id=\"pinBack1CM106_CORR1CM_1_DP\"\r\n        class=\"stGray\"\r\n        points=\"493.97 151.26 476.51 169.35 487.02 169.35 487.02 197.65 500.94 197.65 500.94 169.35 511.51 169.35 493.97 151.26\"\r\n      />\r\n      <polygon\r\n        id=\"pinColor1CM106_CORR1CM_1_DP\"\r\n        class=\"stWhite\"\r\n        points=\"493.98 154.59 481.96 167.03 489.33 167.03 489.33 195.34 498.62 195.34 498.62 167.03 506.04 167.03 493.98 154.59\"\r\n      />\r\n    </g>\r\n    <g id=\"pin1CM106A_1CM106_DP\">\r\n      <polygon\r\n        id=\"pinBack1CM106A_1CM106_DP\"\r\n        class=\"stGray\"\r\n        points=\"461.28 242.4 478.75 224.31 468.23 224.31 468.23 196.01 454.32 196.01 454.32 224.31 443.75 224.31 461.28 242.4\"\r\n      />\r\n      <polygon\r\n        id=\"pinColor1CM106A_1CM106_DP\"\r\n        class=\"stWhite\"\r\n        points=\"461.27 239.07 473.29 226.63 465.92 226.63 465.92 198.32 456.63 198.32 456.63 226.63 449.21 226.63 461.27 239.07\"\r\n      />\r\n    </g>\r\n    <g id=\"pin1CM106B_1CM106A_DP\">\r\n      <polygon\r\n        id=\"pinBack1CM106B_1CM106A_DP\"\r\n        class=\"stGray\"\r\n        points=\"467.05 397.17 484.52 379.08 474.01 379.08 474.01 350.78 460.09 350.78 460.09 379.08 449.52 379.08 467.05 397.17\"\r\n      />\r\n      <polygon\r\n        id=\"pinColor1CM106B_1CM106A_DP\"\r\n        class=\"stWhite\"\r\n        points=\"467.05 393.84 479.06 381.4 471.69 381.4 471.69 353.09 462.41 353.09 462.41 381.4 454.99 381.4 467.05 393.84\"\r\n      />\r\n    </g>\r\n    <g id=\"pinCORR1CM_2_1CM106B_DP\">\r\n      <polygon\r\n        id=\"pinBackCORR1CM_2_1CM106B_DP\"\r\n        class=\"stGray\"\r\n        points=\"461.99 408.3 444.52 426.38 455.03 426.38 455.03 454.69 468.95 454.69 468.95 426.38 479.52 426.38 461.99 408.3\"\r\n      />\r\n      <polygon\r\n        id=\"pinColorCORR1CM_2_1CM106B_DP\"\r\n        class=\"stWhite\"\r\n        points=\"461.99 411.63 449.97 424.07 457.35 424.07 457.35 452.38 466.63 452.38 466.63 424.07 474.05 424.07 461.99 411.63\"\r\n      />\r\n    </g>\r\n    <g id=\"pin1CM108_CORR1CM_1_DP\">\r\n      <polygon\r\n        id=\"pinBack1CM108_CORR1CM_1_DP\"\r\n        class=\"stGray\"\r\n        points=\"534.89 151.77 517.43 169.85 527.94 169.85 527.94 198.16 541.86 198.16 541.86 169.85 552.43 169.85 534.89 151.77\"\r\n      />\r\n      <polygon\r\n        id=\"pinColor1CM108_CORR1CM_1_DP\"\r\n        class=\"stWhite\"\r\n        points=\"534.9 155.1 522.88 167.54 530.25 167.54 530.25 195.84 539.54 195.84 539.54 167.54 546.96 167.54 534.9 155.1\"\r\n      />\r\n    </g>\r\n    <g id=\"pin1CM108A_1CM108_DP\">\r\n      <polygon\r\n        id=\"pinBack1CM108A_1CM108_DP\"\r\n        class=\"stGray\"\r\n        points=\"564.96 242.4 582.43 224.31 571.92 224.31 571.92 196.01 558 196.01 558 224.31 547.43 224.31 564.96 242.4\"\r\n      />\r\n      <polygon\r\n        id=\"pinColor1CM108A_1CM108_DP\"\r\n        class=\"stWhite\"\r\n        points=\"564.96 239.07 576.97 226.63 569.6 226.63 569.6 198.32 560.32 198.32 560.32 226.63 552.9 226.63 564.96 239.07\"\r\n      />\r\n    </g>\r\n    <g id=\"pin1CM108B_1CM108A_DP\">\r\n      <polygon\r\n        id=\"pinBack1CM108B_1CM108A_DP\"\r\n        class=\"stGray\"\r\n        points=\"557.98 396.45 575.44 378.37 564.93 378.37 564.93 350.06 551.01 350.06 551.01 378.37 540.44 378.37 557.98 396.45\"\r\n      />\r\n      <polygon\r\n        id=\"pinColor1CM108B_1CM108A_DP\"\r\n        class=\"stWhite\"\r\n        points=\"557.97 393.12 569.99 380.68 562.62 380.68 562.62 352.38 553.33 352.38 553.33 380.68 545.91 380.68 557.97 393.12\"\r\n      />\r\n    </g>\r\n    <g id=\"pinCORR1CM_2_1CM108B_DP\">\r\n      <polygon\r\n        id=\"pinBackCORR1CM_2_1CM108B_DP\"\r\n        class=\"stGray\"\r\n        points=\"566.71 408.3 549.24 426.38 559.75 426.38 559.75 454.69 573.67 454.69 573.67 426.38 584.24 426.38 566.71 408.3\"\r\n      />\r\n      <polygon\r\n        id=\"pinColorCORR1CM_2_1CM108B_DP\"\r\n        class=\"stWhite\"\r\n        points=\"566.71 411.63 554.7 424.07 562.07 424.07 562.07 452.38 571.36 452.38 571.36 424.07 578.77 424.07 566.71 411.63\"\r\n      />\r\n    </g>\r\n    <g id=\"pin1CM110_CORR1CM_1_DP\">\r\n      <polygon\r\n        id=\"pinBack1CM110_CORR1CM_1_DP\"\r\n        class=\"stGray\"\r\n        points=\"612.39 171.43 630.47 188.9 630.47 178.39 658.77 178.39 658.77 164.47 630.47 164.47 630.47 153.9 612.39 171.43\"\r\n      />\r\n      <polygon\r\n        id=\"pinColor1CM110_CORR1CM_1_DP\"\r\n        class=\"stWhite\"\r\n        points=\"615.72 171.43 628.15 183.44 628.15 176.07 656.46 176.07 656.46 166.79 628.15 166.79 628.15 159.37 615.72 171.43\"\r\n      />\r\n    </g>\r\n    <g id=\"pin1CM110A_1CM110_DP\">\r\n      <polygon\r\n        id=\"pinBack1CM110A_1CM110_DP\"\r\n        class=\"stGray\"\r\n        points=\"685.62 232.53 703.08 214.45 692.57 214.45 692.57 186.14 678.65 186.14 678.65 214.45 668.08 214.45 685.62 232.53\"\r\n      />\r\n      <polygon\r\n        id=\"pinColor1CM110A_1CM110_DP\"\r\n        class=\"stWhite\"\r\n        points=\"685.61 229.2 697.63 216.76 690.25 216.76 690.25 188.46 680.97 188.46 680.97 216.76 673.55 216.76 685.61 229.2\"\r\n      />\r\n    </g>\r\n    <g id=\"pin1CM110B_1CM110A_DP\">\r\n      <polygon\r\n        id=\"pinBack1CM110B_1CM110A_DP\"\r\n        class=\"stGray\"\r\n        points=\"660.62 395.94 678.08 377.86 667.57 377.86 667.57 349.56 653.65 349.56 653.65 377.86 643.08 377.86 660.62 395.94\"\r\n      />\r\n      <polygon\r\n        id=\"pinColor1CM110B_1CM110A_DP\"\r\n        class=\"stWhite\"\r\n        points=\"660.61 392.62 672.63 380.18 665.25 380.18 665.25 351.87 655.97 351.87 655.97 380.18 648.55 380.18 660.61 392.62\"\r\n      />\r\n    </g>\r\n    <g id=\"pinCORR1CM_2_1CM110B_DP\">\r\n      <polygon\r\n        id=\"pinBackCORR1CM_2_1CM110B_DP\"\r\n        class=\"stGray\"\r\n        points=\"654.7 408.79 637.23 426.88 647.74 426.88 647.74 455.18 661.66 455.18 661.66 426.88 672.23 426.88 654.7 408.79\"\r\n      />\r\n      <polygon\r\n        id=\"pinColorCORR1CM_2_1CM110B_DP\"\r\n        class=\"stWhite\"\r\n        points=\"654.7 412.12 642.68 424.56 650.05 424.56 650.05 452.87 659.34 452.87 659.34 424.56 666.76 424.56 654.7 412.12\"\r\n      />\r\n    </g>\r\n    <g id=\"pin1CM100D_CORR1CM_2_DP\">\r\n      <polygon\r\n        id=\"pinBack1CM100D_CORR1CM_2_DP\"\r\n        class=\"stGray\"\r\n        points=\"295.28 457.31 313.37 474.78 313.37 464.27 341.67 464.27 341.67 450.35 313.37 450.35 313.37 439.78 295.28 457.31\"\r\n      />\r\n      <polygon\r\n        id=\"pinColor1CM100D_CORR1CM_2_DP\"\r\n        class=\"stWhite\"\r\n        points=\"298.61 457.31 311.05 469.32 311.05 461.95 339.36 461.95 339.36 452.66 311.05 452.66 311.05 445.25 298.61 457.31\"\r\n      />\r\n    </g>\r\n  </g>\r\n\r\n  <g id=\"pinsFID19\" runat=\"server\" Visible=\"false\">\r\n    <g id=\"pinB3B402A\">\r\n      <ellipse\r\n        id=\"pinBackB3B402A\"\r\n        class=\"stGray\"\r\n        cx=\"478.44\"\r\n        cy=\"293.96\"\r\n        rx=\"50\"\r\n        ry=\"48.7\"\r\n      />\r\n      <ellipse\r\n        id=\"pinColorB3B402A\"\r\n        class=\"stWhite\"\r\n        cx=\"478.44\"\r\n        cy=\"293.96\"\r\n        rx=\"36.67\"\r\n        ry=\"35.71\"\r\n      />\r\n    </g>\r\n    <g id=\"pinB3B402\">\r\n      <ellipse\r\n        id=\"pinBackB3B402\"\r\n        class=\"stGray\"\r\n        cx=\"156.51\"\r\n        cy=\"288.73\"\r\n        rx=\"50\"\r\n        ry=\"48.7\"\r\n      />\r\n      <ellipse\r\n        id=\"pinColorB3B402\"\r\n        class=\"stWhite\"\r\n        cx=\"156.51\"\r\n        cy=\"288.73\"\r\n        rx=\"36.67\"\r\n        ry=\"35.71\"\r\n      />\r\n    </g>\r\n  </g>\r\n  <g id=\"dPArrowsFID19\" runat=\"server\" Visible=\"false\">\r\n    <g id=\"pinB3B402A_B3B402_DP\">\r\n      <polygon\r\n        id=\"pinBackB3B402A_B3B402_DP\"\r\n        class=\"stGray\"\r\n        points=\"225.89 449.18 296.06 516.95 296.06 476.17 405.89 476.17 405.89 422.16 296.06 422.16 296.06 381.14 225.89 449.18\"\r\n      />\r\n      <polygon\r\n        id=\"pinColorB3B402A_B3B402_DP\"\r\n        class=\"stWhite\"\r\n        points=\"238.81 449.16 287.08 495.78 287.08 467.18 396.91 467.18 396.91 431.14 287.08 431.14 287.08 402.36 238.81 449.16\"\r\n      />\r\n    </g>\r\n    <g id=\"pinB3B402_Corr_DP\">\r\n      <polygon\r\n        id=\"pinBackB3B402_Corr_DP\"\r\n        class=\"stGray\"\r\n        points=\"4.3 449.18 74.47 516.95 74.47 476.17 184.3 476.17 184.3 422.16 74.47 422.16 74.47 381.14 4.3 449.18\"\r\n      />\r\n      <polygon\r\n        id=\"pinColorB3B402_Corr_DP\"\r\n        class=\"stWhite\"\r\n        points=\"17.22 449.16 65.49 495.78 65.49 467.18 175.32 467.18 175.32 431.14 65.49 431.14 65.49 402.36 17.22 449.16\"\r\n      />\r\n    </g>\r\n  </g>\r\n\r\n  <g id=\"Pins_Ownership\" runat=\"server\">\r\n    <g id=\"Pin_Facility_2J\">\r\n      <a\r\n        class=\"far fa-lab3\"\r\n        data-toggle=\"tooltip\"\r\n        id=\"twojtooltip\"\r\n        title=\"CC CCE 2J Cell Therapy Lab\"\r\n        href=\"CC-CCE-2J_Main.aspx\"\r\n      >\r\n        <path\r\n          class=\"st3\"\r\n          d=\"M2551.84 3649.85c-95 95-114.25 236.99-57.93 351.13l-221.41 359.26L2633 4139.9c114.09 56.13 255.89 36.82 350.8-58.09 119.28-119.28 119.28-312.68 0-431.96-119.28-119.28-312.68-119.28-431.96 0zm353.51 353.52c-75.96 75.96-199.11 75.96-275.06 0s-75.96-199.11 0-275.06 199.11-75.96 275.06 0 75.96 199.1 0 275.06z\"\r\n        />\r\n        <circle\r\n          id=\"CC_Pharmacy_2J\"\r\n          class=\"st1\"\r\n          runat=\"server\"\r\n          cx=\"2767.82\"\r\n          cy=\"3865.84\"\r\n          r=\"194.5\"\r\n        />\r\n      </a>\r\n    </g>\r\n\r\n    <g id=\"Pin_Facility_3E\">\r\n      <a\r\n        class=\"far fa-lab4\"\r\n        data-toggle=\"tooltip\"\r\n        title=\"CC CCE 3T Cell Therapy Lab\"\r\n        href=\"CC-CCE-3T_Main.aspx\"\r\n      >\r\n        <path\r\n          class=\"st3\"\r\n          d=\"M1677.88 3589.51c-95 95-114.25 236.99-57.93 351.13l-221.41 359.26 360.5-220.34c114.09 56.13 255.89 36.82 350.8-58.09 119.28-119.28 119.28-312.68 0-431.96-119.28-119.28-312.68-119.28-431.96 0zm353.51 353.52c-75.96 75.96-199.11 75.96-275.06 0-75.96-75.96-75.96-199.11 0-275.06 75.96-75.96 199.11-75.96 275.06 0s75.96 199.1 0 275.06z\"\r\n        />\r\n        <circle\r\n          id=\"CC_Pharmacy_3E\"\r\n          class=\"st1\"\r\n          runat=\"server\"\r\n          cx=\"1893.86\"\r\n          cy=\"3805.5\"\r\n          r=\"194.5\"\r\n        />\r\n      </a>\r\n    </g>\r\n\r\n    <g id=\"Pin_Facility_10A\">\r\n      <a\r\n        class=\"far fa-lab6\"\r\n        href=\"NCI-Trailer1_Main.aspx\"\r\n        title=\"NCI Trailer 10A\"\r\n      >\r\n        <path\r\n          class=\"st3\"\r\n          d=\"M1568.89 3340.55c95-95 114.25-236.99 57.93-351.13l221.41-359.26-360.5 220.34c-114.09-56.13-255.89-36.82-350.8 58.09-119.28 119.28-119.28 312.68 0 431.96 119.28 119.28 312.68 119.28 431.96 0zm-353.51-353.52c75.96-75.96 199.11-75.96 275.06 0 75.96 75.96 75.96 199.11 0 275.06-75.96 75.96-199.11 75.96-275.06 0-75.96-75.95-75.96-199.1 0-275.06z\"\r\n        />\r\n        <circle\r\n          id=\"CC_Other_10A\"\r\n          runat=\"server\"\r\n          class=\"st1\"\r\n          cx=\"1352.91\"\r\n          cy=\"3124.57\"\r\n          r=\"194.5\"\r\n        />\r\n      </a>\r\n    </g>\r\n\r\n    <g id=\"Pin_Facility_10B\">\r\n      <a\r\n        class=\"far fa-lab5\"\r\n        href=\"NCI-Trailer2_Main.aspx\"\r\n        title=\"NCI Trailer 10B\"\r\n      >\r\n        <path\r\n          class=\"st3\"\r\n          d=\"M1132.54 2073.69c95 95 236.99 114.25 351.13 57.93l359.26 221.41-220.34-360.5c56.13-114.09 36.82-255.89-58.09-350.8-119.28-119.28-312.68-119.28-431.96 0-119.28 119.28-119.28 312.68 0 431.96zm353.52-353.52c75.96 75.96 75.96 199.11 0 275.06-75.96 75.96-199.11 75.96-275.06 0-75.96-75.96-75.96-199.11 0-275.06 75.95-75.95 199.1-75.95 275.06 0z\"\r\n        />\r\n        <circle\r\n          id=\"CC_Other_10B\"\r\n          runat=\"server\"\r\n          class=\"st1\"\r\n          cx=\"1348.52\"\r\n          cy=\"1857.71\"\r\n          r=\"194.5\"\r\n        />\r\n      </a>\r\n    </g>\r\n\r\n    <g id=\"Pin_Facility_PET_B3\">\r\n      <a\r\n        class=\"far fa-lab8\"\r\n        href=\"B3-PET_Main.aspx\"\r\n        title=\"CC PET B3 Radiochemistry\"\r\n      >\r\n        <path\r\n          class=\"st3\"\r\n          d=\"M3349.62 1581.68c-95 95-114.25 236.99-57.93 351.13l-221.41 359.26 360.5-220.34c114.09 56.13 255.89 36.82 350.8-58.09 119.28-119.28 119.28-312.68 0-431.96-119.28-119.28-312.67-119.28-431.96 0zm353.52 353.52c-75.96 75.96-199.11 75.96-275.06 0-75.96-75.96-75.96-199.11 0-275.06 75.96-75.96 199.11-75.96 275.06 0 75.95 75.95 75.95 199.1 0 275.06z\"\r\n        />\r\n        <circle\r\n          id=\"NCI_Facility_PET_B3\"\r\n          runat=\"server\"\r\n          class=\"st1\"\r\n          cx=\"3565.61\"\r\n          cy=\"1797.67\"\r\n          r=\"194.5\"\r\n        />\r\n      </a>\r\n    </g>\r\n\r\n    <g id=\"Pin_Facility_NMD\">\r\n      <a\r\n        class=\"far fa-labten\"\r\n        href=\"CC-NMD_Radio_Main.aspx\"\r\n        title=\"CC NMD Radiopharmacy\"\r\n      >\r\n        <path\r\n          class=\"st3\"\r\n          d=\"M3972.1,2978.1c-95-95-237-114.2-351.1-57.9l-359.3-221.4,220.4,360.5c-56.2,114.1-36.9,255.9,58,350.8,119.3,119.3,312.7,119.3,432,0S4091.4,3097.4,3972.1,2978.1Zm-353.5,353.5c-76-75.9-76-199.1,0-275a194.5,194.5,0,0,1,275.1,0c75.9,75.9,75.9,199.1,0,275A194.5,194.5,0,0,1,3618.6,3331.6Z\"\r\n          style=\"\r\n            fill-opacity: 0.25;\r\n            stroke: #000;\r\n            stroke-linecap: round;\r\n            stroke-linejoin: round;\r\n          \"\r\n        />\r\n\r\n        <circle\r\n          id=\"NCI_Facility_NMD\"\r\n          runat=\"server\"\r\n          class=\"st1\"\r\n          cx=\"3756.1\"\r\n          cy=\"3194.1\"\r\n          r=\"194.5\"\r\n        />\r\n      </a>\r\n    </g>\r\n\r\n    <g id=\"Pin_Facility_P_IVAU\">\r\n      <a\r\n        class=\"far fa-lab15\"\r\n        title=\"CC Pharmacy P-IVAU\"\r\n        href=\"P-IVAU_Main.aspx\"\r\n      >\r\n        <path\r\n          class=\"st3\"\r\n          d=\"M5871,1202c-95,95-114.2,237-57.9,351.1l-221.4,359.3L5952.2,1692c114.1,56.2,255.9,36.9,350.8-58,119.3-119.3,119.3-312.7,0-432S5990.3,1082.7,5871,1202Zm353.6,353.5c-76,76-199.2,76-275.1,0s-76-199.1,0-275.1,199.1-75.9,275.1,0S6300.5,1479.6,6224.6,1555.5Z\"\r\n          style=\"\r\n            fill-opacity: 0.25;\r\n            stroke: #000;\r\n            stroke-linecap: round;\r\n            stroke-linejoin: round;\r\n          \"\r\n        />\r\n\r\n        <circle\r\n          id=\"CCE_Facility_P_IVAU\"\r\n          runat=\"server\"\r\n          class=\"st1\"\r\n          cx=\"6087\"\r\n          cy=\"1418\"\r\n          r=\"194.5\"\r\n        />\r\n      </a>\r\n    </g>\r\n\r\n    <g id=\"Pin_Facility_East_Terrace\">\r\n      <a\r\n        class=\"far fa-lab16\"\r\n        title=\"CC CCE East Terrace Modular\"\r\n        href=\"CC-CCE-NCI_Main.aspx\"\r\n      >\r\n        <path\r\n          class=\"st3\"\r\n          d=\"M6194.4,2401.8c95,95,237,114.3,351.1,58l359.3,221.4-220.4-360.5c56.2-114.1,36.9-255.9-58.1-350.8-119.2-119.3-312.6-119.3-431.9,0S6075.1,2282.6,6194.4,2401.8Zm353.5-353.5a194.5,194.5,0,0,1,0,275.1c-76,75.9-199.1,75.9-275.1,0s-75.9-199.1,0-275.1S6471.9,1972.4,6547.9,2048.3Z\"\r\n          style=\"\r\n            fill-opacity: 0.25;\r\n            stroke: #000;\r\n            stroke-linecap: round;\r\n            stroke-linejoin: round;\r\n          \"\r\n        />\r\n\r\n        <circle\r\n          id=\"CC_Pharmacy_East_Terrace\"\r\n          runat=\"server\"\r\n          class=\"st1\"\r\n          cx=\"6410.4\"\r\n          cy=\"2185.9\"\r\n          r=\"194.5\"\r\n        />\r\n      </a>\r\n    </g>\r\n\r\n    <g id=\"Pin_Facility_I_IVAU\">\r\n      <a\r\n        href=\"I-IVAU_Main.aspx\"\r\n        class=\"far fa-ivau\"\r\n        data-toggle=\"tooltip\"\r\n        title=\"CC Pharmacy I-IVAU\"\r\n      >\r\n        <path\r\n          class=\"st3\"\r\n          d=\"M5417.6,2970c-95,95-114.2,237-57.9,351.1l-221.4,359.3L5498.8,3460c114.1,56.2,255.9,36.9,350.8-58.1,119.3-119.2,119.3-312.6,0-431.9S5536.9,2850.7,5417.6,2970Zm353.6,353.5c-76,76-199.2,76-275.1,0a194.5,194.5,0,0,1,0-275.1c75.9-75.9,199.1-75.9,275.1,0S5847.1,3247.5,5771.2,3323.5Z\"\r\n          style=\"\r\n            fill-opacity: 0.25;\r\n            stroke: #000;\r\n            stroke-linecap: round;\r\n            stroke-linejoin: round;\r\n          \"\r\n        />\r\n        <circle\r\n          id=\"CCE_Facility_I_IVAU\"\r\n          runat=\"server\"\r\n          class=\"st1\"\r\n          cx=\"5633.6\"\r\n          cy=\"3186\"\r\n          r=\"194.5\"\r\n        />\r\n      </a>\r\n    </g>\r\n\r\n    <g id=\"Pin_Facility_2E\">\r\n      <a\r\n        class=\"far fa-lab13\"\r\n        title=\"CC CCE 12 East Cell Therapy\"\r\n        href=\"CC-CCE-12E_Main.aspx\"\r\n      >\r\n        <path\r\n          class=\"st3\"\r\n          d=\"M6124.81 4647.94c-95-95-236.99-114.25-351.13-57.93l-359.26-221.41 220.34 360.5c-56.13 114.09-36.82 255.89 58.09 350.8 119.28 119.28 312.68 119.28 431.96 0 119.29-119.28 119.29-312.68 0-431.96zm-353.51 353.51c-75.96-75.96-75.96-199.11 0-275.06 75.96-75.96 199.11-75.96 275.06 0 75.96 75.96 75.96 199.11 0 275.06-75.95 75.96-199.1 75.96-275.06 0z\"\r\n        />\r\n        <circle\r\n          id=\"CC_Pharmacy_2E\"\r\n          runat=\"server\"\r\n          class=\"st1\"\r\n          cx=\"5908.83\"\r\n          cy=\"4863.92\"\r\n          r=\"194.5\"\r\n        />\r\n      </a>\r\n    </g>\r\n\r\n    <g id=\"Pin_Facility_HPC13\">\r\n      <a\r\n        class=\"far fa-lab7\"\r\n        href=\"NCY_Hyperpolarized_C13_Main.aspx\"\r\n        title=\"NCI Hyperpolarized Cell Labeling Lab\"\r\n      >\r\n        <path\r\n          class=\"st3\"\r\n          d=\"M6568.1 6441.99c-95-95-236.99-114.25-351.13-57.93l-359.26-221.41 220.34 360.5c-56.13 114.09-36.82 255.89 58.09 350.8 119.28 119.28 312.68 119.28 431.96 0s119.28-312.67 0-431.96zm-353.52 353.52c-75.96-75.96-75.96-199.11 0-275.06 75.96-75.96 199.11-75.96 275.06 0s75.96 199.11 0 275.06-199.1 75.95-275.06 0z\"\r\n        />\r\n        <circle\r\n          id=\"CC_Other_HP13\"\r\n          runat=\"server\"\r\n          class=\"st1\"\r\n          cx=\"6351.75\"\r\n          cy=\"6657.98\"\r\n          r=\"194.5\"\r\n        />\r\n      </a>\r\n    </g>\r\n\r\n    <g id=\"Ownership_Facility_Other\">\r\n      <a\r\n        class=\"far fa-labOne\"\r\n        title=\"NCI Surgery Branch TIL Modular Facility\"\r\n        href=\"NCI-Mod_Main.aspx\"\r\n      >\r\n        <path\r\n          class=\"st3\"\r\n          d=\"M3639.09 8304.34c-95-95-236.99-114.25-351.13-57.93L2928.7 8025l220.34 360.5c-56.13 114.09-36.82 255.89 58.09 350.8 119.28 119.28 312.68 119.28 431.96 0 119.28-119.28 119.28-312.67 0-431.96zm-353.51 353.52c-75.96-75.96-75.96-199.11 0-275.07s199.11-75.96 275.06 0c75.96 75.96 75.96 199.11 0 275.06s-199.11 75.96-275.06.01z\"\r\n        />\r\n        <circle\r\n          id=\"CC_Other_T_30\"\r\n          runat=\"server\"\r\n          class=\"st1\"\r\n          cx=\"3423.11\"\r\n          cy=\"8520.32\"\r\n          r=\"194.5\"\r\n        />\r\n      </a>\r\n    </g>\r\n\r\n    <g id=\"Ownership_Facility_NIAID\">\r\n      <a\r\n        class=\"far fa-lab2\"\r\n        href=\"NIAID_29B_Bio_Facility_Main.aspx\"\r\n        title=\"NIAID 29B Bioreactor Pilot Plant\"\r\n      >\r\n        <path\r\n          class=\"st3\"\r\n          d=\"M1180.85 10244.69c-95 95-114.25 236.99-57.93 351.13l-221.41 359.26 360.5-220.34c114.09 56.13 255.89 36.82 350.8-58.09 119.28-119.28 119.28-312.68 0-431.96-119.28-119.28-312.68-119.28-431.96 0zm353.51 353.51c-75.96 75.96-199.11 75.96-275.06 0-75.96-75.96-75.96-199.11 0-275.06 75.96-75.96 199.11-75.96 275.06 0 75.96 75.96 75.96 199.11 0 275.06z\"\r\n        />\r\n        <circle\r\n          id=\"NIAID_29B\"\r\n          runat=\"server\"\r\n          cx=\"1396.83\"\r\n          cy=\"10460.67\"\r\n          r=\"194.5\"\r\n          class=\"st1\"\r\n          stroke=\"#000\"\r\n          stroke-miterlimit=\"10\"\r\n        />\r\n      </a>\r\n    </g>\r\n\r\n    <g id=\"Pin_Facility_1B42\">\r\n      <a\r\n        class=\"far fa-lab11\"\r\n        href=\"NCI-1B42_Main.aspx\"\r\n        title=\"NCI Surgery Branch 1B42\"\r\n      >\r\n        <path\r\n          class=\"st3\"\r\n          d=\"M5071.5 5836.78c95-95 114.25-236.99 57.93-351.13l221.41-359.26-360.5 220.34c-114.09-56.13-255.89-36.82-350.8 58.09-119.28 119.28-119.28 312.68 0 431.96 119.28 119.28 312.68 119.28 431.96 0zm-353.51-353.52c75.96-75.96 199.11-75.96 275.06 0 75.96 75.96 75.96 199.11 0 275.06-75.96 75.96-199.11 75.96-275.06 0s-75.96-199.1 0-275.06z\"\r\n        />\r\n        <circle\r\n          id=\"CC_Other_HP13_1b42\"\r\n          runat=\"server\"\r\n          class=\"st1\"\r\n          cx=\"4855.52\"\r\n          cy=\"5620.79\"\r\n          r=\"194.5\"\r\n        />\r\n      </a>\r\n    </g>\r\n\r\n    <g id=\"Pin_Facility_DLM_Image\">\r\n      <a\r\n        class=\"far fa-lab14\"\r\n        href=\"CC-DLM-Lab_Main.aspx\"\r\n        title=\"CC DLM Sterility Lab\"\r\n      >\r\n        <path\r\n          class=\"st3\"\r\n          d=\"M3738.65 4701.06c95-95 114.25-236.99 57.93-351.13l221.41-359.26-360.5 220.34c-114.09-56.13-255.89-36.82-350.8 58.09-119.28 119.28-119.28 312.68 0 431.96 119.28 119.29 312.68 119.29 431.96 0zm-353.51-353.51c75.96-75.96 199.11-75.96 275.06 0 75.96 75.96 75.96 199.11 0 275.06-75.96 75.96-199.11 75.96-275.06 0-75.96-75.95-75.96-199.11 0-275.06z\"\r\n        />\r\n        <circle\r\n          id=\"NCI_Facility_DLM_Image\"\r\n          runat=\"server\"\r\n          class=\"st1\"\r\n          cx=\"3522.67\"\r\n          cy=\"4485.08\"\r\n          r=\"194.5\"\r\n        />\r\n      </a>\r\n    </g>\r\n\r\n    <g id=\"Pin_Facility_PET_Radiopharm\">\r\n      <a\r\n        class=\"far fa-lab9\"\r\n        href=\"B1-PET_Main.aspx\"\r\n        title=\"CC PET Radiopharmacy\"\r\n      >\r\n        <path\r\n          class=\"st3\"\r\n          d=\"M2262.85 2113.21c95 95 236.99 114.25 351.13 57.93l359.26 221.41-220.34-360.5c56.13-114.09 36.82-255.89-58.09-350.8-119.28-119.28-312.68-119.28-431.96 0-119.28 119.28-119.28 312.68 0 431.96zm353.52-353.51c75.96 75.96 75.96 199.11 0 275.06s-199.11 75.96-275.06 0c-75.96-75.96-75.96-199.11 0-275.06 75.95-75.96 199.1-75.96 275.06 0z\"\r\n        />\r\n        <circle\r\n          id=\"NCI_Facility_PET_Radiopharm\"\r\n          runat=\"server\"\r\n          class=\"st1\"\r\n          cx=\"2478.84\"\r\n          cy=\"1897.23\"\r\n          r=\"194.5\"\r\n        />\r\n      </a>\r\n    </g>\r\n  </g>\r\n</svg>\r\n"
        },
        {
            "name": "ApfPortfolioMapComponent",
            "id": "component-ApfPortfolioMapComponent-41fd16890a4be987493d1fa6b75c27ad65d873beeea000f7ede7a0cd534134ca8f4bb33e3f3ace55af837522b23f0cebb3da40a42ddced9cc37affa29d86712c",
            "file": "src/app/apf-portfolio-all-map/apf-portfolio-all-map.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-apf-portfolio-all-map",
            "styleUrls": [
                "./apf-portfolio-all-map.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./apf-portfolio-all-map.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "tooltips",
                    "defaultValue": "{}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 28
                }
            ],
            "methodsClass": [
                {
                    "name": "mouseout",
                    "args": [
                        {
                            "name": "facilityId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 62,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "facilityId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "mouseover",
                    "args": [
                        {
                            "name": "facilityId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 58,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "facilityId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "pinClick",
                    "args": [
                        {
                            "name": "facilityId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 48,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "facilityId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\r\n  AfterViewInit,\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  OnChanges,\r\n  OnInit,\r\n  Output\r\n} from '@angular/core';\r\n\r\nimport { Router } from '@angular/router';\r\n\r\ndeclare const bootstrap: any;\r\ndeclare const $: any;\r\n\r\n@Component({\r\n  selector: 'app-apf-portfolio-all-map',\r\n  templateUrl: './apf-portfolio-all-map.component.html',\r\n  styleUrls: ['./apf-portfolio-all-map.component.scss']\r\n})\r\nexport class ApfPortfolioMapComponent implements OnInit, AfterViewInit {\r\n  constructor(private router: Router) {}\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n\r\n  tooltips: {[title: string]: any} = {};\r\n\r\n  ngAfterViewInit(): void {\r\n    let pinElems = document.querySelectorAll('#Pins_Ownership a');\r\n    pinElems.forEach((elem) => {\r\n      const title = elem.getAttribute('data-title')!;\r\n      // (elem as any).tooltip({\r\n      //   placement: 'right',\r\n      //   html: true,\r\n      //   title: '<div>' + title + '</div>'\r\n      // });\r\n      this.tooltips[title] = new bootstrap.Tooltip(elem, {\r\n        placement: 'right',\r\n        trigger:'hover',\r\n        html: true,\r\n        title: '<div>' + title + '</div>'\r\n      });\r\n    });\r\n  }\r\n  \r\n  pinClick(facilityId:number) {\r\n    console.log(\"facility: \" + facilityId);\r\n    const elem = document.getElementById(`pin_${facilityId}`)!;\r\n    const title = elem.getAttribute('data-title')!;\r\n    this.tooltips[title].hide();\r\n    // new bootstrap.Tooltip(elem).hide()\r\n    //$('#pin_' + facilityId).tooltip('hide')\r\n    this.router.navigate(['home','facility',facilityId])\r\n  }\r\n\r\n  mouseover(facilityId:number) {\r\n    \r\n  }\r\n\r\n  mouseout(facilityId:number) {\r\n    \r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "svg {\r\n  background-image: url(../../assets/images/APF-Portfolio_RevisedvMM.svg);\r\n  background-size: 100% 100%;\r\n  background-repeat: no-repeat;\r\n  max-width: 900px;\r\n  width: 90%;\r\n}\r\n\r\npath {\r\n  fill: transparent;\r\n  cursor: pointer;\r\n  transition: fill 0.2s;\r\n}\r\na:hover {\r\n  cursor: pointer;\r\n}\r\n/*test with new svg*/\r\n/*CCE Facility = brown*/\r\nsvg #Pin_Facility_2J a:hover path {\r\n  fill: rgb(180, 107, 23);\r\n}\r\n\r\nsvg #Pin_Facility_2E a:hover path {\r\n  fill: rgb(180, 107, 23);\r\n}\r\n\r\nsvg #Pin_Facility_3E a:hover path {\r\n  fill: rgb(180, 107, 23);\r\n}\r\n\r\nsvg #Pin_Facility_East_Terrace a:hover path {\r\n  fill: rgb(180, 107, 23);\r\n}\r\n\r\n/*CC Pharmacy Facility = green*/\r\nsvg #Pin_Facility_I-IVAU a:hover path {\r\n  fill: #b5fd19;\r\n}\r\n\r\nsvg #Pin_Facility_P-IVAU a:hover path {\r\n  fill: #b5fd19;\r\n}\r\n\r\n/*CC Other Facilities = fuchsia*/\r\nsvg #Pin_Facility_DLM_Image a:hover path {\r\n  fill: #fb09bf;\r\n}\r\n\r\nsvg #Pin_Facility_NMD a:hover path {\r\n  fill: #fb09bf;\r\n}\r\n\r\nsvg #Pin_Facility_PET_B3 a:hover path {\r\n  fill: #fb09bf;\r\n}\r\n\r\nsvg #Pin_Facility_PET_Radiopharm a:hover path {\r\n  fill: #fb09bf;\r\n}\r\n\r\n/*NCI Facility = blue*/\r\nsvg #Ownership_Facility_Other a:hover path {\r\n  fill: #0ff;\r\n}\r\n\r\nsvg #Pin_Facility_HPC13 a:hover path {\r\n  /*lab 7*/\r\n  fill: #0ff;\r\n}\r\n\r\nsvg #Pin_Facility_1B42 a:hover path {\r\n  fill: #0ff;\r\n}\r\n\r\nsvg #Pin_Facility_10A a:hover path {\r\n  fill: #0ff;\r\n}\r\n\r\nsvg #Pin_Facility_10B a:hover path {\r\n  fill: #0ff;\r\n}\r\n\r\n/*NIAID Facility = red*/\r\nsvg #Ownership_Facility_NIAID a:hover path {\r\n  /*lab 2*/\r\n  fill: #c9363c;\r\n}\r\n\r\n.st1 {\r\n  fill: #e1e1e1;\r\n}\r\n\r\n.st2 {\r\n  fill: #fbb03b;\r\n}\r\n\r\n.st3 {\r\n  fill-opacity: 0.25;\r\n  stroke: #000;\r\n  stroke-linecap: round;\r\n  stroke-linejoin: round;\r\n}\r\n\r\n.st4 {\r\n  fill: #94762d;\r\n}\r\n\r\n.st5 {\r\n  fill: #0ff;\r\n}\r\n\r\n.st6 {\r\n  fill: #fb09bf;\r\n}\r\n\r\n.st7 {\r\n  fill: #b5fd19;\r\n}\r\n\r\n.st9 {\r\n  fill: none;\r\n}\r\n\r\n.st10 {\r\n  fill: #676767;\r\n}\r\n\r\n.st11 {\r\n  font-family: Calibri;\r\n}\r\n\r\n.st12 {\r\n  font-size: 320.8324px;\r\n}\r\n\r\n.st14 {\r\n  font-size: 213.8883px;\r\n}\r\n",
                    "styleUrl": "./apf-portfolio-all-map.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 21,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "AfterViewInit"
            ],
            "templateData": "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 7613 11828.29\">\r\n  <g id=\"Pins_Ownership\">\r\n    <g id=\"Pin_Facility_2J\">\r\n      <a\r\n        class=\"far fa-lab3\"\r\n        data-toggle=\"tooltip\"\r\n        id=\"pin_3\"\r\n        data-title=\"CC CCE 2J Cell Therapy Lab\"\r\n        data-title=\"CC CCE 2J Cell Therapy Lab\"\r\n        (click)=\"pinClick(3)\"\r\n      >\r\n        <path\r\n          class=\"st3\"\r\n          d=\"M2551.84 3649.85c-95 95-114.25 236.99-57.93 351.13l-221.41 359.26L2633 4139.9c114.09 56.13 255.89 36.82 350.8-58.09 119.28-119.28 119.28-312.68 0-431.96-119.28-119.28-312.68-119.28-431.96 0zm353.51 353.52c-75.96 75.96-199.11 75.96-275.06 0s-75.96-199.11 0-275.06 199.11-75.96 275.06 0 75.96 199.1 0 275.06z\"\r\n        />\r\n        <circle\r\n          id=\"CC_Pharmacy_2J\"\r\n          class=\"st4\"\r\n          cx=\"2767.82\"\r\n          cy=\"3865.84\"\r\n          r=\"194.5\"\r\n        />\r\n      </a>\r\n    </g>\r\n\r\n    <g id=\"Pin_Facility_3E\">\r\n      <a id=\"pin_16\"\r\n        class=\"far fa-lab4\"\r\n        data-toggle=\"tooltip\"\r\n        data-title=\"CC CCE 3T Cell Therapy Lab\"\r\n        (click)=\"pinClick(16)\"\r\n      >\r\n        <path\r\n          class=\"st3\"\r\n          d=\"M1677.88 3589.51c-95 95-114.25 236.99-57.93 351.13l-221.41 359.26 360.5-220.34c114.09 56.13 255.89 36.82 350.8-58.09 119.28-119.28 119.28-312.68 0-431.96-119.28-119.28-312.68-119.28-431.96 0zm353.51 353.52c-75.96 75.96-199.11 75.96-275.06 0-75.96-75.96-75.96-199.11 0-275.06 75.96-75.96 199.11-75.96 275.06 0s75.96 199.1 0 275.06z\"\r\n        />\r\n        <circle\r\n          id=\"CC_Pharmacy_3E\"\r\n          class=\"st4\"\r\n          cx=\"1893.86\"\r\n          cy=\"3805.5\"\r\n          r=\"194.5\"\r\n        />\r\n      </a>\r\n    </g>\r\n\r\n    <g id=\"Pin_Facility_10A\">\r\n      <a id=\"pin_13\" class=\"far fa-lab6\" data-title=\"NCI Trailer 10A\" (click)=\"pinClick(13)\">\r\n        <path\r\n          class=\"st3\"\r\n          d=\"M1568.89 3340.55c95-95 114.25-236.99 57.93-351.13l221.41-359.26-360.5 220.34c-114.09-56.13-255.89-36.82-350.8 58.09-119.28 119.28-119.28 312.68 0 431.96 119.28 119.28 312.68 119.28 431.96 0zm-353.51-353.52c75.96-75.96 199.11-75.96 275.06 0 75.96 75.96 75.96 199.11 0 275.06-75.96 75.96-199.11 75.96-275.06 0-75.96-75.95-75.96-199.1 0-275.06z\"\r\n        />\r\n        <circle\r\n          id=\"CC_Other_10A\"\r\n          class=\"st5\"\r\n          cx=\"1352.91\"\r\n          cy=\"3124.57\"\r\n          r=\"194.5\"\r\n        />\r\n      </a>\r\n    </g>\r\n\r\n    <g id=\"Pin_Facility_10B\">\r\n      <a\r\n        id=\"pin_12\"\r\n        class=\"far fa-lab5\"\r\n        data-title=\"NCI Trailer 10B\"\r\n        (click)=\"pinClick(12)\"\r\n      >\r\n        <path\r\n          class=\"st3\"\r\n          d=\"M1132.54 2073.69c95 95 236.99 114.25 351.13 57.93l359.26 221.41-220.34-360.5c56.13-114.09 36.82-255.89-58.09-350.8-119.28-119.28-312.68-119.28-431.96 0-119.28 119.28-119.28 312.68 0 431.96zm353.52-353.52c75.96 75.96 75.96 199.11 0 275.06-75.96 75.96-199.11 75.96-275.06 0-75.96-75.96-75.96-199.11 0-275.06 75.95-75.95 199.1-75.95 275.06 0z\"\r\n        />\r\n        <circle\r\n          id=\"CC_Other_10B\"\r\n          class=\"st5\"\r\n          cx=\"1348.52\"\r\n          cy=\"1857.71\"\r\n          r=\"194.5\"\r\n        />\r\n      </a>\r\n    </g>\r\n\r\n    <g id=\"Pin_Facility_PET_B3\">\r\n      <a id=\"pin_2\"\r\n        class=\"far fa-lab8\"\r\n        data-title=\"CC PET B3 Radiochemistry\"\r\n        (click)=\"pinClick(2)\"\r\n      >\r\n        <path\r\n          class=\"st3\"\r\n          d=\"M3349.62 1581.68c-95 95-114.25 236.99-57.93 351.13l-221.41 359.26 360.5-220.34c114.09 56.13 255.89 36.82 350.8-58.09 119.28-119.28 119.28-312.68 0-431.96-119.28-119.28-312.67-119.28-431.96 0zm353.52 353.52c-75.96 75.96-199.11 75.96-275.06 0-75.96-75.96-75.96-199.11 0-275.06 75.96-75.96 199.11-75.96 275.06 0 75.95 75.95 75.95 199.1 0 275.06z\"\r\n        />\r\n        <circle\r\n          id=\"NCI_Facility_PET_B3\"\r\n          class=\"st6\"\r\n          cx=\"3565.61\"\r\n          cy=\"1797.67\"\r\n          r=\"194.5\"\r\n        />\r\n      </a>\r\n    </g>\r\n\r\n    <g id=\"Pin_Facility_NMD\">\r\n      <a id=\"pin_7\"\r\n        class=\"far fa-labten\"\r\n        data-title=\"CC NMD Radiopharmacy\"\r\n        (click)=\"pinClick(7)\"\r\n      >\r\n        <path\r\n          class=\"st3\"\r\n          d=\"M3556.34 3388.81c0-134.35-86.79-248.37-207.33-289.25l-97.48-410.6-99.11 410.72c-120.36 40.98-206.98 154.9-206.98 289.13 0 168.69 136.75 305.45 305.45 305.45 168.7-.01 305.45-136.76 305.45-305.45zm-499.94 0c0-107.42 87.08-194.5 194.5-194.5s194.5 87.08 194.5 194.5-87.08 194.5-194.5 194.5-194.5-87.08-194.5-194.5z\"\r\n        />\r\n        <circle\r\n          id=\"NCI_Facility_NMD\"\r\n          class=\"st6\"\r\n          cx=\"3250.9\"\r\n          cy=\"3388.81\"\r\n          r=\"194.5\"\r\n        />\r\n      </a>\r\n    </g>\r\n\r\n    <g id=\"Pin_Facility_P-IVAU\">\r\n      <a id=\"pin_9\"\r\n        class=\"far fa-lab15\"\r\n        data-title=\"CC Pharmacy P-IVAU\"\r\n        (click)=\"pinClick(9)\" >\r\n        <path\r\n          class=\"st3\"\r\n          d=\"M6028.59 1181.75c-95 95-114.25 236.99-57.93 351.13l-221.41 359.26 360.5-220.34c114.09 56.13 255.89 36.82 350.8-58.09 119.28-119.28 119.28-312.68 0-431.96-119.28-119.28-312.67-119.28-431.96 0zm353.52 353.52c-75.96 75.96-199.11 75.96-275.06 0-75.96-75.96-75.96-199.11 0-275.06 75.96-75.96 199.11-75.96 275.06 0s75.95 199.1 0 275.06z\"\r\n        />\r\n        <circle\r\n          id=\"CCE_Facility_P-IVAU\"\r\n          class=\"st7\"\r\n          cx=\"6244.57\"\r\n          cy=\"1397.74\"\r\n          r=\"194.5\"\r\n        />\r\n      </a>\r\n    </g>\r\n\r\n    <g id=\"Pin_Facility_East_Terrace\">\r\n      <a id=\"pin_5\"\r\n        class=\"far fa-lab16\"\r\n        data-title=\"CC CCE East Terrace Modular\"\r\n        (click)=\"pinClick(5)\"\r\n      >\r\n        <path\r\n          class=\"st3\"\r\n          d=\"M5879.99 3036.92c134.35 0 248.37-86.78 289.25-207.33l410.6-97.48-410.72-99.11c-40.98-120.36-154.9-206.98-289.13-206.98-168.69 0-305.44 136.75-305.45 305.44 0 168.71 136.75 305.46 305.45 305.46zm0-499.95c107.42 0 194.5 87.08 194.5 194.5s-87.08 194.5-194.5 194.5-194.5-87.08-194.5-194.5 87.08-194.5 194.5-194.5z\"\r\n        />\r\n        <circle\r\n          id=\"CC_Pharmacy_East_Terrace\"\r\n          class=\"st4\"\r\n          cx=\"5879.99\"\r\n          cy=\"2731.47\"\r\n          r=\"194.5\"\r\n        />\r\n      </a>\r\n    </g>\r\n\r\n    <g id=\"Pin_Facility_I-IVAU\">\r\n      <a id=\"pin_8\"\r\n        class=\"far fa-ivau\"\r\n        data-toggle=\"tooltip\"\r\n        data-title=\"CC Pharmacy I-IVAU\"\r\n        (click)=\"pinClick(8)\"\r\n      >\r\n        <path\r\n          class=\"st3\"\r\n          d=\"M6046.3 3552.46c-134.36 0-248.37 86.78-289.25 207.32l-410.6 97.48 410.72 99.11c40.98 120.36 154.9 206.98 289.13 206.98 168.69 0 305.45-136.75 305.45-305.45 0-168.68-136.76-305.44-305.45-305.44zm0 499.95c-107.42 0-194.5-87.08-194.5-194.5s87.08-194.5 194.5-194.5 194.5 87.08 194.5 194.5-87.08 194.5-194.5 194.5z\"\r\n        />\r\n        <circle\r\n          id=\"CCE_Facility_I-VAU\"\r\n          class=\"st7\"\r\n          cx=\"6046.3\"\r\n          cy=\"3857.91\"\r\n          r=\"194.5\"\r\n        />\r\n      </a>\r\n    </g>\r\n\r\n    <g id=\"Pin_Facility_2E\">\r\n      <a id=\"pin_4\"\r\n        class=\"far fa-lab13\"\r\n        data-title=\"CC CCE 12 East Cell Therapy\"\r\n        (click)=\"pinClick(4)\"\r\n      >\r\n        <path\r\n          class=\"st3\"\r\n          d=\"M6124.81 4647.94c-95-95-236.99-114.25-351.13-57.93l-359.26-221.41 220.34 360.5c-56.13 114.09-36.82 255.89 58.09 350.8 119.28 119.28 312.68 119.28 431.96 0 119.29-119.28 119.29-312.68 0-431.96zm-353.51 353.51c-75.96-75.96-75.96-199.11 0-275.06 75.96-75.96 199.11-75.96 275.06 0 75.96 75.96 75.96 199.11 0 275.06-75.95 75.96-199.1 75.96-275.06 0z\"\r\n        />\r\n        <circle\r\n          id=\"CC_Pharmacy_2E\"\r\n          class=\"st4\"\r\n          cx=\"5908.83\"\r\n          cy=\"4863.92\"\r\n          r=\"194.5\"\r\n        />\r\n      </a>\r\n    </g>\r\n\r\n    <g id=\"Pin_Facility_HPC13\">\r\n      <a id=\"pin_19\"\r\n        class=\"far fa-lab7\"\r\n        data-title=\"NCI Hyperpolarized Cell Labeling Lab\"\r\n        (click)=\"pinClick(19)\"\r\n      >\r\n        <path\r\n          class=\"st3\"\r\n          d=\"M6568.1 6441.99c-95-95-236.99-114.25-351.13-57.93l-359.26-221.41 220.34 360.5c-56.13 114.09-36.82 255.89 58.09 350.8 119.28 119.28 312.68 119.28 431.96 0s119.28-312.67 0-431.96zm-353.52 353.52c-75.96-75.96-75.96-199.11 0-275.06 75.96-75.96 199.11-75.96 275.06 0s75.96 199.11 0 275.06-199.1 75.95-275.06 0z\"\r\n        />\r\n        <circle\r\n          id=\"CC_Other_HP13\"\r\n          class=\"st5\"\r\n          cx=\"6351.75\"\r\n          cy=\"6657.98\"\r\n          r=\"194.5\"\r\n        />\r\n      </a>\r\n    </g>\r\n\r\n    <g id=\"Ownership_Facility_Other\">\r\n      <a id=\"pin_11\"\r\n        class=\"far fa-labOne\"\r\n        data-title=\"NCI Surgery Branch TIL Modular\"\r\n        (click)=\"pinClick(11)\"\r\n      >\r\n        <path\r\n          class=\"st3\"\r\n          d=\"M3639.09 8304.34c-95-95-236.99-114.25-351.13-57.93L2928.7 8025l220.34 360.5c-56.13 114.09-36.82 255.89 58.09 350.8 119.28 119.28 312.68 119.28 431.96 0 119.28-119.28 119.28-312.67 0-431.96zm-353.51 353.52c-75.96-75.96-75.96-199.11 0-275.07s199.11-75.96 275.06 0c75.96 75.96 75.96 199.11 0 275.06s-199.11 75.96-275.06.01z\"\r\n        />\r\n        <circle\r\n          id=\"CC_Other_T_30\"\r\n          class=\"st5\"\r\n          cx=\"3423.11\"\r\n          cy=\"8520.32\"\r\n          r=\"194.5\"\r\n        />\r\n      </a>\r\n    </g>\r\n\r\n    <g id=\"Ownership_Facility_NIAID\">\r\n      <a id=\"pin_20\"\r\n        class=\"far fa-lab2\"\r\n        data-title=\"NIAID 29B Bioreactor Pilot Plant\"\r\n        (click)=\"pinClick(20)\"\r\n      >\r\n        <path\r\n          class=\"st3\"\r\n          d=\"M1180.85 10244.69c-95 95-114.25 236.99-57.93 351.13l-221.41 359.26 360.5-220.34c114.09 56.13 255.89 36.82 350.8-58.09 119.28-119.28 119.28-312.68 0-431.96-119.28-119.28-312.68-119.28-431.96 0zm353.51 353.51c-75.96 75.96-199.11 75.96-275.06 0-75.96-75.96-75.96-199.11 0-275.06 75.96-75.96 199.11-75.96 275.06 0 75.96 75.96 75.96 199.11 0 275.06z\"\r\n        />\r\n        <circle\r\n          cx=\"1396.83\"\r\n          cy=\"10460.67\"\r\n          r=\"194.5\"\r\n          fill=\"#c9363c\"\r\n          stroke=\"#000\"\r\n          stroke-miterlimit=\"10\"\r\n        />\r\n      </a>\r\n    </g>\r\n\r\n    <g id=\"Pin_Facility_1B42\">\r\n      <a id=\"pin_10\"\r\n        class=\"far fa-lab11\"\r\n        data-title=\"NCI Surgery Branch 1B42\"\r\n        (click)=\"pinClick(10)\"\r\n      >\r\n        <path\r\n          class=\"st3\"\r\n          d=\"M5071.5 5836.78c95-95 114.25-236.99 57.93-351.13l221.41-359.26-360.5 220.34c-114.09-56.13-255.89-36.82-350.8 58.09-119.28 119.28-119.28 312.68 0 431.96 119.28 119.28 312.68 119.28 431.96 0zm-353.51-353.52c75.96-75.96 199.11-75.96 275.06 0 75.96 75.96 75.96 199.11 0 275.06-75.96 75.96-199.11 75.96-275.06 0s-75.96-199.1 0-275.06z\"\r\n        />\r\n        <circle\r\n          id=\"CC_Other_HP13_1b42\"\r\n          class=\"st5\"\r\n          cx=\"4855.52\"\r\n          cy=\"5620.79\"\r\n          r=\"194.5\"\r\n        />\r\n      </a>\r\n    </g>\r\n\r\n    <g id=\"Pin_Facility_DLM_Image\">\r\n      <a id=\"pin_6\"\r\n        class=\"far fa-lab14\"\r\n        data-title=\"CC DLM Sterility Lab\"\r\n        (click)=\"pinClick(6)\"\r\n      >\r\n        <path\r\n          class=\"st3\"\r\n          d=\"M3738.65 4701.06c95-95 114.25-236.99 57.93-351.13l221.41-359.26-360.5 220.34c-114.09-56.13-255.89-36.82-350.8 58.09-119.28 119.28-119.28 312.68 0 431.96 119.28 119.29 312.68 119.29 431.96 0zm-353.51-353.51c75.96-75.96 199.11-75.96 275.06 0 75.96 75.96 75.96 199.11 0 275.06-75.96 75.96-199.11 75.96-275.06 0-75.96-75.95-75.96-199.11 0-275.06z\"\r\n        />\r\n        <circle\r\n          id=\"NCI_Facility_DLM_Image\"\r\n          class=\"st6\"\r\n          cx=\"3522.67\"\r\n          cy=\"4485.08\"\r\n          r=\"194.5\"\r\n        />\r\n      </a>\r\n    </g>\r\n\r\n    <g id=\"Pin_Facility_PET_Radiopharm\">\r\n      <a id=\"pin_1\"\r\n        class=\"far fa-lab9\"\r\n        data-title=\"CC PET Radiopharmacy\"\r\n        (click)=\"pinClick(1)\"\r\n      >\r\n        <path\r\n          class=\"st3\"\r\n          d=\"M2262.85 2113.21c95 95 236.99 114.25 351.13 57.93l359.26 221.41-220.34-360.5c56.13-114.09 36.82-255.89-58.09-350.8-119.28-119.28-312.68-119.28-431.96 0-119.28 119.28-119.28 312.68 0 431.96zm353.52-353.51c75.96 75.96 75.96 199.11 0 275.06s-199.11 75.96-275.06 0c-75.96-75.96-75.96-199.11 0-275.06 75.95-75.96 199.1-75.96 275.06 0z\"\r\n        />\r\n        <circle\r\n          id=\"NCI_Facility_PET_Radiopharm\"\r\n          class=\"st6\"\r\n          cx=\"2478.84\"\r\n          cy=\"1897.23\"\r\n          r=\"194.5\"\r\n        />\r\n      </a>\r\n    </g>\r\n  </g>\r\n</svg>\r\n"
        },
        {
            "name": "ApfTimelineChartComponent",
            "id": "component-ApfTimelineChartComponent-30f898ebfd5704fdcfb21eb3774d099c842596f7d613b73e395d3b364fb7923950e0a86f89e80814c743b70188c474083b483d261f8c1a706eac33397a48d008",
            "file": "src/app/apf-timeline-chart/apf-timeline-chart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-apf-timeline-chart",
            "styleUrls": [
                "./apf-timeline-chart.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./apf-timeline-chart.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "chartData",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "TimelineChartData",
                    "decorators": []
                },
                {
                    "name": "highlightedLabel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 69,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "isLoading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 85,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "chartLabelClick",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 88,
                    "type": "EventEmitter"
                },
                {
                    "name": "chartLabelMouseOut",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 94,
                    "type": "EventEmitter"
                },
                {
                    "name": "chartLabelMouseOver",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 91,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "_highlightedLabel",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 67,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_timelineChartData",
                    "defaultValue": "{\r\n    points: [],\r\n    locations: {},\r\n    locationType: 'facility'\r\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TimelineChartData",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "chartType",
                    "defaultValue": "ChartType.Timeline",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 96
                },
                {
                    "name": "columnNames",
                    "defaultValue": "[\r\n    { type: 'string', id: 'ChillerName' },\r\n    {\r\n      type: 'string',\r\n      id: 'ChillerNameTooltip',\r\n      role: 'tooltip',\r\n      p: { html: true }\r\n    },\r\n    { type: 'string', id: 'ChillerStatus' },\r\n    { type: 'string', role: 'style' },\r\n    { type: 'date', id: 'StartTime' },\r\n    { type: 'date', id: 'EndTime' }\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 98
                },
                {
                    "name": "locationLookup",
                    "defaultValue": "{}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "options",
                    "defaultValue": "{\r\n    timeline: { showBarLabels: false, colorByRowLabel: true },\r\n    backgroundColor: '#ebe9e6',\r\n    tooltip: { isHtml: true },\r\n    focusTarget: 'category',\r\n    height: '600px'\r\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 112
                },
                {
                    "name": "timelineData",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": false,
                    "description": "",
                    "line": 16
                }
            ],
            "methodsClass": [
                {
                    "name": "chartReady",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 167,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "handleLabelMouseOut",
                    "args": [
                        {
                            "name": "locationId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 246,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "locationId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleLabelMouseOver",
                    "args": [
                        {
                            "name": "locationId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 233,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "locationId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "roomLabelTooltip",
                    "args": [
                        {
                            "name": "room",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 131,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "room",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "roomLabelTooltipDP",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 120,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "scrollIntoView",
                    "args": [
                        {
                            "name": "locationId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 229,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "locationId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, Output } from '@angular/core';\r\n\r\nimport { ChartType } from 'angular-google-charts';\r\nimport { TimelineChartData } from '../apf-portfolio-ic-dashboard/apf-portfolio-ic-dashboard.service';\r\n\r\ndeclare const bootstrap: any;\r\n\r\n@Component({\r\n  selector: 'app-apf-timeline-chart',\r\n  templateUrl: './apf-timeline-chart.component.html',\r\n  styleUrls: ['./apf-timeline-chart.component.scss']\r\n})\r\nexport class ApfTimelineChartComponent {\r\n  constructor() {}\r\n\r\n  timelineData: any[] = [];\r\n  locationLookup: { [key: string]: any } = {};\r\n\r\n  private _timelineChartData: TimelineChartData = {\r\n    points: [],\r\n    locations: {},\r\n    locationType: 'facility'\r\n  };\r\n  @Input()\r\n  get chartData(): TimelineChartData {\r\n    return this._timelineChartData;\r\n  }\r\n  set chartData(v) {\r\n    this._timelineChartData = v;\r\n\r\n    // set a padding value to cover the height of title and axis values\r\n    const paddingHeight = 50;\r\n    // set the height to be covered by the rows\r\n    const rowHeight = Object.keys(v.locations).length * 42; //data.getNumberOfRows() * 15;\r\n    // set the total chart height\r\n    const chartHeight = Math.min(rowHeight + paddingHeight, 375);\r\n\r\n    this.options = {\r\n      timeline: { showBarLabels: false, colorByRowLabel: true },\r\n      backgroundColor: '#ebe9e6',\r\n      tooltip: { isHtml: true },\r\n      focusTarget: 'category',\r\n      height: chartHeight\r\n    };\r\n\r\n    // body > div > app-home > div > app-apf-portfolio-ic-dashboard > div > div > div > div.col-md-9 > div:nth-child(2) > div > div.timeline-chart-container > app-apf-timeline-chart > google-chart > div > div:nth-child(1) > div > div:nth-child(2)\r\n\r\n    this.timelineData = this.chartData.points.map((x: any) => {\r\n      return [\r\n        {\r\n          v: x.locationName,\r\n          p: {\r\n            link: `https://orfd-cogen.ors.nih.gov/data-quality/plotcgmp?path=${x.tag}`\r\n          }\r\n        },\r\n        '',\r\n        x.chillerStatusLabel,\r\n        x.statusColor,\r\n        x.startDate,\r\n        x.endDate\r\n      ];\r\n    });\r\n\r\n    this.locationLookup = this.chartData.locations;\r\n  }\r\n\r\n  private _highlightedLabel: string = '';\r\n  @Input()\r\n  get highlightedLabel() {\r\n    return this._highlightedLabel;\r\n  }\r\n  set highlightedLabel(v: string) {\r\n    this._highlightedLabel = v;\r\n    document.querySelectorAll('text[data-locationId]')?.forEach((elem) => {\r\n      elem.setAttribute('fill', 'black');\r\n    });\r\n    document\r\n      .querySelector('text[data-locationId=\"' + v + '\"]')\r\n      ?.setAttribute('fill', 'red');\r\n\r\n    this.scrollIntoView(v);\r\n  }\r\n  \r\n  @Input()\r\n  isLoading:boolean = false;\r\n\r\n  @Output()\r\n  chartLabelClick = new EventEmitter<any>();\r\n\r\n  @Output()\r\n  chartLabelMouseOver = new EventEmitter<any>();\r\n\r\n  @Output()\r\n  chartLabelMouseOut = new EventEmitter<any>();\r\n\r\n  chartType = ChartType.Timeline;\r\n\r\n  columnNames = [\r\n    { type: 'string', id: 'ChillerName' },\r\n    {\r\n      type: 'string',\r\n      id: 'ChillerNameTooltip',\r\n      role: 'tooltip',\r\n      p: { html: true }\r\n    },\r\n    { type: 'string', id: 'ChillerStatus' },\r\n    { type: 'string', role: 'style' },\r\n    { type: 'date', id: 'StartTime' },\r\n    { type: 'date', id: 'EndTime' }\r\n  ];\r\n\r\n  options: any = {\r\n    timeline: { showBarLabels: false, colorByRowLabel: true },\r\n    backgroundColor: '#ebe9e6',\r\n    tooltip: { isHtml: true },\r\n    focusTarget: 'category',\r\n    height: '600px'\r\n  };\r\n\r\n  roomLabelTooltipDP(name: string) {\r\n    const tooltipHtml = `\r\n    <div align=\"left\" class=\"label-tooltip\"> \r\n      <table>\r\n       <tr><th> Name: ${name} </th></tr>\r\n       </table>\r\n    </div>\r\n  `;\r\n    return tooltipHtml;\r\n  }\r\n\r\n  roomLabelTooltip(room: any) {\r\n    const toolTipParts = [];\r\n    if (room.roomName) {\r\n      toolTipParts.push(`${room.roomName}`);\r\n    }\r\n    if (room.roomNumber) {\r\n      toolTipParts.push(`${room.roomNumber}`);\r\n    }\r\n    if (room.iso) {\r\n      toolTipParts.push(`Class: ${room.iso}`);\r\n    }\r\n    if (room.sq) {\r\n      toolTipParts.push(`GSF: ${room.sq}`);\r\n    }\r\n    const tooltipHtml = `\r\n    <div class=\"label-tooltip\">\r\n      ${toolTipParts.join('<br>')}\r\n    </div>`;\r\n\r\n    // Room: ${room.roomName} <br>\r\n    // Room #: ${room.roomNumber} <br>\r\n    // Class: ${room.iso} <br>\r\n    // GSF: ${room.sq}\r\n    // const tooltipHtml = `\r\n    //   <div align=\"left\" class=\"label-tooltip\">\r\n    //     <table>\r\n    //      <tr><td> Room: ${room.roomName} </td></tr>\r\n    //      <tr><td><b> Room #: ${room.roomNumber} </b></td></tr>\r\n    //      <tr><td><b> Class: ${room.iso} </b></td></tr>\r\n    //      <tr><td><b> GSF: ${room.sq} </b></td></tr>\r\n    //      </table>\r\n    //   </div>\r\n    // `;\r\n    return tooltipHtml;\r\n  }\r\n\r\n  chartReady() {\r\n    console.log('Chart Ready');\r\n    const chartLabels = document.querySelectorAll(\r\n      'app-apf-timeline-chart text[text-anchor=\"end\"]'\r\n    );\r\n    const me = this;\r\n    chartLabels.forEach((label) => {\r\n      label.setAttribute(\r\n        'style',\r\n        `cursor: pointer; text-decoration: underline;`\r\n      );\r\n\r\n      const locationName = label.innerHTML;\r\n      if (this.chartData.locationType === 'room') {\r\n        const roomData = this.chartData.locations[locationName];\r\n        if (roomData) {\r\n          const roomTooltip = this.roomLabelTooltip(roomData);\r\n          const tooltip = new bootstrap.Tooltip(label, {\r\n            placement: 'right',\r\n            html: true,\r\n            title: roomTooltip\r\n          });\r\n        } else {\r\n          const tooltip = new bootstrap.Tooltip(label, {\r\n            placement: 'right',\r\n            title: locationName\r\n          });\r\n        }\r\n      } else {\r\n        const tooltip = new bootstrap.Tooltip(label, {\r\n          placement: 'right',\r\n          title: locationName\r\n        });\r\n      }\r\n\r\n      label.setAttribute('data-locationId', label.innerHTML);\r\n\r\n      // console.log(this.chartData);\r\n      // label.setAttribute('data-toggle', 'tooltip');\r\n      // label.setAttribute('data-placement', 'right');\r\n      // label.setAttribute('title', 'Hello ' + label.innerHTML);\r\n\r\n      label.addEventListener('click', function (sender) {\r\n        const text = (sender.currentTarget as Element).innerHTML;\r\n        me.chartLabelClick.emit(text);\r\n      });\r\n      label.addEventListener('mouseover', function (sender) {\r\n        const text = (sender.currentTarget as Element).innerHTML;\r\n        me.handleLabelMouseOver(text);\r\n      });\r\n      label.addEventListener('mouseout', function (sender) {\r\n        const text = (sender.currentTarget as Element).innerHTML;\r\n        me.handleLabelMouseOut(text);\r\n      });\r\n\r\n      \r\n\r\n      // document.querySelectorAll()\r\n      // data-toggle=\"tooltip\" data-placement=\"right\" title=\"Tooltip on right\"\r\n    });\r\n  }\r\n\r\n  scrollIntoView(locationId: string) {\r\n    document.querySelector(`google-chart [data-locationId=\"${locationId}\"]`)?.scrollIntoView();\r\n  }\r\n\r\n  handleLabelMouseOver(locationId: string) {\r\n    const label = document.querySelector(\r\n      'text[data-locationId=\"' + locationId + '\"]'\r\n    );\r\n    if (label) {\r\n      label.setAttribute('fill', 'red');\r\n\r\n      // tooltip.show();\r\n    }\r\n\r\n    this.chartLabelMouseOver.emit(locationId);\r\n  }\r\n\r\n  handleLabelMouseOut(locationId: string) {\r\n    document\r\n      .querySelector('text[data-locationId=\"' + locationId + '\"]')\r\n      ?.setAttribute('fill', 'black');\r\n    this.chartLabelMouseOut.emit(locationId);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "text[locationId] {\r\n  :hover {\r\n    fill: red;\r\n  }\r\n}\r\n\r\n.label-tooltip {\r\n  width: 300px;\r\n  padding: 5px 5px 5px 5px;\r\n  text-align: left;\r\n\r\n  .row {\r\n    display: flex;\r\n  }\r\n}\r\n",
                    "styleUrl": "./apf-timeline-chart.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 13
            },
            "accessors": {
                "chartData": {
                    "name": "chartData",
                    "setSignature": {
                        "name": "chartData",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "v",
                                "type": "",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 28,
                        "jsdoctags": [
                            {
                                "name": "v",
                                "type": "",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "chartData",
                        "type": "",
                        "returnType": "TimelineChartData",
                        "line": 25
                    }
                },
                "highlightedLabel": {
                    "name": "highlightedLabel",
                    "setSignature": {
                        "name": "highlightedLabel",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "v",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 72,
                        "jsdoctags": [
                            {
                                "name": "v",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "highlightedLabel",
                        "type": "",
                        "returnType": "",
                        "line": 69
                    }
                }
            },
            "templateData": "<google-chart\r\n  *ngIf=\"timelineData.length > 0 && !isLoading\"\r\n  style=\"width: 100%; height: 100%\"\r\n  [type]=\"chartType\"\r\n  [data]=\"timelineData\"\r\n  [columns]=\"columnNames\"\r\n  [options]=\"options\"\r\n  (ready)=\"chartReady()\"\r\n>\r\n</google-chart>\r\n\r\n<p-progressSpinner *ngIf=\"isLoading\" [style]=\"{width: '50px', height: '50px'}\" styleClass=\"custom-spinner\" strokeWidth=\"4\" fill=\"#EEEEEE\" animationDuration=\"2s\"></p-progressSpinner>\r\n"
        },
        {
            "name": "AppComponent",
            "id": "component-AppComponent-549e500df725fb5b5ed0758ea2d5ca574a298c5079c7c61f6d496f117408c8d996093b423d0f1bb5c937c0c05d4dc79d88acf2c569deebdb65e3d9983fa46e06",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "'app'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html'\r\n})\r\nexport class AppComponent {\r\n  title = 'app';\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<body>\r\n  <div>\r\n    <router-outlet></router-outlet>\r\n  </div>\r\n</body>\r\n"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-f98dbe6d4207904095817adcdb079196880739b5a82124e9bce3bd7ad62e7fa64b2d718ac2a3f4b8aedb551284d136a1556d787cc8639e4ca9f90a3d791ab102",
            "file": "src/stories/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-button",
            "styleUrls": [
                "./button.css"
            ],
            "styles": [],
            "template": "<button   type=\"button\"\n   (click)=\"onClick.emit($event)\"\n   [ngClass]=\"classes\"\n   [ngStyle]=\"{ 'background-color': backgroundColor }\"\n >\n   {{ label }}\n </button>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nWhat background color to use\n",
                    "description": "<p>What background color to use</p>\n",
                    "line": 26,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "'Button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "pos": 746,
                            "end": 760,
                            "flags": 4227072,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 325,
                            "tagName": {
                                "pos": 747,
                                "end": 755,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "required"
                            },
                            "comment": ""
                        }
                    ],
                    "rawdescription": "\n\nButton contents\n\n",
                    "description": "<p>Button contents</p>\n",
                    "line": 40,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "primary",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIs this the principal call to action on the page?\n",
                    "description": "<p>Is this the principal call to action on the page?</p>\n",
                    "line": 20,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nHow large should the button be?\n",
                    "description": "<p>How large should the button be?</p>\n",
                    "line": 32,
                    "type": "\"small\" | \"medium\" | \"large\"",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptional click handler\n",
                    "description": "<p>Optional click handler</p>\n",
                    "line": 46,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'storybook-button',\r\n  template: ` <button\r\n    type=\"button\"\r\n    (click)=\"onClick.emit($event)\"\r\n    [ngClass]=\"classes\"\r\n    [ngStyle]=\"{ 'background-color': backgroundColor }\"\r\n  >\r\n    {{ label }}\r\n  </button>`,\r\n  styleUrls: ['./button.css']\r\n})\r\nexport default class ButtonComponent {\r\n  /**\r\n   * Is this the principal call to action on the page?\r\n   */\r\n  @Input()\r\n  primary = false;\r\n\r\n  /**\r\n   * What background color to use\r\n   */\r\n  @Input()\r\n  backgroundColor?: string;\r\n\r\n  /**\r\n   * How large should the button be?\r\n   */\r\n  @Input()\r\n  size: 'small' | 'medium' | 'large' = 'medium';\r\n\r\n  /**\r\n   * Button contents\r\n   *\r\n   * @required\r\n   */\r\n  @Input()\r\n  label = 'Button';\r\n\r\n  /**\r\n   * Optional click handler\r\n   */\r\n  @Output()\r\n  onClick = new EventEmitter<Event>();\r\n\r\n  public get classes(): string[] {\r\n    const mode = this.primary\r\n      ? 'storybook-button--primary'\r\n      : 'storybook-button--secondary';\r\n\r\n    return ['storybook-button', `storybook-button--${this.size}`, mode];\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-button {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  font-weight: 700;\n  border: 0;\n  border-radius: 3em;\n  cursor: pointer;\n  display: inline-block;\n  line-height: 1;\n}\n.storybook-button--primary {\n  color: white;\n  background-color: #1ea7fd;\n}\n.storybook-button--secondary {\n  color: #333;\n  background-color: transparent;\n  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 0px 1px inset;\n}\n.storybook-button--small {\n  font-size: 12px;\n  padding: 10px 16px;\n}\n.storybook-button--medium {\n  font-size: 14px;\n  padding: 11px 20px;\n}\n.storybook-button--large {\n  font-size: 16px;\n  padding: 12px 24px;\n}\n",
                    "styleUrl": "./button.css"
                }
            ],
            "stylesData": "",
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 48
                    }
                }
            }
        },
        {
            "name": "ChartDemoComponent",
            "id": "component-ChartDemoComponent-8dcb3bbc03fa217249650116c500f6cb052281d10907ffebe82c950ac71b02d5c396981c7b911bd3859c4d3813b82fd5a1136c6a1a960778d84e400b0bb896d8",
            "file": "src/app/chart-demo/chart-demo.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-chart-demo",
            "styleUrls": [
                "./chart-demo.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./chart-demo.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "changingChart",
                    "defaultValue": "{\r\n    title: 'Changing Chart',\r\n    type: ChartType.BarChart,\r\n    data: [\r\n      ['Copper', 8.94],\r\n      ['Silver', 10.49],\r\n      ['Gold', 19.3],\r\n      ['Platinum', 21.45]\r\n    ],\r\n    columns: ['Element', 'Density'],\r\n    options: {\r\n      animation: {\r\n        duration: 250,\r\n        easing: 'ease-in-out',\r\n        startup: true\r\n      }\r\n    }\r\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "chart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "GoogleChartComponent",
                    "optional": false,
                    "description": "",
                    "line": 48,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'chart', {static: true}"
                        }
                    ],
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "charts",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type[]",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "changeChart",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 314,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "navigateToTest",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 323,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 310,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "onError",
                    "args": [
                        {
                            "name": "error",
                            "type": "ChartErrorEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 293,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "error",
                            "type": "ChartErrorEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onMouseEnter",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 301,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onMouseLeave",
                    "args": [
                        {
                            "name": "event",
                            "type": "ChartMouseLeaveEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 306,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "ChartMouseLeaveEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onReady",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 289,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "onSelect",
                    "args": [
                        {
                            "name": "event",
                            "type": "ChartSelectionChangedEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 297,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "ChartSelectionChangedEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport {\r\n  ChartErrorEvent,\r\n  ChartMouseLeaveEvent,\r\n  ChartMouseOverEvent,\r\n  ChartSelectionChangedEvent,\r\n  ChartType,\r\n  Column,\r\n  GoogleChartComponent\r\n} from 'angular-google-charts';\r\n\r\n@Component({\r\n  selector: 'app-chart-demo',\r\n  templateUrl: './chart-demo.component.html',\r\n  styleUrls: ['./chart-demo.component.css']\r\n})\r\nexport class ChartDemoComponent implements OnInit {\r\n  public charts: {\r\n    title: string;\r\n    type: ChartType;\r\n    data: any[][];\r\n    columns?: Column[];\r\n    options?: {};\r\n  }[] = [];\r\n\r\n  public changingChart = {\r\n    title: 'Changing Chart',\r\n    type: ChartType.BarChart,\r\n    data: [\r\n      ['Copper', 8.94],\r\n      ['Silver', 10.49],\r\n      ['Gold', 19.3],\r\n      ['Platinum', 21.45]\r\n    ],\r\n    columns: ['Element', 'Density'],\r\n    options: {\r\n      animation: {\r\n        duration: 250,\r\n        easing: 'ease-in-out',\r\n        startup: true\r\n      }\r\n    }\r\n  };\r\n\r\n  @ViewChild('chart', { static: true })\r\n  public chart!: GoogleChartComponent;\r\n\r\n  constructor(private router: Router) {\r\n    this.charts.push({\r\n      title: 'Pie Chart',\r\n      type: ChartType.PieChart,\r\n      columns: ['Task', 'Hours per Day'],\r\n      data: [\r\n        ['Work', 11],\r\n        ['Eat', 2],\r\n        ['Commute', 2],\r\n        ['Watch TV', 2],\r\n        ['Sleep', 7]\r\n      ]\r\n    });\r\n\r\n    this.charts.push({\r\n      title: 'Bar Chart',\r\n      type: ChartType.BarChart,\r\n      columns: ['Element', 'Density', { role: 'style', type: 'string' }],\r\n      data: [\r\n        ['Copper', 8.94, '#b87333'],\r\n        ['Silver', 10.49, 'silver'],\r\n        ['Gold', 19.3, 'gold'],\r\n        ['Platinum', 21.45, 'color: #e5e4e2']\r\n      ]\r\n    });\r\n\r\n    this.charts.push({\r\n      title: 'Bar Chart',\r\n      type: ChartType.BarChart,\r\n      columns: [\r\n        'City',\r\n        '2010 Population',\r\n        { role: 'annotation', type: 'string' },\r\n        '2000 Population',\r\n        { role: 'annotation', type: 'string' }\r\n      ],\r\n      data: [\r\n        ['New York City, NY', 8175000, '8.1M', 8008000, '8M'],\r\n        ['Los Angeles, CA', 3792000, '3.8M', 3694000, '3.7M'],\r\n        ['Chicago, IL', 2695000, '2.7M', 2896000, '2.9M'],\r\n        ['Houston, TX', 2099000, '2.1M', 1953000, '2.0M'],\r\n        ['Philadelphia, PA', 1526000, '1.5M', 1517000, '1.5M']\r\n      ],\r\n      options: {\r\n        annotations: {\r\n          alwaysOutside: true,\r\n          textStyle: {\r\n            fontSize: 12,\r\n            auraColor: 'none',\r\n            color: '#555'\r\n          },\r\n          boxStyle: {\r\n            stroke: '#ccc',\r\n            strokeWidth: 1,\r\n            gradient: {\r\n              color1: '#f3e5f5',\r\n              color2: '#f3e5f5',\r\n              x1: '0%',\r\n              y1: '0%',\r\n              x2: '100%',\r\n              y2: '100%'\r\n            }\r\n          }\r\n        },\r\n        hAxis: {\r\n          title: 'Total Population',\r\n          minValue: 0\r\n        },\r\n        vAxis: {\r\n          title: 'City'\r\n        }\r\n      }\r\n    });\r\n\r\n    this.charts.push({\r\n      title: 'Styled Line Chart',\r\n      type: ChartType.LineChart,\r\n      columns: [\r\n        'Element',\r\n        'Density',\r\n        { type: 'number', role: 'interval' },\r\n        { type: 'number', role: 'interval' },\r\n        { type: 'string', role: 'annotation' },\r\n        { type: 'string', role: 'annotationText' },\r\n        { type: 'boolean', role: 'certainty' }\r\n      ],\r\n      data: [\r\n        ['April', 1000, 900, 1100, 'A', 'Stolen data', true],\r\n        ['May', 1170, 1000, 1200, 'B', 'Coffee spill', true],\r\n        ['June', 660, 550, 800, 'C', 'Wumpus attack', true],\r\n        ['July', 1030, null, null, null, null, false]\r\n      ]\r\n    });\r\n\r\n    this.charts.push({\r\n      title: 'Material Bar Chart',\r\n      type: ChartType.Bar,\r\n      columns: ['Year', 'Sales', 'Expenses', 'Profit'],\r\n      data: [\r\n        ['2014', 1000, 400, 200],\r\n        ['2015', 1170, 460, 250],\r\n        ['2016', 660, 1120, 300],\r\n        ['2017', 1030, 540, 350]\r\n      ],\r\n      options: {\r\n        chart: {\r\n          title: 'Material Bar Chart',\r\n          subtitle: 'Sales, Expenses, and Profit: 2014-2017'\r\n        },\r\n        bars: 'horizontal' // Required for Material Bar Charts.\r\n      }\r\n    });\r\n\r\n    this.charts.push({\r\n      title: 'Area Chart',\r\n      type: ChartType.AreaChart,\r\n      columns: ['Year', 'Sales', 'Expenses'],\r\n      data: [\r\n        ['2013', 1000, 400],\r\n        ['2014', 1170, 460],\r\n        ['2015', 660, 1120],\r\n        ['2016', 1030, 540]\r\n      ]\r\n    });\r\n\r\n    this.charts.push({\r\n      title: 'Bubble Chart',\r\n      type: ChartType.BubbleChart,\r\n      columns: ['ID', 'X', 'Y'],\r\n      data: [\r\n        ['Hallo', 80, 167],\r\n        ['', 79, 136],\r\n        ['', 78, 184],\r\n        ['', 72, 278],\r\n        ['', 81, 200],\r\n        ['', 72, 170],\r\n        ['', 68, 477]\r\n      ]\r\n    });\r\n\r\n    this.charts.push({\r\n      title: 'Candlestick Chart',\r\n      type: ChartType.CandlestickChart,\r\n      columns: undefined,\r\n      data: [\r\n        ['Mon', 20, 28, 38, 45],\r\n        ['Tue', 31, 38, 55, 66],\r\n        ['Wed', 50, 55, 77, 80],\r\n        ['Thu', 77, 77, 66, 50],\r\n        ['Fri', 68, 66, 22, 15]\r\n      ]\r\n    });\r\n\r\n    this.charts.push({\r\n      title: 'Combo Chart',\r\n      type: ChartType.ComboChart,\r\n      columns: [\r\n        'Month',\r\n        'Bolivia',\r\n        'Ecuador',\r\n        'Madagascar',\r\n        'Papua New Guinea',\r\n        'Rwanda',\r\n        'Average'\r\n      ],\r\n      data: [\r\n        ['2004/05', 165, 938, 522, 998, 450, 614.6],\r\n        ['2005/06', 135, 1120, 599, 1268, 288, 682],\r\n        ['2006/07', 157, 1167, 587, 807, 397, 623],\r\n        ['2007/08', 139, 1110, 615, 968, 215, 609.4],\r\n        ['2008/09', 136, 691, 629, 1026, 366, 569.6]\r\n      ],\r\n      options: {\r\n        vAxis: { title: 'Cups' },\r\n        hAxis: { title: 'Month' },\r\n        seriesType: 'bars',\r\n        series: { 5: { type: 'line' } }\r\n      }\r\n    });\r\n\r\n    this.charts.push({\r\n      title: 'Histogram',\r\n      type: ChartType.Histogram,\r\n      columns: ['Dinosaur', 'Length'],\r\n      data: [\r\n        ['Acrocanthosaurus (top-spined lizard)', 12.2],\r\n        ['Albertosaurus (Alberta lizard)', 9.1],\r\n        ['Allosaurus (other lizard)', 12.2],\r\n        ['Apatosaurus (deceptive lizard)', 22.9],\r\n        ['Archaeopteryx (ancient wing)', 0.9],\r\n        ['Argentinosaurus (Argentina lizard)', 36.6],\r\n        ['Baryonyx (heavy claws)', 9.1],\r\n        ['Brachiosaurus (arm lizard)', 30.5],\r\n        ['Ceratosaurus (horned lizard)', 6.1],\r\n        ['Coelophysis (hollow form)', 2.7],\r\n        ['Compsognathus (elegant jaw)', 0.9],\r\n        ['Deinonychus (terrible claw)', 2.7],\r\n        ['Diplodocus (double beam)', 27.1],\r\n        ['Dromicelomimus (emu mimic)', 3.4],\r\n        ['Gallimimus (fowl mimic)', 5.5],\r\n        ['Mamenchisaurus (Mamenchi lizard)', 21.0],\r\n        ['Megalosaurus (big lizard)', 7.9],\r\n        ['Microvenator (small hunter)', 1.2],\r\n        ['Ornithomimus (bird mimic)', 4.6],\r\n        ['Oviraptor (egg robber)', 1.5],\r\n        ['Plateosaurus (flat lizard)', 7.9],\r\n        ['Sauronithoides (narrow-clawed lizard)', 2.0],\r\n        ['Seismosaurus (tremor lizard)', 45.7],\r\n        ['Spinosaurus (spiny lizard)', 12.2],\r\n        ['Supersaurus (super lizard)', 30.5],\r\n        ['Tyrannosaurus (tyrant lizard)', 15.2],\r\n        ['Ultrasaurus (ultra lizard)', 30.5],\r\n        ['Velociraptor (swift robber)', 1.8]\r\n      ]\r\n    });\r\n\r\n    this.charts.push({\r\n      title: 'Scatter Chart',\r\n      type: ChartType.ScatterChart,\r\n      columns: ['Age', 'Weight'],\r\n      data: [\r\n        [8, 12],\r\n        [4, 5.5],\r\n        [11, 14],\r\n        [4, 5],\r\n        [3, 3.5],\r\n        [6.5, 7]\r\n      ],\r\n      options: {\r\n        explorer: {\r\n          actions: ['dragToZoom', 'rightClickToReset'],\r\n          keepInBounds: true,\r\n          maxZoomIn: 4,\r\n          zoomDelta: 1\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  public onReady() {\r\n    console.log('Chart ready');\r\n  }\r\n\r\n  public onError(error: ChartErrorEvent) {\r\n    console.error('Error: ' + error.message.toString());\r\n  }\r\n\r\n  public onSelect(event: ChartSelectionChangedEvent) {\r\n    console.log('Selected: ' + event.toString());\r\n  }\r\n\r\n  public onMouseEnter(event: any) {\r\n    //ChartMouseOverEvent\r\n    console.log('Hovering ' + event.toString());\r\n  }\r\n\r\n  public onMouseLeave(event: ChartMouseLeaveEvent) {\r\n    console.log('No longer hovering ' + event.toString());\r\n  }\r\n\r\n  public ngOnInit() {\r\n    console.log(this.chart);\r\n  }\r\n\r\n  public changeChart() {\r\n    this.changingChart.data = [\r\n      ['Copper', Math.random() * 20.0],\r\n      ['Silver', Math.random() * 20.0],\r\n      ['Gold', Math.random() * 20.0],\r\n      ['Platinum', Math.random() * 20.0]\r\n    ];\r\n  }\r\n\r\n  public navigateToTest() {\r\n    this.router.navigateByUrl('/test');\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./chart-demo.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 48,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<h1 style=\"font-family: Arial, Helvetica, sans-serif\">\r\n  Angular Google-Charts Demo\r\n</h1>\r\n<div *ngFor=\"let chart of charts\">\r\n  <google-chart\r\n    [width]=\"600\"\r\n    [title]=\"chart.title\"\r\n    [type]=\"chart.type\"\r\n    [data]=\"chart.data\"\r\n    [columns]=\"chart.columns\"\r\n    [options]=\"chart.options!\"\r\n    (ready)=\"onReady()\"\r\n    (select)=\"onSelect($event)\"\r\n    (error)=\"onError($event)\"\r\n    (mouseenter)=\"onMouseEnter($event)\"\r\n    (mouseleave)=\"onMouseLeave($event)\"\r\n  >\r\n  </google-chart>\r\n</div>\r\n\r\n<google-chart\r\n  #chart\r\n  [width]=\"600\"\r\n  [title]=\"changingChart.title\"\r\n  [type]=\"changingChart.type\"\r\n  [data]=\"changingChart.data\"\r\n  [columns]=\"changingChart.columns\"\r\n  [options]=\"changingChart.options\"\r\n>\r\n</google-chart>\r\n\r\n<button (click)=\"changeChart()\">Change Data</button>\r\n<button (click)=\"navigateToTest()\">Navigate</button>\r\n"
        },
        {
            "name": "ContactUsDialogComponent",
            "id": "component-ContactUsDialogComponent-952e08ce0375cae3dd301c0bbdec186bb202ebe2d3ff089595df23c6acb50b944fb843184c0fe360a21995ce9d8a410b2045dc414c7fa5edd89aae3e8b634e13",
            "file": "src/app/contact-us-dialog/contact-us-dialog.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "DialogService"
                }
            ],
            "selector": "app-contact-us-dialog",
            "styleUrls": [
                "./contact-us-dialog.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./contact-us-dialog.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "emailForm",
                    "defaultValue": "new FormGroup({\n    name: new FormControl('', [Validators.required]),\n    fromAddress: new FormControl('', [Validators.required, Validators.email]),\n    subjectLine: new FormControl('', [Validators.required]),\n    messageBody: new FormControl('', [Validators.required])\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "ref",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DynamicDialogRef",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "sendEmail",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, OnDestroy, Output } from '@angular/core';\nimport { DialogService, DynamicDialogRef } from 'primeng/dynamicdialog';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\n\nimport { DataService } from '../api/data.service';\n\n@Component({\n  selector: 'app-contact-us-dialog',\n  templateUrl: './contact-us-dialog.component.html',\n  styleUrls: ['./contact-us-dialog.component.scss'],\n  providers: [DialogService]\n})\nexport class ContactUsDialogComponent implements OnDestroy {\n\n  constructor(public ref: DynamicDialogRef) {}\n  \n  emailForm = new FormGroup({\n    name: new FormControl('', [Validators.required]),\n    fromAddress: new FormControl('', [Validators.required, Validators.email]),\n    subjectLine: new FormControl('', [Validators.required]),\n    messageBody: new FormControl('', [Validators.required])\n  });\n\n  get name() {\n    return this.emailForm.get('name');\n  }\n\n  get fromAddress() {\n    return this.emailForm.get('fromAddress');\n  }\n\n  get subjectLine() {\n    return this.emailForm.get('subjectLine');\n  }\n\n  get messageBody() {\n    return this.emailForm.get('messageBody');\n  }\n\n  sendEmail() {\n    if (this.emailForm.valid) {\n      this.ref.close(this.emailForm.value);\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.ref) {\n        this.ref.close();\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".contact-form {\r\n    width:500px;\r\n    .field-group {\r\n        margin-bottom:20px;\r\n    }\r\n    .alert {\r\n        color: red;\r\n    }\r\n    label {\r\n        display:block;\r\n        font-weight:500;\r\n    }\r\n    input, textarea {\r\n        width:400px;\r\n    }\r\n}",
                    "styleUrl": "./contact-us-dialog.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "ref",
                        "type": "DynamicDialogRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "ref",
                        "type": "DynamicDialogRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnDestroy"
            ],
            "accessors": {
                "name": {
                    "name": "name",
                    "getSignature": {
                        "name": "name",
                        "type": "",
                        "returnType": "",
                        "line": 24
                    }
                },
                "fromAddress": {
                    "name": "fromAddress",
                    "getSignature": {
                        "name": "fromAddress",
                        "type": "",
                        "returnType": "",
                        "line": 28
                    }
                },
                "subjectLine": {
                    "name": "subjectLine",
                    "getSignature": {
                        "name": "subjectLine",
                        "type": "",
                        "returnType": "",
                        "line": 32
                    }
                },
                "messageBody": {
                    "name": "messageBody",
                    "getSignature": {
                        "name": "messageBody",
                        "type": "",
                        "returnType": "",
                        "line": 36
                    }
                }
            },
            "templateData": "\n  <div class=\"contact-form\" [formGroup]=\"emailForm\">\n\n      <div class=\"field-group\">\n        <label for=\"name\">Name</label>\n        <input id=\"name\" type=\"text\" formControlName=\"name\">\n        <div class=\"alert\" *ngIf=\"name?.invalid && (name?.dirty || name?.touched)\">\n          <div *ngIf=\"name?.errors?.required\">\n            Name is required.\n          </div>\n        </div>\n      </div>\n\n      <div class=\"field-group\">\n        <label for=\"from-address\">Email:</label>\n        <input type=\"email\" id=\"from-address\" name=\"from-address\" formControlName=\"fromAddress\">\n        <div class=\"alert\" *ngIf=\"fromAddress?.invalid && (fromAddress?.dirty || fromAddress?.touched)\">\n          <div *ngIf=\"fromAddress?.errors?.required\">\n            From address is required.\n          </div>\n          <div *ngIf=\"fromAddress?.errors?.email\">\n            This is not a valid email address.\n          </div>\n        </div>\n      </div>\n\n      <div class=\"field-group\">\n        <label for=\"subject-line\">Subject:</label>\n        <input type=\"text\" id=\"subject-line\" name=\"subject-line\" formControlName=\"subjectLine\">\n        <div class=\"alert\" *ngIf=\"subjectLine?.invalid && (subjectLine?.dirty || subjectLine?.touched)\">\n          <div *ngIf=\"subjectLine?.errors?.required\">\n            Subject line is required.\n          </div>\n        </div>\n      </div>\n\n      <div class=\"field-group\">\n        <label for=\"message-body\">Message</label>\n        <textarea id=\"message-body\" formControlName=\"messageBody\"></textarea>\n        <div class=\"alert\" *ngIf=\"messageBody?.invalid && (messageBody?.dirty || messageBody?.touched)\">\n          <div *ngIf=\"messageBody?.errors?.required\">\n            Message body is required.\n          </div>\n        </div>\n      </div>\n\n      <button pButton label=\"Send\" class=\"p-button-sm\" [disabled]=\"emailForm.invalid\" (click)=\"sendEmail()\"></button>\n\n  </div>"
        },
        {
            "name": "ErrorLogDashboardComponent",
            "id": "component-ErrorLogDashboardComponent-d06fb002c47a46949f887a058395bc875c12ad5d5efe1198d018d73a6ebb06733a1a8644e0bdfac1c5c93ffde789fe016c12585369be3a7285835cfbb6bdb4a7",
            "file": "src/app/error-log-dashboard/error-log-dashboard.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-error-log-dashboard",
            "styleUrls": [
                "./error-log-dashboard.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./error-log-dashboard.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "appSettings",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "errors",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "errorsJSON",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 16
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\nimport { DataService } from 'src/app/api/data.service';\nimport { ErrorLog } from '../api/models';\n\n@Component({\n  selector: 'app-error-log-dashboard',\n  templateUrl: './error-log-dashboard.component.html',\n  styleUrls: ['./error-log-dashboard.component.scss']\n})\nexport class ErrorLogDashboardComponent implements OnInit {\n\n  constructor(private dataService: DataService) { }\n\n  errors:  any[] = [] //ErrorLog[] = []\n  errorsJSON = \"\"\n  appSettings = \"\"\n\n  ngOnInit(): void {\n    this.dataService.errors().subscribe(errors=>{\n      this.errors = errors\n      this.errorsJSON = JSON.stringify(errors);\n    });\n\n    this.dataService.appSettings().subscribe(settings=>{\n    this.appSettings = JSON.stringify(settings);\n    })\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "table.error-log {\r\n    width:100%;\r\n\r\n    td {\r\n        \r\n        padding:2px;\r\n    }\r\n}\r\n",
                    "styleUrl": "./error-log-dashboard.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "dataService",
                        "type": "DataService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "dataService",
                        "type": "DataService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<h2>Error Log</h2>\n\n<p-table [value]=\"errors\">\n    <ng-template pTemplate=\"header\">\n        <tr>\n            <th pSortableColumn=\"errorlogid\">Id</th>\n            <th pSortableColumn=\"errordate\">Date</th>\n            <th pSortableColumn=\"errormessage\">Message</th>\n            <th pSortableColumn=\"errortrace\">Trace</th>\n        </tr>\n    </ng-template>\n    <ng-template pTemplate=\"body\" let-error>\n        <tr>\n            <td>{{error.errorlogid}}</td>\n            <td [width]=\"180\">{{error.errordate | date:'short'}}</td>\n            <td>{{error.errormessage}}</td>\n            <td [title]=\"error.errortrace\"> {{error.errortrace.substring(0,138)}}...</td>\n        </tr>\n    </ng-template>\n</p-table>\n\n<h2>App Settings</h2>\n<div>\n    {{appSettings}}\n</div>\n \n"
        },
        {
            "name": "FacilityDescriptionComponent",
            "id": "component-FacilityDescriptionComponent-78cdde864cdf8b82cb3bfa64fe96d286b86a0f1cf3eb04f58586d609b7a98e5dde86e9d7d340bda0f87c8478daf4bc6f30f5ca37f2c4737cdc64ca532f7f3863",
            "file": "src/app/facility-description/facility-description.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-facility-description",
            "styleUrls": [
                "./facility-description.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./facility-description.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-facility-description',\n  templateUrl: './facility-description.component.html',\n  styleUrls: ['./facility-description.component.css']\n})\nexport class FacilityDescriptionComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".container {\r\n    display:block;\r\n    border:2px solid grey;\r\n}\r\n\r\n.overflow-scroll {\r\n    overflow: scroll;\r\n}",
                    "styleUrl": "./facility-description.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "\n<div class=\"flex\">\n    <div id=\"about-container\" class=\"container overflow-scroll\">\n        \n    </div>\n    <div class=\"container\">\n        <div id=\"map-container\">\n            facility map\n        </div>\n        <div id=\"images-container\">\n            images\n        </div>\n    </div>\n\n</div>"
        },
        {
            "name": "FacilityInfoPageComponent",
            "id": "component-FacilityInfoPageComponent-fa107ab94de213163b771160398d1df639d7ce32c6b049dcd357fbb15c6a09ec2bfaf539b4698e1a2b99d11182d373561fccfba8e71721709e7151cea7371413",
            "file": "src/app/facility-info-page/facility-info-page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "DialogService"
                },
                {
                    "name": "FacilityInfoPageService"
                },
                {
                    "name": "DataService"
                }
            ],
            "selector": "app-facility-info-page",
            "styleUrls": [
                "./facility-info-page.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./facility-info-page.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "diagramUrl",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SafeResourceUrl",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "dialogService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DialogService",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "documentPage",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "hasDiagram",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "items",
                    "defaultValue": "[\r\n    {\r\n      label: \"About\",\r\n      icon: \"pi pi-fw pi-home\",\r\n      command: (event: any) => {\r\n        this.selectedTab = 'about';\r\n      }\r\n    },\r\n    {\r\n      label: \"Diagram\",\r\n      icon: \"pi pi-map\",\r\n      command: (event: any) => {\r\n        this.selectedTab = 'diagram';\r\n      }\r\n    },\r\n    {\r\n      label: \"Documents\",\r\n      icon: \"pi pi-fw pi-file\",\r\n      command: (event: any) => {\r\n        this.selectedTab = 'documents'\r\n      }\r\n    }, {\r\n      label: \"Pictures\",\r\n      icon: \"pi pi-fw pi-images\",\r\n      command: (event: any) => {\r\n        this.selectedTab = 'pictures'\r\n      }\r\n    }\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 57
                },
                {
                    "name": "ref",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DynamicDialogRef",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "selectedTab",
                    "defaultValue": "'about'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 55
                },
                {
                    "name": "service",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FacilityInfoPageService",
                    "optional": false,
                    "description": "",
                    "line": 30,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "contactUsClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 88,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 52,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { } from '../safe-url.pipe';\r\n\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { DialogService, DynamicDialogRef } from 'primeng/dynamicdialog';\r\nimport { DomSanitizer, SafeResourceUrl } from '@angular/platform-browser';\r\n\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { ContactUsDialogComponent } from '../contact-us-dialog/contact-us-dialog.component';\r\nimport { ContactUsMessage } from '../api/models';\r\nimport { DataService } from '../api/data.service';\r\nimport { FacilityInfoPageService } from './facility-info-page.service';\r\nimport { filter } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-facility-info-page',\r\n  templateUrl: './facility-info-page.component.html',\r\n  styleUrls: ['./facility-info-page.component.css'],\r\n  providers: [DialogService, FacilityInfoPageService, DataService]\r\n})\r\nexport class FacilityInfoPageComponent implements OnInit {\r\n\r\n  ref!: DynamicDialogRef;\r\n\r\n  documentPage: string = '';\r\n  diagramUrl: SafeResourceUrl = '';\r\n  hasDiagram = false;\r\n\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    public service: FacilityInfoPageService,\r\n    public dialogService: DialogService,\r\n    private dataService: DataService,\r\n    private sanitizer: DomSanitizer\r\n  ) {\r\n\r\n    this.activatedRoute.params\r\n      .pipe(\r\n        filter(Boolean)\r\n      )\r\n      .subscribe((params) => {\r\n        this.service.Load(params.facilityId)\r\n      });\r\n\r\n    this.service.diagram$.subscribe(d => {\r\n      this.diagramUrl = this.sanitizer.bypassSecurityTrustResourceUrl(d);\r\n      this.hasDiagram = Boolean(d);\r\n    })\r\n\r\n  }\r\n\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  selectedTab = 'about';\r\n\r\n  items = [\r\n    {\r\n      label: \"About\",\r\n      icon: \"pi pi-fw pi-home\",\r\n      command: (event: any) => {\r\n        this.selectedTab = 'about';\r\n      }\r\n    },\r\n    {\r\n      label: \"Diagram\",\r\n      icon: \"pi pi-map\",\r\n      command: (event: any) => {\r\n        this.selectedTab = 'diagram';\r\n      }\r\n    },\r\n    {\r\n      label: \"Documents\",\r\n      icon: \"pi pi-fw pi-file\",\r\n      command: (event: any) => {\r\n        this.selectedTab = 'documents'\r\n      }\r\n    }, {\r\n      label: \"Pictures\",\r\n      icon: \"pi pi-fw pi-images\",\r\n      command: (event: any) => {\r\n        this.selectedTab = 'pictures'\r\n      }\r\n    }\r\n  ];\r\n\r\n\r\n  contactUsClick() {\r\n    this.ref = this.dialogService.open(ContactUsDialogComponent, { header: 'Contact Us' });\r\n\r\n    this.ref.onClose.subscribe((message: ContactUsMessage) => {\r\n      if (message) {\r\n        this.dataService.contactUs(message).subscribe();\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".nav-toggle { cursor: pointer;}\r\n.contact-link { cursor: pointer; text-decoration: underline;}",
                    "styleUrl": "./facility-info-page.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "activatedRoute",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "service",
                        "type": "FacilityInfoPageService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "dialogService",
                        "type": "DialogService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "dataService",
                        "type": "DataService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "sanitizer",
                        "type": "DomSanitizer",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 26,
                "jsdoctags": [
                    {
                        "name": "activatedRoute",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "service",
                        "type": "FacilityInfoPageService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "dialogService",
                        "type": "DialogService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "dataService",
                        "type": "DataService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "sanitizer",
                        "type": "DomSanitizer",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"card-body designCardBody\">\r\n    <div>\r\n        <div style=\"position: relative; left: 0; top: 0;\">\r\n            <img id=\"apf1\" src=\"/assets/images/I-IVAU.jpg\">\r\n        </div>\r\n    </div>\r\n\r\n    <p-tabMenu [model]=\"items\"></p-tabMenu>\r\n\r\n    <div id=\"about-tab\" *ngIf=\"selectedTab=='about'\" style=\"width:80em\">\r\n        <app-static-content-container [page]=\"(service.aboutPage$ | async) || ''\"></app-static-content-container>\r\n    </div>\r\n\r\n    <div id=\"documents-tab\" *ngIf=\"selectedTab=='documents'\">\r\n        <span class=\"cardContent\">\r\n            <p style=\"width:80em\"> The documents, below, are an excerpt of the full, controlled and uncontrolled facility documents for\r\n                this APF, provided for your convenience. For access to the full archive of documents, or for access to\r\n                the controlled version of any of these documents, please <a (click)=\"contactUsClick()\" class=\"contact-link\">contact</a> FCIS.\r\n\r\n                The documents listed as Record Of Work As Constructed (ROWAC) are As-Built documents that have been\r\n                verified.</p>\r\n\r\n            <div>\r\n                <div *ngFor=\"let docGroup of (service.documents$ | async) || []\">\r\n                    <div *ngIf=\"docGroup.description !== 'FacilityDiagram'\">\r\n                    <b>{{docGroup.description}}</b>\r\n                    <ul>\r\n                        <li *ngFor=\"let atch of docGroup.attachments\">\r\n                            <a [href]=\"atch.url\" target=\"_blank\">{{atch.docTitle}}</a>\r\n                        </li>\r\n                    </ul>\r\n                    </div>\r\n                </div>\r\n                <div *ngIf=\"((service.documents$ | async) || []).length == 0\">\r\n                    <span>No Documents Available</span>\r\n                </div>\r\n            </div>\r\n        </span>\r\n    </div>\r\n\r\n    <div id=\"diagram-tab\" *ngIf=\"selectedTab=='diagram'\" style=\"height:800px\">\r\n        <a *ngIf=\"hasDiagram\"[href]=\"diagramUrl\" target=\"_blank\">Open in new tab</a>\r\n        <object *ngIf=\"hasDiagram\" [data]=\"diagramUrl\" type=\"application/pdf\" width=\"100%\" height=\"100%\"></object>\r\n        <div *ngIf=\"!hasDiagram\">No Diagram Available</div>\r\n    </div>\r\n\r\n    <div id=\"documents-tab\" *ngIf=\"selectedTab=='pictures'\">\r\n        <div class=\"card\">\r\n            <div style=\"display:flex;flex-wrap: wrap; justify-content:flex-start; gap:8px;\">\r\n                <div *ngFor=\"let photo of (service.pictures$ | async) || []\"\r\n                    style=\"border:1px solid black; padding:4px;\">\r\n                    <p-image [src]=\"photo.url\" [preview]=\"true\" width=\"219\" height=\"200\"\r\n                        [alt]=\"photo.docTitle\"></p-image><br />\r\n                    <span style=\"font-size:smaller\">{{photo.docTitle}}</span>\r\n                </div>\r\n                <div *ngIf=\"((service.pictures$ | async) || []).length == 0\">\r\n                    <span>No Pictures Available</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n\r\n</div>"
        },
        {
            "name": "FacilityLayoutComponent",
            "id": "component-FacilityLayoutComponent-91b53a5508160c8d2c1ff8edf13af43627489b7dcd6e7bca26c332bd969e5b0057cc67b43737968ff23fb4dd51d3bc288088c3bc2ffe426e0fb16b67c420b729",
            "file": "src/app/facility-layout/facility-layout.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-facility-layout",
            "styleUrls": [
                "./facility-layout.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./facility-layout.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "facility",
                    "defaultValue": "{\n    title:'Clinical Center - DLM Sterility Lab'\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "items",
                    "defaultValue": "[\n    {\n      label: \"Description\",\n      command: (event: any) => {\n        this.selectedTab = 'description';\n      }\n    },\n    {\n      label: \"Dashboard\",\n      command: (event: any) => {\n        this.selectedTab = 'dashboard';\n      }\n    },\n    {\n      label: \"Facility Reports\",\n      command: (event: any) => {\n        this.selectedTab = 'facility_reports'\n      }\n    }, \n    {\n      label: \"Documents\",\n      command: (event: any) => {\n        this.selectedTab = 'documents'\n      }\n    },\n    {\n      label: \"Condition Reports\",\n      command: (event: any) => {\n        this.selectedTab = 'condition_reports'\n      }\n    },\n    {\n      label: \"FCIS Resources\",\n      command: (event: any) => {\n        this.selectedTab = 'fcis_resources'\n      }\n    }\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "selectedTab",
                    "defaultValue": "'about'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 17
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-facility-layout',\n  templateUrl: './facility-layout.component.html',\n  styleUrls: ['./facility-layout.component.css']\n})\nexport class FacilityLayoutComponent implements OnInit {\n\n  constructor(private activatedRoute: ActivatedRoute,) { }\n\n  ngOnInit(): void {\n  }\n  \n  selectedTab = 'about';\n\n  facility = {\n    title:'Clinical Center - DLM Sterility Lab'\n  };\n\n  items = [\n    {\n      label: \"Description\",\n      command: (event: any) => {\n        this.selectedTab = 'description';\n      }\n    },\n    {\n      label: \"Dashboard\",\n      command: (event: any) => {\n        this.selectedTab = 'dashboard';\n      }\n    },\n    {\n      label: \"Facility Reports\",\n      command: (event: any) => {\n        this.selectedTab = 'facility_reports'\n      }\n    }, \n    {\n      label: \"Documents\",\n      command: (event: any) => {\n        this.selectedTab = 'documents'\n      }\n    },\n    {\n      label: \"Condition Reports\",\n      command: (event: any) => {\n        this.selectedTab = 'condition_reports'\n      }\n    },\n    {\n      label: \"FCIS Resources\",\n      command: (event: any) => {\n        this.selectedTab = 'fcis_resources'\n      }\n    }\n  ];\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".facility-title{\r\n    color: darkred;\r\n}",
                    "styleUrl": "./facility-layout.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "activatedRoute",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "activatedRoute",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"card-body designCardBody\">\n\n    <h2 class=\"facility-title\">{{facility.title}}</h2>\n    <p-tabMenu [model]=\"items\"></p-tabMenu>\n\n    <div id=\"description-tab\" *ngIf=\"selectedTab=='description'\">\n        <h2>Description</h2>\n       <app-facility-description></app-facility-description>\n    </div>\n\n    <div id=\"dashboard-tab\" *ngIf=\"selectedTab=='dashboard'\">\n        <h2>Dashboard</h2>\n    </div>\n\n    <div id=\"facility-reports-tab\" *ngIf=\"selectedTab=='facility_reports'\">\n        <h2>Facility Reports</h2>\n    </div>\n\n    <div id=\"documents-tab\" *ngIf=\"selectedTab=='documents'\">\n        <h2>Documents</h2>\n    </div>\n\n    <div id=\"condition-reports-tab\" *ngIf=\"selectedTab=='condition_reports'\">\n        <h2>Condition Reports</h2>\n    </div>\n\n    <div id=\"fcis-resources-tab\" *ngIf=\"selectedTab=='fcis_resources'\">\n        <h2>FCIS Resources</h2>\n    </div>\n\n</div>"
        },
        {
            "name": "FormulaHeaderComponent",
            "id": "component-FormulaHeaderComponent-c89ad5417f20173c23d033d69c2d0608dff4dc0bd1731442ed312b40ce7674825ec9d19ba32a917ae57d5a250340fc8ef4185f982e6a692dddbdccfb4a6a96f6",
            "file": "src/app/formula-header/formula-header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-formula-header",
            "styleUrls": [
                "./formula-header.component.scss"
            ],
            "styles": [],
            "template": "<header></header>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-formula-header',\r\n  template: `<header></header>`,\r\n  styleUrls: ['./formula-header.component.scss']\r\n})\r\nexport class FormulaHeaderComponent {\r\n  constructor() {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "header {\r\n  padding: 73px 0 0 0;\r\n  background: #b3172c url('../../assets/images/DTR_Banner_logo_red.png')\r\n    no-repeat top center;\r\n  margin: 0;\r\n  height:50px;\r\n}\r\n",
                    "styleUrl": "./formula-header.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            }
        },
        {
            "name": "GsfGrowthByClassificationChartComponent",
            "id": "component-GsfGrowthByClassificationChartComponent-51e14965872163dad9a367881eb5946a2cd8734cf4b00ffe4d60758c05df9deb3e149fbe6ff2b660bf0713deeea3b5fe2da11931faf583076f831d45d05d1517",
            "file": "src/app/gsf-growth-by-classification-chart/gsf-growth-by-classification-chart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-gsf-growth-by-classification-chart",
            "styleUrls": [
                "./gsf-growth-by-classification-chart.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./gsf-growth-by-classification-chart.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "chartData",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "any[]",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_chartData",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "chartType",
                    "defaultValue": "ChartType.AreaChart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "columnNames",
                    "defaultValue": "[\r\n    'Go Live Date',\r\n    'CNC Area',\r\n    'ISO-8 Area',\r\n    'ISO-7 Area'\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "data",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 33
                }
            ],
            "methodsClass": [
                {
                    "name": "chartOptions",
                    "args": [
                        {
                            "name": "data",
                            "type": "any[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "{ isStacked: string; height: number; legend: { position: string; maxLines: number; }; vAxis: { minValue: number; }; hAxis: { format: string; ticks: {}; }; }",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "any[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\nimport { ChartType } from 'angular-google-charts';\r\n\r\n@Component({\r\n  selector: 'app-gsf-growth-by-classification-chart',\r\n  templateUrl: './gsf-growth-by-classification-chart.component.html',\r\n  styleUrls: ['./gsf-growth-by-classification-chart.component.scss']\r\n})\r\nexport class GsfGrowthByClassificationChartComponent {\r\n  constructor() {}\r\n\r\n  private _chartData: any[] = [];\r\n\r\n  @Input()\r\n  get chartData(): any[] {\r\n    return this._chartData;\r\n  }\r\n  set chartData(v: any[]) {\r\n    if (v.some(Boolean)) {\r\n      this._chartData = v;\r\n      this.options = this.chartOptions(this._chartData);\r\n    }\r\n  }\r\n\r\n  chartType = ChartType.AreaChart;\r\n  columnNames = [\r\n    'Go Live Date',\r\n    'Area CNC Rooms',\r\n    'Area ISO-8 Rooms',\r\n    'Area ISO-7 Rooms'\r\n  ];\r\n  data: any[] = [];\r\n  options: any;\r\n\r\n  chartOptions(data: any[]) {\r\n    const ystart = new Date(data[0][0]).getFullYear();\r\n    const yend = new Date(data[data.length - 1][0]).getFullYear();\r\n    const ycount = yend - ystart + 1;\r\n    const hAxisTicks: any[] = [...Array(ycount).keys()].map(\r\n      (y) => new Date(y + ystart, 1, 1)\r\n    );\r\n\r\n    const options = {\r\n      // fullStacked\r\n      isStacked: 'absolute',\r\n      height: 300,\r\n      legend: { position: 'top', maxLines: 3 },\r\n      vAxis: {\r\n        minValue: 0\r\n      },\r\n      hAxis: {\r\n        format: 'yyyy',\r\n        ticks: hAxisTicks\r\n      }\r\n    };\r\n    return options;\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./gsf-growth-by-classification-chart.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 9
            },
            "accessors": {
                "chartData": {
                    "name": "chartData",
                    "setSignature": {
                        "name": "chartData",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "v",
                                "type": "any[]",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 18,
                        "jsdoctags": [
                            {
                                "name": "v",
                                "type": "any[]",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "chartData",
                        "type": "[]",
                        "returnType": "any[]",
                        "line": 15
                    }
                }
            },
            "templateData": "<google-chart\r\n  style=\"width: 100%\"\r\n  [type]=\"chartType\"\r\n  [data]=\"chartData\"\r\n  [columns]=\"columnNames\"\r\n  [options]=\"options\"\r\n>\r\n</google-chart>\r\n"
        },
        {
            "name": "GsfPieChartComponent",
            "id": "component-GsfPieChartComponent-8b6b0ac840a58d62d6cb1c183e05ff83902ad03df71ac9897f18770f34c336eabf3d26974abfa5b2181105dd51b04b8828c1e31ce916634f07cdea322395c624",
            "file": "src/app/gsf-pie-chart/gsf-pie-chart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-gsf-pie-chart",
            "styleUrls": [
                "./gsf-pie-chart.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./gsf-pie-chart.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "chartData",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "any[]",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "chartType",
                    "defaultValue": "ChartType.PieChart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "columnNames",
                    "defaultValue": "['Facility', 'GSF']",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 16
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\nimport { ChartType } from 'angular-google-charts';\r\n\r\n@Component({\r\n  selector: 'app-gsf-pie-chart',\r\n  templateUrl: './gsf-pie-chart.component.html',\r\n  styleUrls: ['./gsf-pie-chart.component.scss']\r\n})\r\nexport class GsfPieChartComponent {\r\n  constructor() {}\r\n\r\n  @Input()\r\n  chartData: any[] = [];\r\n\r\n  chartType = ChartType.PieChart;\r\n  columnNames = ['Facility', 'GSF'];\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./gsf-pie-chart.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 9
            },
            "templateData": "<google-chart\r\n  style=\"width: 100%\"\r\n  [type]=\"chartType\"\r\n  [data]=\"chartData\"\r\n  [columns]=\"columnNames\"\r\n>\r\n</google-chart>\r\n"
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-73450de17a98fecc6e09904db638a07850bee14e1e2f9a7191437cb856421b62c9f3eb63ef9567ab7512577d27d7f0a55af7f9c6f0c4231c50536bc4bf5902ac",
            "file": "src/stories/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-header",
            "styleUrls": [
                "./header.css"
            ],
            "styles": [],
            "template": "<header>    <div class=\"wrapper\">\n      <div>\n        <svg\n          width=\"32\"\n          height=\"32\"\n          viewBox=\"0 0 32 32\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <div *ngIf=\"user\">\n          <span class=\"welcome\">\n            Welcome, <b>{{ user.name }}</b\n            >!\n          </span>\n          <storybook-button\n            *ngIf=\"user\"\n            size=\"small\"\n            (onClick)=\"onLogout.emit($event)\"\n            label=\"Log out\"\n          ></storybook-button>\n        </div>\n        <div *ngIf=\"!user\">\n          <storybook-button\n            *ngIf=\"!user\"\n            size=\"small\"\n            class=\"margin-left\"\n            (onClick)=\"onLogin.emit($event)\"\n            label=\"Log in\"\n          ></storybook-button>\n          <storybook-button\n            *ngIf=\"!user\"\n            primary\n            size=\"small\"\n            primary=\"true\"\n            class=\"margin-left\"\n            (onClick)=\"onCreateAccount.emit($event)\"\n            label=\"Sign up\"\n          ></storybook-button>\n        </div>\n      </div>\n    </div>\n  </header>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 70,
                    "type": "User | null",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onCreateAccount",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 79,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogin",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 73,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogout",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 76,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\r\nimport { User } from './User';\r\n\r\n@Component({\r\n  selector: 'storybook-header',\r\n  template: `<header>\r\n    <div class=\"wrapper\">\r\n      <div>\r\n        <svg\r\n          width=\"32\"\r\n          height=\"32\"\r\n          viewBox=\"0 0 32 32\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n        >\r\n          <g fill=\"none\" fillRule=\"evenodd\">\r\n            <path\r\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\r\n              fill=\"#FFF\"\r\n            />\r\n            <path\r\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\r\n              fill=\"#555AB9\"\r\n            />\r\n            <path\r\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\r\n              fill=\"#91BAF8\"\r\n            />\r\n          </g>\r\n        </svg>\r\n        <h1>Acme</h1>\r\n      </div>\r\n      <div>\r\n        <div *ngIf=\"user\">\r\n          <span class=\"welcome\">\r\n            Welcome, <b>{{ user.name }}</b\r\n            >!\r\n          </span>\r\n          <storybook-button\r\n            *ngIf=\"user\"\r\n            size=\"small\"\r\n            (onClick)=\"onLogout.emit($event)\"\r\n            label=\"Log out\"\r\n          ></storybook-button>\r\n        </div>\r\n        <div *ngIf=\"!user\">\r\n          <storybook-button\r\n            *ngIf=\"!user\"\r\n            size=\"small\"\r\n            class=\"margin-left\"\r\n            (onClick)=\"onLogin.emit($event)\"\r\n            label=\"Log in\"\r\n          ></storybook-button>\r\n          <storybook-button\r\n            *ngIf=\"!user\"\r\n            primary\r\n            size=\"small\"\r\n            primary=\"true\"\r\n            class=\"margin-left\"\r\n            (onClick)=\"onCreateAccount.emit($event)\"\r\n            label=\"Sign up\"\r\n          ></storybook-button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </header>`,\r\n  styleUrls: ['./header.css']\r\n})\r\nexport default class HeaderComponent {\r\n  @Input()\r\n  user: User | null = null;\r\n\r\n  @Output()\r\n  onLogin = new EventEmitter<Event>();\r\n\r\n  @Output()\r\n  onLogout = new EventEmitter<Event>();\r\n\r\n  @Output()\r\n  onCreateAccount = new EventEmitter<Event>();\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".wrapper {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n  padding: 15px 20px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n}\n\nsvg {\n  display: inline-block;\n  vertical-align: top;\n}\n\nh1 {\n  font-weight: 900;\n  font-size: 20px;\n  line-height: 1;\n  margin: 6px 0 6px 10px;\n  display: inline-block;\n  vertical-align: top;\n}\n\nbutton + button {\n  margin-left: 10px;\n}\n\n.welcome {\n  color: #333;\n  font-size: 14px;\n  margin-right: 10px;\n}\n",
                    "styleUrl": "./header.css"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "HomeComponent",
            "id": "component-HomeComponent-a539315a79948f3b006a6e59689e97f5fde66e60b7cad03a7263affa2d137408ae44d5d8798dd1f86f9b50b50c6ddad4f2d9374729377d65422d76e4a34a8a54",
            "file": "src/app/home/home.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-home",
            "styleUrls": [
                "./home.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./home.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.scss']\r\n})\r\nexport class HomeComponent {}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "#header {\r\n  padding: 15px 0 10px 10px;\r\n  background: #f9f9f9 url('../../assets/images//DTR_red.png') repeat-x top left;\r\n  position: relative;\r\n\r\n  #title_logo {\r\n    position: absolute;\r\n    top: 20px;\r\n    left: 10px;\r\n  }\r\n\r\n  div {\r\n    font-size: 14px;\r\n    color: #555555;\r\n    padding: 0 0 0 100px;\r\n    margin: 0 0;\r\n    background: #f9f9f9;\r\n    font-weight: bold;\r\n  }\r\n\r\n  h1 {\r\n    font-weight: normal;\r\n    display: inline;\r\n    margin: 0px;\r\n    padding: 0 0 0 100px;\r\n    color: #9a0000;\r\n    font-size: 20px !important;\r\n    font-weight: bold;\r\n    letter-spacing: 1px;\r\n    background: #f9f9f9;\r\n\r\n    text-align: center;\r\n    font: bold 2em Myriad, Myriad Web, Verdana, Arial, Helvetica, sans-serif;\r\n    // line-height: 1.3em;\r\n  }\r\n\r\n  img {\r\n    vertical-align: middle;\r\n    border-style: none;\r\n  }\r\n}\r\n\r\n#mainMenu {\r\n  padding: 73px 0 0 0;\r\n  background: #b3172c url('../../assets/images/DTR_Banner_logo_red.png')\r\n    no-repeat top center;\r\n  margin: 0;\r\n}\r\n",
                    "styleUrl": "./home.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<app-nih-logo-header></app-nih-logo-header>\r\n\r\n<app-formula-header></app-formula-header>\r\n\r\n<app-nav-menu></app-nav-menu>\r\n\r\n<div class=\"content-container\">\r\n  <router-outlet></router-outlet>\r\n</div>\r\n\r\n<!-- <app-gsf-pie-chart></app-gsf-pie-chart> -->\r\n\r\n<!-- <app-chart-demo></app-chart-demo> -->\r\n"
        },
        {
            "name": "LeftNavComponent",
            "id": "component-LeftNavComponent-afad87c5fcf34fa77d65577321cefd0a10709852b135f5a3b356446843b0430f427f007447a0077f51be36b5e14cb2ecc4842be097e3d73469a3b2a60d447c74",
            "file": "src/app/left-nav/left-nav.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-left-nav",
            "styleUrls": [
                "./left-nav.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./left-nav.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-left-nav',\r\n  templateUrl: './left-nav.component.html',\r\n  styleUrls: ['./left-nav.component.css']\r\n})\r\nexport class LeftNavComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./left-nav.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"container-fluid\">\r\n    <div class=\"row flex-nowrap\">\r\n        <div class=\"col-auto col-md-3 col-xl-2 px-sm-2 px-0 bg-dark\">\r\n            <div class=\"d-flex flex-column align-items-center align-items-sm-start px-3 pt-2 text-white min-vh-100\">\r\n                <a href=\"/\" class=\"d-flex align-items-center pb-3 mb-md-0 me-md-auto text-white text-decoration-none\">\r\n                    <span class=\"fs-5 d-none d-sm-inline\">Menu</span>\r\n                </a>\r\n                <ul class=\"nav nav-pills flex-column mb-sm-auto mb-0 align-items-center align-items-sm-start\" id=\"menu\">\r\n                    <li class=\"nav-item\">\r\n                        <a href=\"#\" class=\"nav-link align-middle px-0\">\r\n                            <i class=\"fs-4 bi-house\"></i> <span class=\"ms-1 d-none d-sm-inline\">Home</span>\r\n                        </a>\r\n                    </li>\r\n                    <li>\r\n                        <a href=\"#submenu1\" data-bs-toggle=\"collapse\" class=\"nav-link px-0 align-middle\">\r\n                            <i class=\"fs-4 bi-speedometer2\"></i> <span class=\"ms-1 d-none d-sm-inline\">Dashboard</span> </a>\r\n                        <ul class=\"collapse show nav flex-column ms-1\" id=\"submenu1\" data-bs-parent=\"#menu\">\r\n                            <li class=\"w-100\">\r\n                                <a href=\"#\" class=\"nav-link px-0\"> <span class=\"d-none d-sm-inline\">Item</span> 1 </a>\r\n                            </li>\r\n                            <li>\r\n                                <a href=\"#\" class=\"nav-link px-0\"> <span class=\"d-none d-sm-inline\">Item</span> 2 </a>\r\n                            </li>\r\n                        </ul>\r\n                    </li>\r\n                    <li>\r\n                        <a href=\"#\" class=\"nav-link px-0 align-middle\">\r\n                            <i class=\"fs-4 bi-table\"></i> <span class=\"ms-1 d-none d-sm-inline\">Orders</span></a>\r\n                    </li>\r\n                    <li>\r\n                        <a href=\"#submenu2\" data-bs-toggle=\"collapse\" class=\"nav-link px-0 align-middle \">\r\n                            <i class=\"fs-4 bi-bootstrap\"></i> <span class=\"ms-1 d-none d-sm-inline\">Bootstrap</span></a>\r\n                        <ul class=\"collapse nav flex-column ms-1\" id=\"submenu2\" data-bs-parent=\"#menu\">\r\n                            <li class=\"w-100\">\r\n                                <a href=\"#\" class=\"nav-link px-0\"> <span class=\"d-none d-sm-inline\">Item</span> 1</a>\r\n                            </li>\r\n                            <li>\r\n                                <a href=\"#\" class=\"nav-link px-0\"> <span class=\"d-none d-sm-inline\">Item</span> 2</a>\r\n                            </li>\r\n                        </ul>\r\n                    </li>\r\n                    <li>\r\n                        <a href=\"#submenu3\" data-bs-toggle=\"collapse\" class=\"nav-link px-0 align-middle\">\r\n                            <i class=\"fs-4 bi-grid\"></i> <span class=\"ms-1 d-none d-sm-inline\">Products</span> </a>\r\n                            <ul class=\"collapse nav flex-column ms-1\" id=\"submenu3\" data-bs-parent=\"#menu\">\r\n                            <li class=\"w-100\">\r\n                                <a href=\"#\" class=\"nav-link px-0\"> <span class=\"d-none d-sm-inline\">Product</span> 1</a>\r\n                            </li>\r\n                            <li>\r\n                                <a href=\"#\" class=\"nav-link px-0\"> <span class=\"d-none d-sm-inline\">Product</span> 2</a>\r\n                            </li>\r\n                            <li>\r\n                                <a href=\"#\" class=\"nav-link px-0\"> <span class=\"d-none d-sm-inline\">Product</span> 3</a>\r\n                            </li>\r\n                            <li>\r\n                                <a href=\"#\" class=\"nav-link px-0\"> <span class=\"d-none d-sm-inline\">Product</span> 4</a>\r\n                            </li>\r\n                        </ul>\r\n                    </li>\r\n                    <li>\r\n                        <a href=\"#\" class=\"nav-link px-0 align-middle\">\r\n                            <i class=\"fs-4 bi-people\"></i> <span class=\"ms-1 d-none d-sm-inline\">Customers</span> </a>\r\n                    </li>\r\n                </ul>\r\n                <hr>\r\n                <div class=\"dropdown pb-4\">\r\n                    <a href=\"#\" class=\"d-flex align-items-center text-white text-decoration-none dropdown-toggle\" id=\"dropdownUser1\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                        <img src=\"https://github.com/mdo.png\" alt=\"hugenerd\" width=\"30\" height=\"30\" class=\"rounded-circle\">\r\n                        <span class=\"d-none d-sm-inline mx-1\">loser</span>\r\n                    </a>\r\n                    <ul class=\"dropdown-menu dropdown-menu-dark text-small shadow\">\r\n                        <li><a class=\"dropdown-item\" href=\"#\">New project...</a></li>\r\n                        <li><a class=\"dropdown-item\" href=\"#\">Settings</a></li>\r\n                        <li><a class=\"dropdown-item\" href=\"#\">Profile</a></li>\r\n                        <li>\r\n                            <hr class=\"dropdown-divider\">\r\n                        </li>\r\n                        <li><a class=\"dropdown-item\" href=\"#\">Sign out</a></li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"col py-3\">\r\n            Content area...\r\n        </div>\r\n    </div>\r\n</div>"
        },
        {
            "name": "NavMenuComponent",
            "id": "component-NavMenuComponent-f4f1279b19806eb0a61b4a36a54e83f0ca40eb4607a38fbe6a7eb8834e151dad98ea52330bfc2b16db9913d3bac90680186e54e4d4585db86cf96a741323d941",
            "file": "src/app/nav-menu/nav-menu.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "DialogService"
                },
                {
                    "name": "DataService"
                }
            ],
            "selector": "app-nav-menu",
            "styleUrls": [
                "./nav-menu.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./nav-menu.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "dialogService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DialogService",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "isExpanded",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "ref",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DynamicDialogRef",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "methodsClass": [
                {
                    "name": "collapse",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "contactUsClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "toggle",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { DialogService, DynamicDialogRef } from 'primeng/dynamicdialog';\r\n\r\nimport { Component } from '@angular/core';\r\nimport { ContactUsDialogComponent } from '../contact-us-dialog/contact-us-dialog.component';\r\nimport { ContactUsMessage } from '../api/models';\r\nimport { DataService } from '../api/data.service';\r\n\r\n@Component({\r\n  selector: 'app-nav-menu',\r\n  templateUrl: './nav-menu.component.html',\r\n  styleUrls: ['./nav-menu.component.scss'],\r\n  providers: [DialogService, DataService]\r\n})\r\nexport class NavMenuComponent {\r\n  ref!: DynamicDialogRef;\r\n\r\n  constructor(public dialogService: DialogService, private dataService: DataService) { }\r\n  isExpanded = false;\r\n\r\n  collapse() {\r\n    this.isExpanded = false;\r\n  }\r\n\r\n  toggle() {\r\n    this.isExpanded = !this.isExpanded;\r\n  }\r\n\r\n  contactUsClick() {\r\n    this.ref = this.dialogService.open(ContactUsDialogComponent, { header: 'Contact Us' });\r\n\r\n    this.ref.onClose.subscribe((message: ContactUsMessage) => {\r\n      if (message) {\r\n        this.dataService.contactUs(message).subscribe();\r\n      }\r\n    });\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".dropdown-hover:hover > .dropdown-menu {\r\n  display: inline-block;\r\n}\r\n\r\n.dropdown-hover > .dropdown-toggle:active {\r\n  /*Without this, clicking will make it sticky*/\r\n  pointer-events: none;\r\n}\r\n\r\n.dropdown-hover-right:hover > .dropdown-menu-right {\r\n  display: inline-block;\r\n  /* flex-direction: row-reverse; */\r\n}\r\n\r\n.dropdown-hover-right > .dropdown-toggle:active {\r\n  /*Without this, clicking will make it sticky*/\r\n  pointer-events: none;\r\n}\r\n\r\n.navbar .navbar-nav .nav-item:not(:last-child) .nav-link {\r\n  border-right: 0.5px solid gray;\r\n}\r\n",
                    "styleUrl": "./nav-menu.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "dialogService",
                        "type": "DialogService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "dataService",
                        "type": "DataService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 15,
                "jsdoctags": [
                    {
                        "name": "dialogService",
                        "type": "DialogService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "dataService",
                        "type": "DataService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n  <!-- Container wrapper -->\r\n  <div class=\"container-fluid\">\r\n    <!-- Toggle button -->\r\n    <button\r\n      class=\"navbar-toggler px-0\"\r\n      type=\"button\"\r\n      data-mdb-toggle=\"collapse\"\r\n      data-mdb-target=\"#navbarExampleOnHover\"\r\n      aria-controls=\"navbarExampleOnHover\"\r\n      aria-expanded=\"false\"\r\n      aria-label=\"Toggle navigation\"\r\n    >\r\n      <i class=\"fas fa-bars\"></i>\r\n    </button>\r\n\r\n    <!-- Collapsible wrapper -->\r\n    <div\r\n      class=\"collapse navbar-collapse justify-content-between\"\r\n      id=\"navbarSupportedContent\"\r\n    >\r\n      <ul class=\"navbar-nav\">\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link\"><b>Portfolios</b></a>\r\n        </li>\r\n        <li class=\"nav-item dropdown\">\r\n          <a\r\n            class=\"nav-link dropdown\"\r\n            href=\"#\"\r\n            id=\"portfolios-navbarDropdown\"\r\n            role=\"button\"\r\n            data-bs-toggle=\"dropdown\"\r\n            aria-expanded=\"false\"\r\n            >APF Portfolios\r\n          </a>\r\n          <ul class=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n            <li>\r\n              <a [routerLink]=\"['apf-portfolio/all']\" class=\"dropdown-item\"\r\n                >All APF</a\r\n              >\r\n            </li>\r\n            <li>\r\n              <a\r\n                [routerLink]=\"['apf-portfolio/nci']\"\r\n                class=\"dropdown-item\"\r\n                style=\"border-bottom: white\"\r\n                >NCI APF</a\r\n              >\r\n            </li>\r\n            <li>\r\n              <a [routerLink]=\"['apf-portfolio/cc']\" class=\"dropdown-item\"\r\n                >CC APF</a\r\n              >\r\n            </li>\r\n          </ul>\r\n        </li>\r\n      </ul>\r\n      <ul class=\"navbar-nav\">\r\n        <li\r\n          class=\"nav-item dropdown position-static\"\r\n          style=\"display: flex; flex-direction: row-reverse\"\r\n        >\r\n          <a\r\n            class=\"nav-link dropdown-toggle\"\r\n            href=\"#\"\r\n            id=\"navbarDropdown\"\r\n            role=\"button\"\r\n            data-bs-toggle=\"dropdown\"\r\n            aria-expanded=\"false\"\r\n          >\r\n            Resources\r\n          </a>\r\n          <!-- <a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"portfolios-navbarDropdown\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">APF Portfolios\r\n                  </a> -->\r\n          <!-- Dropdown menu -->\r\n          <div\r\n            class=\"dropdown-menu mt-0\"\r\n            aria-labelledby=\"navbarDropdown\"\r\n            style=\"border-top-left-radius: 0; border-top-right-radius: 0\"\r\n          >\r\n            <div class=\"container\">\r\n              <div class=\"row my-4\">\r\n                <div class=\"col-md-4 col-lg-3 mb-3 mb-lg-0\">\r\n                  <div class=\"list-group list-group-flush\">\r\n                    <p class=\"mb-0 list-group-item font-weight-bold\">\r\n                      <b>About FCIS</b>\r\n                    </p>\r\n                    <a\r\n                      [routerLink]=\"['resource', 'who-we-are']\"\r\n                      class=\"list-group-item list-group-item-action\"\r\n                      >Who We Are</a\r\n                    >\r\n                    <a\r\n                      [routerLink]=\"['resource', 'gui-org-chart']\"\r\n                      class=\"list-group-item list-group-item-action\"\r\n                      >FCIS Team</a\r\n                    >\r\n                    <a\r\n                      [routerLink]=\"['resource', 'functionalstmt']\"\r\n                      class=\"list-group-item list-group-item-action\"\r\n                    >\r\n                      FCIS Functional Statement\r\n                    </a>\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-md-4 col-lg-3 mb-3 mb-lg-0\">\r\n                  <div class=\"list-group list-group-flush\">\r\n                    <p class=\"mb-0 list-group-item font-weight-bold\">\r\n                      <b>Resources</b>\r\n                    </p>\r\n                    <a\r\n                      [routerLink]=\"['resource', 'gui-doc-abbreviations']\"\r\n                      class=\"list-group-item list-group-item-action\"\r\n                      >Abbreviations</a\r\n                    >\r\n                    <a\r\n                      [routerLink]=\"['resource', 'gui-doc-definitions']\"\r\n                      class=\"list-group-item list-group-item-action\"\r\n                      >Definitions</a\r\n                    >\r\n                    <a\r\n                      [routerLink]=\"['resource', 'gui-doc-faq']\"\r\n                      class=\"list-group-item list-group-item-action\"\r\n                      >FAQ</a\r\n                    >\r\n                    <a\r\n                      [routerLink]=\"['resource', 'gui-doc-wlinks']\"\r\n                      class=\"list-group-item list-group-item-action\"\r\n                      >News & Links</a\r\n                    >\r\n                    <a\r\n                      [routerLink]=\"['resource', 'gui-doc-drm']\"\r\n                      class=\"list-group-item list-group-item-action\"\r\n                      >DRM</a\r\n                    >\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-md-4 col-lg-3 mb-3 mb-md-0\">\r\n                  <div class=\"list-group list-group-flush\">\r\n                    <p class=\"mb-0 list-group-item font-weight-bold\">\r\n                      <b>SOP & WI</b>\r\n                    </p>\r\n                    <a [routerLink]=\"['resource', 'dfom-sop']\"\r\n                      class=\"list-group-item list-group-item-action\"\r\n                      >DFOM SOP & WI</a\r\n                    >\r\n                    <a href=\"\" class=\"list-group-item list-group-item-action\"\r\n                      >DTR SOP & WI</a\r\n                    >\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-md-4 col-lg-3 mb-3 mb-md-0\">\r\n                  <div class=\"list-group list-group-flush\">\r\n                    <p class=\"mb-0 list-group-item font-weight-bold\">\r\n                      <b>Forms</b>\r\n                    </p>\r\n                    <a href=\"\" class=\"list-group-item list-group-item-action\"\r\n                      >Form 1</a\r\n                    >\r\n                    <a href=\"\" class=\"list-group-item list-group-item-action\"\r\n                      >Form 2</a\r\n                    >\r\n                    <a href=\"\" class=\"list-group-item list-group-item-action\"\r\n                      >Form 3</a\r\n                    >\r\n                    <a href=\"\" class=\"list-group-item list-group-item-action\"\r\n                      >Form 4</a\r\n                    >\r\n                  </div>\r\n                </div>\r\n                <hr />\r\n                <div class=\"col-md-4 col-lg-3 mb-3 mb-md-0\">\r\n                  <div class=\"list-group list-group-flush\">\r\n                    <p class=\"mb-0 list-group-item font-weight-bold\">\r\n                      <b>Templates</b>\r\n                    </p>\r\n                    <a href=\"\" class=\"list-group-item list-group-item-action\"\r\n                      >TT 1</a\r\n                    >\r\n                    <a href=\"\" class=\"list-group-item list-group-item-action\"\r\n                      >TT 2</a\r\n                    >\r\n                    <a href=\"\" class=\"list-group-item list-group-item-action\"\r\n                      >TT 3</a\r\n                    >\r\n                    <a href=\"\" class=\"list-group-item list-group-item-action\"\r\n                      >TT 4</a\r\n                    >\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-md-4 col-lg-3\">\r\n                  <div class=\"list-group list-group-flush\">\r\n                    <p class=\"mb-0 list-group-item font-weight-bold\">\r\n                      <b>Outside Links</b>\r\n                    </p>\r\n                    <a href=\"\" class=\"list-group-item list-group-item-action\"\r\n                      >LL/CI Dashboard</a\r\n                    >\r\n                    <a href=\"\" class=\"list-group-item list-group-item-action\">\r\n                      FCIS Business Dashboard\r\n                    </a>\r\n                    <a href=\"\" class=\"list-group-item list-group-item-action\"\r\n                      >Master Control</a\r\n                    >\r\n                    <a href=\"\" class=\"list-group-item list-group-item-action\"\r\n                      >PI Dashboard</a\r\n                    >\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link\" (click)=\"contactUsClick()\">Contact US</a>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n\r\n    <!-- Collapsible wrapper -->\r\n  </div>\r\n  <!-- Container wrapper -->\r\n</nav>\r\n"
        },
        {
            "name": "NihLogoHeaderComponent",
            "id": "component-NihLogoHeaderComponent-e7d10c61ade244c5ef64b178855a9373f70a36eb0f54fe25aa706783349adc3bd1440fdc42964b48207d487821c5834ff9e993a7f77dedc85b49a870135fd761",
            "file": "src/app/nih-logo-header/nih-logo-header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-nih-logo-header",
            "styleUrls": [
                "./nih-logo-header.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./nih-logo-header.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-nih-logo-header',\r\n  templateUrl: './nih-logo-header.component.html',\r\n  styleUrls: ['./nih-logo-header.component.scss']\r\n})\r\nexport class NihLogoHeaderComponent {\r\n  constructor() {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "header {\r\n  padding: 15px 0 10px 10px;\r\n  background: #f9f9f9 url('../../assets/images//DTR_red.png') repeat-x top left;\r\n  position: relative;\r\n\r\n  .title-logo {\r\n    position: absolute;\r\n    top: 20px;\r\n    left: 10px;\r\n  }\r\n\r\n  div {\r\n    font-size: 14px;\r\n    color: #555555;\r\n    padding: 0 0 0 100px;\r\n    margin: 0 0;\r\n    background: #f9f9f9;\r\n    font-weight: bold;\r\n  }\r\n\r\n  h1 {\r\n    font-weight: normal;\r\n    display: inline;\r\n    margin: 0px;\r\n    padding: 0 0 0 100px;\r\n    color: #9a0000;\r\n    font-size: 20px !important;\r\n    font-weight: bold;\r\n    letter-spacing: 1px;\r\n    background: #f9f9f9;\r\n\r\n    text-align: center;\r\n    font: bold 2em Myriad, Myriad Web, Verdana, Arial, Helvetica, sans-serif;\r\n    // line-height: 1.3em;\r\n  }\r\n\r\n  img {\r\n    vertical-align: middle;\r\n    border-style: none;\r\n\r\n  }\r\n}\r\n",
                    "styleUrl": "./nih-logo-header.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "templateData": "<header>\r\n  <a class=\"title-logo\" href=\"http://www.nih.gov/\">\r\n    <img\r\n      src=\"assets/images/NIH_Master_Logo_Mark_2Color.png\"\r\n      title=\"National Institutes of Health\"\r\n      alt=\"NIH\"\r\n    />\r\n  </a>\r\n  <div>Office of Research Facilities</div>\r\n  <h1>Facilities Compliance and Inspection Section (FCIS)</h1>\r\n  <div>Division of Technical Resources/Technical Support Branch</div>\r\n</header>\r\n"
        },
        {
            "name": "PageComponent",
            "id": "component-PageComponent-59838d204801fdba4e6be58ad8511f0f6ce8616c7d3db2bd4403d9b2414283b6c782ce447de98ec6be3a27fca527e40964440db2824cde6c11faba4e6f661bd7",
            "file": "src/stories/page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-page",
            "styleUrls": [
                "./page.css"
            ],
            "styles": [],
            "template": "<article>    <!-- <storybook-header\n      [user]=\"user\"\n      (onLogout)=\"doLogout()\"\n      (onLogin)=\"doLogin()\"\n      (onCreateAccount)=\"doCreateAccount()\"\n    ></storybook-header> -->\n    <section>\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a\n          href=\"https://componentdriven.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page\n        states without needing to navigate to them in your app. Here are some\n        handy patterns for managing page data in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose\n          such data from the \"args\" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock\n          these services out using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a\n          href=\"https://storybook.js.org/tutorials/\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Storybook tutorials\n        </a>\n        . Read more in the\n        <a\n          href=\"https://storybook.js.org/docs\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          docs\n        </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg\n          width=\"10\"\n          height=\"10\"\n          viewBox=\"0 0 12 12\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "User | null",
                    "optional": false,
                    "description": "",
                    "line": 83
                }
            ],
            "methodsClass": [
                {
                    "name": "doCreateAccount",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 93,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "doLogin",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 89,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "doLogout",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 85,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { User } from './User';\r\n\r\n@Component({\r\n  selector: 'storybook-page',\r\n  template: `<article>\r\n    <!-- <storybook-header\r\n      [user]=\"user\"\r\n      (onLogout)=\"doLogout()\"\r\n      (onLogin)=\"doLogin()\"\r\n      (onCreateAccount)=\"doCreateAccount()\"\r\n    ></storybook-header> -->\r\n    <section>\r\n      <h2>Pages in Storybook</h2>\r\n      <p>\r\n        We recommend building UIs with a\r\n        <a\r\n          href=\"https://componentdriven.org\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          <strong>component-driven</strong>\r\n        </a>\r\n        process starting with atomic components and ending with pages.\r\n      </p>\r\n      <p>\r\n        Render pages with mock data. This makes it easy to build and review page\r\n        states without needing to navigate to them in your app. Here are some\r\n        handy patterns for managing page data in Storybook:\r\n      </p>\r\n      <ul>\r\n        <li>\r\n          Use a higher-level connected component. Storybook helps you compose\r\n          such data from the \"args\" of child component stories\r\n        </li>\r\n        <li>\r\n          Assemble data in the page component from your services. You can mock\r\n          these services out using Storybook.\r\n        </li>\r\n      </ul>\r\n      <p>\r\n        Get a guided tutorial on component-driven development at\r\n        <a\r\n          href=\"https://storybook.js.org/tutorials/\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          Storybook tutorials\r\n        </a>\r\n        . Read more in the\r\n        <a\r\n          href=\"https://storybook.js.org/docs\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          docs\r\n        </a>\r\n        .\r\n      </p>\r\n      <div class=\"tip-wrapper\">\r\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\r\n        <svg\r\n          width=\"10\"\r\n          height=\"10\"\r\n          viewBox=\"0 0 12 12\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n        >\r\n          <g fill=\"none\" fillRule=\"evenodd\">\r\n            <path\r\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\r\n              id=\"a\"\r\n              fill=\"#999\"\r\n            />\r\n          </g>\r\n        </svg>\r\n        Viewports addon in the toolbar\r\n      </div>\r\n    </section>\r\n  </article>`,\r\n  styleUrls: ['./page.css']\r\n})\r\nexport default class PageComponent {\r\n  user: User | null = null;\r\n\r\n  doLogout() {\r\n    this.user = null;\r\n  }\r\n\r\n  doLogin() {\r\n    this.user = { name: 'Jane Doe' };\r\n  }\r\n\r\n  doCreateAccount() {\r\n    this.user = { name: 'Jane Doe' };\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "section {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  font-size: 14px;\n  line-height: 24px;\n  padding: 48px 20px;\n  margin: 0 auto;\n  max-width: 600px;\n  color: #333;\n}\n\nsection h2 {\n  font-weight: 900;\n  font-size: 32px;\n  line-height: 1;\n  margin: 0 0 4px;\n  display: inline-block;\n  vertical-align: top;\n}\n\nsection p {\n  margin: 1em 0;\n}\n\nsection a {\n  text-decoration: none;\n  color: #1ea7fd;\n}\n\nsection ul {\n  padding-left: 30px;\n  margin: 1em 0;\n}\n\nsection li {\n  margin-bottom: 8px;\n}\n\nsection .tip {\n  display: inline-block;\n  border-radius: 1em;\n  font-size: 11px;\n  line-height: 12px;\n  font-weight: 700;\n  background: #e7fdd8;\n  color: #66bf3c;\n  padding: 4px 12px;\n  margin-right: 10px;\n  vertical-align: top;\n}\n\nsection .tip-wrapper {\n  font-size: 13px;\n  line-height: 20px;\n  margin-top: 40px;\n  margin-bottom: 40px;\n}\n\nsection .tip-wrapper svg {\n  display: inline-block;\n  height: 12px;\n  width: 12px;\n  margin-right: 4px;\n  vertical-align: top;\n  margin-top: 3px;\n}\n\nsection .tip-wrapper svg path {\n  fill: #1ea7fd;\n}\n",
                    "styleUrl": "./page.css"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "PiDataFilterToolbarComponent",
            "id": "component-PiDataFilterToolbarComponent-efc9ca30480c795b97aa35d1050fb673ce25ab3e417332a8a9ea4b5ef733dd5a3bf5ea1c932aa3197997f29145b5b0c0efc36064d5da2240d6d803279a86a7ec",
            "file": "src/app/pi-data-filter-toolbar/pi-data-filter-toolbar.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-pi-data-filter-toolbar",
            "styleUrls": [
                "./pi-data-filter-toolbar.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./pi-data-filter-toolbar.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "defaultEndDate",
                    "defaultValue": "new Date()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 48,
                    "type": "Date",
                    "decorators": []
                },
                {
                    "name": "defaultFacilityId",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "defaultInterval",
                    "defaultValue": "60",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 51,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "defaultStartDate",
                    "defaultValue": "(() => {\r\n    const yesterday = new Date();\r\n    yesterday.setDate(yesterday.getDate() - 1);\r\n    return yesterday;\r\n  })()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 41,
                    "type": "Date",
                    "decorators": []
                },
                {
                    "name": "defaultStatus",
                    "defaultValue": "'Sum All'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "facilities",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "any[]",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "filterChange",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 54,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "_statusOptions$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subject<literal type[]>",
                    "optional": false,
                    "description": "",
                    "line": 110,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "facilityStatusOptions",
                    "defaultValue": "[\r\n    { name: 'Composite Status', value: 'Sum All' }\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 106,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "filterForm",
                    "defaultValue": "this.fb.group({\r\n    facility: { repName: '', sectionName: '', value: 0 },\r\n    status: '',\r\n    startDate: new Date(),\r\n    endDate: new Date(),\r\n    interval: 0\r\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 89
                },
                {
                    "name": "intervalOptions",
                    "defaultValue": "[\r\n    { name: '10 Min', value: 10 },\r\n    { name: '30 Min', value: 30 },\r\n    { name: '1 Hour', value: 60 },\r\n    { name: '24 Hour', value: 1440 }\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 117,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "roomStatusOptions",
                    "defaultValue": "[\r\n    { name: 'Composite Status', value: 'Sum All' },\r\n    { name: 'Temp Status', value: 'Temp' },\r\n    { name: 'dP Status', value: 'DP' },\r\n    { name: 'RH Status', value: 'Hum' },\r\n    { name: 'ACH Status', value: 'Airx' }\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 98,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 77,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "search",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 124,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { BehaviorSubject, Observable, Subject, debounce, timer } from 'rxjs';\r\nimport {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  OnInit,\r\n  Output\r\n} from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\r\n\r\ntype filterFormData = {\r\n  facility: FormControl<{\r\n    repName: string;\r\n    sectionName: string;\r\n    value: number;\r\n  }>;\r\n  status: FormControl<string>;\r\n  startDate: FormControl<Date>;\r\n  endDate: FormControl<Date>;\r\n  interval: FormControl<number>;\r\n};\r\n\r\n@Component({\r\n  selector: 'app-pi-data-filter-toolbar',\r\n  templateUrl: './pi-data-filter-toolbar.component.html',\r\n  styleUrls: ['./pi-data-filter-toolbar.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class PiDataFilterToolbarComponent implements OnInit {\r\n  @Input()\r\n  facilities: any[] = [];\r\n\r\n  @Input()\r\n  defaultFacilityId: number = 0;\r\n\r\n  @Input()\r\n  defaultStatus: string = 'Sum All';\r\n\r\n  @Input()\r\n  defaultStartDate: Date = (() => {\r\n    const yesterday = new Date();\r\n    yesterday.setDate(yesterday.getDate() - 1);\r\n    return yesterday;\r\n  })();\r\n\r\n  @Input()\r\n  defaultEndDate: Date = new Date();\r\n\r\n  @Input()\r\n  defaultInterval: number = 60;\r\n\r\n  @Output()\r\n  filterChange = new EventEmitter<any>();\r\n\r\n  constructor(private fb: FormBuilder) {\r\n    // this.filterForm.valueChanges\r\n    //   //.pipe(debounce(() => timer(100)))\r\n    //   .subscribe((val: any) => {\r\n    //     this.filterChange.emit(val);\r\n    //   });\r\n\r\n    this._statusOptions$ = new BehaviorSubject(this.facilityStatusOptions);\r\n\r\n    this.filterForm.controls.facility.valueChanges.subscribe((fac: any) => {\r\n      const facId = Number(fac);\r\n      this._statusOptions$.next(\r\n        facId === 0 ? this.facilityStatusOptions : this.roomStatusOptions\r\n      );\r\n\r\n      if (facId === 0 && this.filterForm.controls.status.value !== 'Sum All') {\r\n        this.filterForm.patchValue({ status: 'Sum All' });\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.filterForm.patchValue({\r\n      facility: this.facilities\r\n        ? this.facilities.find((f) => f.facilityId == this.defaultFacilityId)\r\n        : { repName: '', sectionName: '', value: 0 },\r\n      status: this.defaultStatus,\r\n      startDate: this.defaultStartDate,\r\n      endDate: this.defaultEndDate,\r\n      interval: this.defaultInterval\r\n    });\r\n  }\r\n\r\n  filterForm = this.fb.group({\r\n    facility: { repName: '', sectionName: '', value: 0 },\r\n    status: '',\r\n    startDate: new Date(),\r\n    endDate: new Date(),\r\n    interval: 0\r\n  });\r\n\r\n\r\n  private roomStatusOptions = [\r\n    { name: 'Composite Status', value: 'Sum All' },\r\n    { name: 'Temp Status', value: 'Temp' },\r\n    { name: 'dP Status', value: 'DP' },\r\n    { name: 'RH Status', value: 'Hum' },\r\n    { name: 'ACH Status', value: 'Airx' }\r\n  ];\r\n\r\n  private facilityStatusOptions = [\r\n    { name: 'Composite Status', value: 'Sum All' }\r\n  ];\r\n\r\n  private _statusOptions$: Subject<{ name: string; value: string }[]>;\r\n  public get statusOptions$() {\r\n    return this._statusOptions$ as Observable<\r\n      { name: string; value: string }[]\r\n    >;\r\n  }\r\n\r\n  public intervalOptions = [\r\n    { name: '10 Min', value: 10 },\r\n    { name: '30 Min', value: 30 },\r\n    { name: '1 Hour', value: 60 },\r\n    { name: '24 Hour', value: 1440 }\r\n  ];\r\n\r\n  search() {\r\n    const searchVal = this.filterForm.value;\r\n    this.filterChange.emit(searchVal);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".filter-bar {\r\n  display: block;\r\n  label {\r\n    width: 120px;\r\n  }\r\n  .filter-control {\r\n    width: 408;\r\n  }\r\n  ::ng-deep input.p-component,\r\n  ::ng-deep div.p-dropdown {\r\n    width: 208px;\r\n  }\r\n}\r\n",
                    "styleUrl": "./pi-data-filter-toolbar.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 54,
                "jsdoctags": [
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "statusOptions$": {
                    "name": "statusOptions$",
                    "getSignature": {
                        "name": "statusOptions$",
                        "type": "",
                        "returnType": "",
                        "line": 111
                    }
                }
            },
            "templateData": "<div class=\"filter-bar\" [formGroup]=\"filterForm\">\r\n  <div>\r\n    <label>Facility</label>\r\n    <p-dropdown\r\n      [options]=\"facilities\"\r\n      placeholder=\"\"\r\n      optionLabel=\"repName\"\r\n      formControlName=\"facility\"\r\n    >\r\n    </p-dropdown>\r\n  </div>\r\n  <div>\r\n    <label>Status</label>\r\n    <p-dropdown\r\n      [options]=\"(statusOptions$ | async) || []\"\r\n      placeholder=\"\"\r\n      optionLabel=\"name\"\r\n      optionValue=\"value\"\r\n      formControlName=\"status\"\r\n    >\r\n    </p-dropdown>\r\n  </div>\r\n  <div>\r\n    <label>Start Date</label>\r\n    <p-calendar\r\n      inputId=\"basic\"\r\n      [showTime]=\"true\"\r\n      [hourFormat]=\"'12'\"\r\n      formControlName=\"startDate\"\r\n    ></p-calendar>\r\n  </div>\r\n  <div>\r\n    <label>End Date</label>\r\n    <p-calendar\r\n      inputId=\"basic\"\r\n      [showTime]=\"true\"\r\n      [hourFormat]=\"'12'\"\r\n      formControlName=\"endDate\"\r\n    ></p-calendar>\r\n  </div>\r\n  <div>\r\n    <label>Interval</label>\r\n    <p-dropdown\r\n      [options]=\"intervalOptions\"\r\n      placeholder=\"\"\r\n      optionLabel=\"name\"\r\n      optionValue=\"value\"\r\n      formControlName=\"interval\"\r\n    ></p-dropdown>\r\n  </div>\r\n  <div>\r\n    <button pButton (click)=\"search()\">Search</button>\r\n  </div>\r\n  <!-- <div>\r\n        <button pButton (click)=\"reset()\">Reset</button>\r\n    </div> -->\r\n</div>\r\n\r\n<!-- \r\n<asp:Table ID=\"Table1\" runat=\"server\" CellPadding=\"2\" Width=\"800px\"  CellSpacing=\"4\" BorderWidth=\"0\">\r\n    <asp:TableRow Font-Bold=\"true\" ForeColor=\"White\">\r\n         <asp:TableCell VerticalAlign=\"Top\">\r\n             Facility:\r\n             </asp:TableCell>\r\n          <asp:TableCell VerticalAlign=\"Top\">\r\n             Status:\r\n             </asp:TableCell>\r\n          <asp:TableCell VerticalAlign=\"Top\">\r\n             Start Date:\r\n             </asp:TableCell>\r\n         <asp:TableCell VerticalAlign=\"Top\">\r\n             End Date:\r\n             </asp:TableCell>\r\n        <asp:TableCell VerticalAlign=\"Top\">\r\n             Interval:\r\n             </asp:TableCell>\r\n        <asp:TableCell VerticalAlign=\"Top\">\r\n              \r\n             </asp:TableCell>\r\n        <asp:TableCell VerticalAlign=\"Top\">\r\n             \r\n             </asp:TableCell>\r\n        </asp:TableRow>\r\n        <asp:TableRow>\r\n         \r\n         <asp:TableCell VerticalAlign=\"Top\" HorizontalAlign=\"Right\">\r\n             <asp:DropDownList CssClass=\"form-control\" ID=\"ddlfacilSelector\"\r\n                   \r\n                 runat=\"server\" Width=\"280px\"  Height=\"40px\" >\r\n               \r\n                 <asp:ListItem Value=\"0\"> Portfolio (All) </asp:ListItem>\r\n                 <asp:ListItem Value=\"1\">   CC PET Radiopharmacy  </asp:ListItem>\r\n                 <asp:ListItem Value=\"2\">   CC B3 PET Radiochemistry  </asp:ListItem>\r\n                 <asp:ListItem Value=\"6\">  CC DLM Sterility </asp:ListItem>\r\n                 <asp:ListItem Value=\"3\"> CC CCE 2J Cell Therapy Lab </asp:ListItem>\r\n                 <asp:ListItem Value=\"5\">  CC CCE East Terrace Modular  </asp:ListItem>\r\n                 <asp:ListItem Value=\"10\"> NCI 1B42 </asp:ListItem>\r\n                 <asp:ListItem Value=\"11\"> NCI TIL Modular (T30) </asp:ListItem>\r\n                 <asp:ListItem Value=\"12\">  NCI Trailer 1 (10B)</asp:ListItem>\r\n                 <asp:ListItem Value=\"13\">  NCI Trailer 2 (10A)</asp:ListItem>\r\n                 <asp:ListItem Value=\"17\">   CC PHARMACY I-IVAU  </asp:ListItem>\r\n                 <asp:ListItem Value=\"19\">   NCI Hyperpolarized C-13   </asp:ListItem>\r\n           </asp:DropDownList>\r\n             </asp:TableCell>\r\n       \r\n         <asp:TableCell VerticalAlign=\"Top\" HorizontalAlign=\"Right\">\r\n             <asp:DropDownList CssClass=\"form-control\" ID=\"ddlStatusSelector\" runat=\"server\" ClientIDMode=\"Static\" Width=\"180px\" Height=\"40px\"  >\r\n                    <asp:ListItem Value=\"Sum All\" Selected=\"True\"  >Composite Status</asp:ListItem>\r\n                 <asp:ListItem Value=\"Temp\">Temp Status</asp:ListItem>\r\n                 <asp:ListItem Value=\"DP\">dP Status</asp:ListItem>\r\n                   <asp:ListItem Value=\"Hum\">RH Status</asp:ListItem>\r\n                   <asp:ListItem Value=\"Airx\">ACH Status</asp:ListItem>\r\n                  \r\n               </asp:DropDownList>\r\n             </asp:TableCell>\r\n       \r\n          <asp:TableCell VerticalAlign=\"Top\" HorizontalAlign=\"Right\">\r\n              <asp:TextBox ID=\"txtEndTime\" Text=\"Start Time\" ClientIDMode=\"Static\" TextMode=\"DateTimeLocal\"  Height=\"40px\"\r\n               CssClass=\"form-control\" runat=\"server\"  Width=\"240px\"></asp:TextBox>\r\n       \r\n             </asp:TableCell>\r\n        \r\n          <asp:TableCell VerticalAlign=\"Top\">\r\n              \r\n           \r\n\r\n               <asp:TextBox ID=\"txtStartTime\" Text=\"End Time\" ClientIDMode=\"Static\" TextMode=\"DateTimeLocal\"  Height=\"40px\"\r\n               CssClass=\"form-control\" runat=\"server\"   Width=\"240px\"></asp:TextBox> \r\n             </asp:TableCell>\r\n         \r\n          <asp:TableCell VerticalAlign=\"Top\" HorizontalAlign=\"Right\">\r\n              <asp:DropDownList ID=\"ddltimescaleSelector\" ClientIDMode=\"Static\" Width=\"120px\"  Height=\"40px\"\r\n                 CssClass=\"form-control\" runat=\"server\"  >\r\n               \r\n               <asp:ListItem Value=\"10\">10 Min</asp:ListItem>\r\n               <asp:ListItem Value=\"30\">30 Min</asp:ListItem>\r\n               <asp:ListItem Value=\"60\">1 Hour</asp:ListItem>\r\n               <asp:ListItem Value=\"1440\">24 Hour</asp:ListItem>\r\n           </asp:DropDownList>\r\n             </asp:TableCell>\r\n          <asp:TableCell VerticalAlign=\"Top\" HorizontalAlign=\"Right\">\r\n               <asp:Button ID=\"btnUpload\" TabIndex=\"15\" runat=\"server\"    Height=\"40px\"\r\n               CssClass=\"form-control\" Text=\"Show\" OnClick=\"btnUpload_Click\" BackColor=\"#b3112c\" ForeColor=\"White\" />\r\n             </asp:TableCell>\r\n          <asp:TableCell VerticalAlign=\"Top\" HorizontalAlign=\"Right\">\r\n               <asp:Button ID=\"btnReset\" TabIndex=\"15\" runat=\"server\"   Height=\"40px\"\r\n               CssClass=\"form-control\" Text=\"Reset\" OnClick=\"btnReset_Click\" BackColor=\"#b3112c\" ForeColor=\"White\" />\r\n             </asp:TableCell>\r\n         </asp:TableRow>\r\n             </asp:Table> -->\r\n"
        },
        {
            "name": "RoomDataTableComponent",
            "id": "component-RoomDataTableComponent-c24da73cdb11dc0d3edb488f7c9be5c3515350b6cece5f9d93aef89de6982ec481f138dd3c214494356e4926053630f4ff788b7af9bacfb73e8e26ec4c97d248",
            "file": "src/app/room-data-table/room-data-table.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-room-data-table",
            "styleUrls": [
                "./room-data-table.component.scss"
            ],
            "styles": [],
            "template": "<table class=\"table table-sm table-striped\" style=\"width:100%\">\n  <tbody>\n    <tr *ngFor=\"let field of displayFields\">\n      <td>\n        <strong>{{ field.name }}</strong>\n      </td>\n      <td>\n        <ng-container\n          *ngIf=\"\n            field.displayType == 'status';\n            then statusCircle;\n            else plainText\n          \"\n          >{{ field.value }}></ng-container\n        >\n        <ng-template #statusCircle>\n          <div\n            class=\"status-circle\"\n            [ngStyle]=\"{ background: statusColor(field.value) }\"\n          ></div>\n        </ng-template>\n        <ng-template #plainText>\n          {{ field.value }}\n        </ng-template>\n      </td>\n    </tr>\n\n    <tr></tr>\n  </tbody>\n</table>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "displayFields",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 44,
                    "type": "RoomDisplayField[]",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 48,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "statusColor",
                    "args": [
                        {
                            "name": "statusVal",
                            "type": "string | number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "\"green\" | \"gray\" | \"yellow\" | \"red\" | \"lightgray\"",
                    "typeParameters": [],
                    "line": 50,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "statusVal",
                            "type": "string | number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\r\n\r\nimport { RoomDisplayField } from '../apf-portfolio-ic-dashboard/apf-portfolio-ic-dashboard.service';\r\n\r\n@Component({\r\n  selector: 'app-room-data-table',\r\n  template: `\r\n    <table class=\"table table-sm table-striped\" style=\"width:100%\">\r\n      <tbody>\r\n        <tr *ngFor=\"let field of displayFields\">\r\n          <td>\r\n            <strong>{{ field.name }}</strong>\r\n          </td>\r\n          <td>\r\n            <ng-container\r\n              *ngIf=\"\r\n                field.displayType == 'status';\r\n                then statusCircle;\r\n                else plainText\r\n              \"\r\n              >{{ field.value }}></ng-container\r\n            >\r\n            <ng-template #statusCircle>\r\n              <div\r\n                class=\"status-circle\"\r\n                [ngStyle]=\"{ background: statusColor(field.value) }\"\r\n              ></div>\r\n            </ng-template>\r\n            <ng-template #plainText>\r\n              {{ field.value }}\r\n            </ng-template>\r\n          </td>\r\n        </tr>\r\n\r\n        <tr></tr>\r\n      </tbody>\r\n    </table>\r\n  `,\r\n  styleUrls: ['./room-data-table.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class RoomDataTableComponent {\r\n  @Input()\r\n  displayFields: RoomDisplayField[] = [];\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  statusColor(statusVal: string | number) {\r\n    switch (String(statusVal)) {\r\n      case '0':\r\n        return 'green';\r\n      case '1':\r\n        return 'gray';\r\n      case '2':\r\n        return 'yellow';\r\n      case '3':\r\n        return 'red';\r\n      default:\r\n        return 'lightgray';\r\n    }\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".status-circle {\r\n  display: inline-block;\r\n  border: 3px solid black;\r\n  width: 20px;\r\n  height: 20px;\r\n  border-radius: 13px;\r\n  vertical-align: text-bottom;\r\n  margin-left: 10px;\r\n}\r\n",
                    "styleUrl": "./room-data-table.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 44
            }
        },
        {
            "name": "RoomInfoDisplayComponent",
            "id": "component-RoomInfoDisplayComponent-b6099f70e68c1c87fc562e4321d852db465e5a915fac893ef4a70035313956bad5a6f25ba7e140a953e5769b8429a7aa2c8359abf22b354a3d25eda546b4825e",
            "file": "src/app/room-info-display/room-info-display.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-room-info-display",
            "styleUrls": [
                "./room-info-display.component.scss"
            ],
            "styles": [],
            "template": "<div style=\"display:flex\">\n  <div style=\"width:50%; padding:0px 20px\">\n    <app-room-data-table\n      [displayFields]=\"leftTableFields\"\n    ></app-room-data-table>\n  </div>\n  <div style=\"width:50%; padding:0px 20px;\">\n    <app-room-data-table\n      [displayFields]=\"rightTableFields\"\n    ></app-room-data-table>\n  </div>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "attribute",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "roomInfo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "literal type",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_attribute$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subject<string>",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_roomInfo$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subject<literal type>",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "leftTableFields",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "RoomDisplayField[]",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "rightTableFields",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "RoomDisplayField[]",
                    "optional": false,
                    "description": "",
                    "line": 30
                }
            ],
            "methodsClass": [
                {
                    "name": "achFields",
                    "args": [
                        {
                            "name": "roomInfo",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "{}",
                    "typeParameters": [],
                    "line": 200,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "roomInfo",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "compositeFields",
                    "args": [
                        {
                            "name": "roomInfo",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "{}",
                    "typeParameters": [],
                    "line": 74,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "roomInfo",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "dpFields",
                    "args": [
                        {
                            "name": "roomInfo",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "{}",
                    "typeParameters": [],
                    "line": 142,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "roomInfo",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "rhFields",
                    "args": [
                        {
                            "name": "roomInfo",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "{}",
                    "typeParameters": [],
                    "line": 170,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "roomInfo",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "tempFields",
                    "args": [
                        {
                            "name": "roomInfo",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "{}",
                    "typeParameters": [],
                    "line": 110,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "roomInfo",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { BehaviorSubject, Subject, combineLatest } from 'rxjs';\r\nimport { ChangeDetectionStrategy, Component, Input } from '@angular/core';\r\n\r\nimport { RoomDisplayField } from '../apf-portfolio-ic-dashboard/apf-portfolio-ic-dashboard.service';\r\n\r\n@Component({\r\n  selector: 'app-room-info-display',\r\n  template: `\r\n    <div style=\"display:flex\">\r\n      <div style=\"width:50%; padding:0px 20px\">\r\n        <app-room-data-table\r\n          [displayFields]=\"leftTableFields\"\r\n        ></app-room-data-table>\r\n      </div>\r\n      <div style=\"width:50%; padding:0px 20px;\">\r\n        <app-room-data-table\r\n          [displayFields]=\"rightTableFields\"\r\n        ></app-room-data-table>\r\n      </div>\r\n    </div>\r\n  `,\r\n  styleUrls: ['./room-info-display.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class RoomInfoDisplayComponent {\r\n  private _roomInfo$: Subject<{ [FileSystemFileHandle: string]: string }>;\r\n  private _attribute$: Subject<string>;\r\n\r\n  leftTableFields: RoomDisplayField[] = [];\r\n  rightTableFields: RoomDisplayField[] = [];\r\n\r\n  @Input()\r\n  set roomInfo(v: { [field: string]: string }) {\r\n    this._roomInfo$.next(v);\r\n  }\r\n\r\n  @Input()\r\n  set attribute(v: string) {\r\n    this._attribute$.next(v);\r\n  }\r\n\r\n  constructor() {\r\n    this._roomInfo$ = new BehaviorSubject<{ [field: string]: string }>({});\r\n    this._attribute$ = new BehaviorSubject<string>('');\r\n\r\n    combineLatest([this._roomInfo$, this._attribute$]).subscribe(\r\n      ([roomInfo, attribute]) => {\r\n        const attr = attribute.toLowerCase();\r\n        const fields =\r\n          attr === 'composite' || attr === 'sum all'\r\n            ? this.compositeFields(roomInfo)\r\n            : attr === 'temp'\r\n            ? this.tempFields(roomInfo)\r\n            : attr === 'hum'\r\n            ? this.rhFields(roomInfo)\r\n            : attr === 'airx'\r\n            ? this.achFields(roomInfo)\r\n            : attr === 'dp'\r\n            ? this.dpFields(roomInfo)\r\n            : [];\r\n\r\n        const mid = fields.length / 2 + (fields.length % 2);\r\n        this.leftTableFields = fields.slice(0, mid);\r\n        this.rightTableFields = fields.slice(mid);\r\n      }\r\n    );\r\n  }\r\n\r\n  // compositeStatus: statusValues[`${pin}|Composite`],\r\n  // tempStatus: statusValues[`${pin}|Temp`],\r\n  // rhStatus: statusValues[`${pin}|Hum`],\r\n  // dpStatus: statusValues[`${pin}|DP`]\r\n\r\n  private compositeFields(roomInfo: { [name: string]: any }) {\r\n    const status = roomInfo['compositeStatus'];\r\n    return [\r\n      { name: 'Room #', value: roomInfo['Room'] },\r\n      { name: 'Room Name', value: roomInfo['Description'] },\r\n      { name: 'Timestamp', value: new Date(status.timestamp).toLocaleString() },\r\n      { name: 'Classification', value: `ISO-${roomInfo['ISO']}` },\r\n      { name: 'GSF', value: roomInfo['gsf'] },\r\n      {\r\n        name: 'Composite Status',\r\n        value: status.numeric_value,\r\n        displayType: 'status'\r\n      },\r\n      {\r\n        name: 'Temp Status',\r\n        value: roomInfo['tempStatus']?.numeric_value,\r\n        displayType: 'status'\r\n      },\r\n      {\r\n        name: 'DP Status',\r\n        value: roomInfo['dpStatus']?.numeric_value,\r\n        displayType: 'status'\r\n      },\r\n      {\r\n        name: 'RH Status',\r\n        value: roomInfo['rhStatus']?.numeric_value,\r\n        displayType: 'status'\r\n      },\r\n      {\r\n        name: 'ACH Status',\r\n        value: roomInfo['achStatus']?.numeric_value,\r\n        displayType: 'status'\r\n      }\r\n    ];\r\n  }\r\n\r\n  private tempFields(roomInfo: { [name: string]: any }) {\r\n    const parameters =\r\n      roomInfo['roomParameters']?.find((p: any) => p.parameter === 'Temp') ||\r\n      {};\r\n    const status = roomInfo['tempStatus'];\r\n\r\n    return [\r\n      { name: 'Room #', value: roomInfo['Room'] },\r\n      { name: 'Room Name', value: roomInfo['Description'] },\r\n      { name: 'Classification', value: `ISO-${roomInfo['ISO']}` },\r\n      { name: 'GSF', value: roomInfo['gsf'] },\r\n      {\r\n        name: 'Room Status',\r\n        value: status.numeric_value,\r\n        displayType: 'status'\r\n      },\r\n      { name: 'Timestamp', value: new Date(status.timestamp).toLocaleString() },\r\n      { name: 'High Alarm Limit', value: roomInfo['HiHi'] || '' },\r\n      { name: 'High Alarm Delay', value: roomInfo['AlmHiDelay'] || '' },\r\n      { name: 'Target', value: roomInfo['Target'] || '' },\r\n      { name: 'Low Alarm Limit', value: roomInfo['HiHi'] || '' },\r\n      { name: 'Low Alarm Delay', value: roomInfo['AlmLoDelay'] || '' },\r\n      { name: 'BAS (SQL)', value: parameters.HTTE10 || 'n/a' },\r\n      { name: 'BAS (PI)', value: parameters.siemansPointName },\r\n      { name: 'Sensor Type', value: parameters.sensorType },\r\n      { name: 'Sensor Location', value: parameters.sensorLocation },\r\n      { name: 'Calibration Type', value: parameters.calibrationType },\r\n      { name: 'Calibration Period', value: parameters.calibrationPeriod },\r\n      { name: 'Next Calibration', value: parameters.nextCalibration }\r\n    ];\r\n  }\r\n\r\n  private dpFields(roomInfo: { [name: string]: any }) {\r\n    const parameters =\r\n      roomInfo['roomParameters']?.find((p: any) => p.parameter === 'DP') || {};\r\n    const status = roomInfo['dpStatus'];\r\n    return [\r\n      { name: 'Room to Room #', value: roomInfo['Room'] },\r\n      { name: 'Room Name', value: roomInfo['Description'] },\r\n      {\r\n        name: 'Room Status',\r\n        value: status.numeric_value,\r\n        displayType: 'status'\r\n      },\r\n      { name: 'Timestamp', value: new Date(status.timestamp).toLocaleString() },\r\n      { name: 'High Alarm Limit', value: roomInfo['HiHi'] || '' },\r\n      { name: 'High Alarm Delay', value: roomInfo['AlmHiDelay'] || '' },\r\n      { name: 'Target', value: roomInfo['Target'] || '' },\r\n      { name: 'Low Alarm Limit', value: roomInfo['HiHi'] || '' },\r\n      { name: 'Low Alarm Delay', value: roomInfo['AlmLoDelay'] || '' },\r\n      { name: 'BAS (SQL)', value: parameters.HTTE10 || 'n/a' },\r\n      { name: 'BAS (PI)', value: parameters.siemansPointName },\r\n      { name: 'Sensor Type', value: parameters.sensorType },\r\n      { name: 'Sensor Location', value: parameters.sensorLocation },\r\n      { name: 'Calibration Type', value: parameters.calibrationType },\r\n      { name: 'Calibration Period', value: parameters.calibrationPeriod },\r\n      { name: 'Next Calibration', value: parameters.nextCalibration }\r\n    ];\r\n  }\r\n\r\n  private rhFields(roomInfo: { [name: string]: any }) {\r\n    const parameters =\r\n      roomInfo['roomParameters']?.find((p: any) => p.parameter === 'Hum') || {};\r\n    const status = roomInfo['rhStatus'];\r\n    return [\r\n      { name: 'Room #', value: roomInfo['Room'] },\r\n      { name: 'Room Name', value: roomInfo['Description'] },\r\n      { name: 'Classification', value: `ISO-${roomInfo['ISO']}` },\r\n      { name: 'GSF', value: roomInfo['gsf'] },\r\n      {\r\n        name: 'Room Status',\r\n        value: status.numeric_value,\r\n        displayType: 'status'\r\n      },\r\n      { name: 'Timestamp', value: new Date(status.timestamp).toLocaleString() },\r\n      { name: 'High Alarm Limit', value: roomInfo['HiHi'] || '' },\r\n      { name: 'High Alarm Delay', value: roomInfo['AlmHiDelay'] || '' },\r\n      { name: 'RH Target Range', value: roomInfo['Target'] || '' },\r\n      { name: 'Low Alarm Limit', value: roomInfo['HiHi'] || '' },\r\n      { name: 'Low Alarm Delay', value: roomInfo['AlmLoDelay'] || '' },\r\n      { name: 'BAS (SQL)', value: parameters.HTTE10 || 'n/a' },\r\n      { name: 'BAS (PI)', value: parameters.siemansPointName },\r\n      { name: 'Sensor Type', value: parameters.sensorType },\r\n      { name: 'Sensor Location', value: parameters.sensorLocation },\r\n      { name: 'Calibration Type', value: parameters.calibrationType },\r\n      { name: 'Calibration Period', value: parameters.calibrationPeriod },\r\n      { name: 'Next Calibration', value: parameters.nextCalibration }\r\n    ];\r\n  }\r\n\r\n  private achFields(roomInfo: { [name: string]: any }) {\r\n    const parameters =\r\n      roomInfo['roomParameters']?.find((p: any) => p.parameter === 'Airx') ||\r\n      {};\r\n    const status = roomInfo['achStatus'];\r\n    return [\r\n      { name: 'Room #', value: roomInfo['Room'] },\r\n      { name: 'Room Name', value: roomInfo['Description'] },\r\n      { name: 'Classification', value: `ISO-${roomInfo['ISO']}` },\r\n      { name: 'GSF', value: roomInfo['gsf'] },\r\n      { name: 'Current Value', value: '' },\r\n      {\r\n        name: 'Room Status',\r\n        value: status.numeric_value,\r\n        displayType: 'status'\r\n      },\r\n      { name: 'Timestamp', value: new Date(status.timestamp).toLocaleString() },\r\n      { name: 'High Alarm Limit', value: roomInfo['HiHi'] || '' },\r\n      { name: 'High Alarm Delay', value: roomInfo['AlmHiDelay'] || '' },\r\n      { name: 'Target', value: roomInfo['Target'] || '' },\r\n      { name: 'Low Alarm Limit', value: roomInfo['HiHi'] || '' },\r\n      { name: 'Low Alarm Delay', value: roomInfo['AlmLoDelay'] || '' },\r\n      { name: 'BAS (SQL)', value: parameters.HTTE10 || 'n/a' },\r\n      { name: 'BAS (PI)', value: parameters.siemansPointName }\r\n    ];\r\n  }\r\n}\r\n\r\n// ACH Fields\r\n// Room #:\t2N307C\r\n// Room Name:\tTissue Culture\r\n// Classification:\tISO-7\r\n// GSF:\t214\r\n// Current Value:\t43.17\r\n// Room Status:\tWithin Spec\r\n// Timestamp:\t3/18/2023 7:55:44 PM\r\n// High Alarm Limit:\t100\r\n// High Alarm Delay:\t1800 (sec)\r\n// Target:\t40\r\n// Low Alarm Limit:\t30\r\n// Low Alarm Delay:\t1800 (sec)\r\n// BAS (SQL):\tn/a\r\n// BAS (PI):\tBMU.10.J.GMP.RM2N307C.AIRX\r\n\r\n// \"Facility\": \"2J\",\r\n// \"ISO\": 7,\r\n// \"Room\": \"2N307G\",\r\n// \"Conn_Room\": null,\r\n// \"Parameter\": \"Temp\",\r\n// \"LoLo\": 59,\r\n// \"LoWarn\": null,\r\n// \"HiHi\": 68,\r\n// \"HiWarn\": null,\r\n// \"Alarmable\": 1,\r\n// \"AlmRange\": \"Both\",\r\n// \"Description\": \"Small Tissue Culture\",\r\n// \"Target\": \"66\",\r\n// \"GraphType\": 0,\r\n// \"GraphLo\": 45,\r\n// \"GraphHi\": 90,\r\n// \"AlmHiDelay\": 1800,\r\n// \"WarnHiDelay\": 300,\r\n// \"AlmLoDelay\": 1800,\r\n// \"WarnLoDelay\": 300,\r\n// \"Comments\": null,\r\n// \"SiemensName\": \"BMU.10.J.GMP.RM2N307G.RMTEMP\",\r\n// \"JCIName\": \"N/A\"\r\n\r\n// Temp Fields\r\n// Room #:\t2N307G\r\n// Room Name:\tSmall Tissue Culture\r\n// Classification:\tISO-7\r\n// GSF:\t169\r\n// Current Value:\t66.49 °F\r\n// Room Status:\tWithin Spec\r\n// Timestamp:\t3/18/2023 7:47:05 PM\r\n// High Alarm Limit:\t68 °F\r\n// High Alarm Delay:\t1800 (sec)\r\n// Target:\t66 °F\r\n// Low Alarm Limit:\t59 °F\r\n// Low Alarm Delay:\t1800 (sec)\r\n// BAS (SQL):\tHTTE-10\r\n// BAS (PI):\tBMU.10.J.GMP.RM2N307G.RMTEMP\r\n// Sensor Type:\tDuct\r\n// Sensor Location:\t2N325MR\r\n// Calibration Type:\tSingle Point\r\n// Calibration Period:\tAnnual\r\n// Next Calibration:\t31-Aug-22\r\n\r\n// Sample Output from https://orfd-cogen.ors.nih.gov/pi-api/table-values?path=\\\\ORF-COGENAF\\cGMP\\APF_Limits\r\n// {\r\n//   \"Facility\": \"2J\",\r\n//   \"ISO\": 7,\r\n//   \"Room\": \"2N307G\",\r\n//   \"Conn_Room\": null,\r\n//   \"Parameter\": \"Airx\",\r\n//   \"LoLo\": 30,\r\n//   \"LoWarn\": null,\r\n//   \"HiHi\": 100,\r\n//   \"HiWarn\": null,\r\n//   \"Alarmable\": 1,\r\n//   \"AlmRange\": \"Both\",\r\n//   \"Description\": \"Small Tissue Culture\",\r\n//   \"Target\": \"40\",\r\n//   \"GraphType\": 0,\r\n//   \"GraphLo\": 0,\r\n//   \"GraphHi\": 75,\r\n//   \"AlmHiDelay\": 1800,\r\n//   \"WarnHiDelay\": 300,\r\n//   \"AlmLoDelay\": 1800,\r\n//   \"WarnLoDelay\": 300,\r\n//   \"Comments\": null,\r\n//   \"SiemensName\": \"BMU.10.J.GMP.RM2N307G.AIRX\",\r\n//   \"JCIName\": \"N/A\"\r\n// },\r\n\r\n//Composite Fields\r\n// Room #:\t2N3071\r\n// Room Name:\tAirlock #1\r\n// Timestamp:\t3/18/2023 7:53:37 PM\r\n// Classification:\tCNC\r\n// GSF:\t195\r\n// Composite Status:\tWithin Spec\r\n// Temp Status:\tWithin Spec\r\n// DP Status:\tWithin Spec\r\n// RH Status:\tWithin Spec\r\n// ACH Status:\tn/a\r\n\r\n// Temp Fields\r\n// Room #:\t2N307G\r\n// Room Name:\tSmall Tissue Culture\r\n// Classification:\tISO-7\r\n// GSF:\t169\r\n// Current Value:\t66.49 °F\r\n// Room Status:\tWithin Spec\r\n// Timestamp:\t3/18/2023 7:47:05 PM\r\n// High Alarm Limit:\t68 °F\r\n// High Alarm Delay:\t1800 (sec)\r\n// Target:\t66 °F\r\n// Low Alarm Limit:\t59 °F\r\n// Low Alarm Delay:\t1800 (sec)\r\n// BAS (SQL):\tHTTE-10\r\n// BAS (PI):\tBMU.10.J.GMP.RM2N307G.RMTEMP\r\n// Sensor Type:\tDuct\r\n// Sensor Location:\t2N325MR\r\n// Calibration Type:\tSingle Point\r\n// Calibration Period:\tAnnual\r\n// Next Calibration:\t31-Aug-22\r\n\r\n//DP Fields\r\n// Room to Room #:\t2N3072_2N3071_DP\r\n// Current Value:\t0.04 psi\r\n// Room Status:\tWithin Spec\r\n// Timestamp:\t3/18/2023 7:52:34 PM\r\n// High Alarm Limit:\t0.1 psi\r\n// High Alarm Delay:\t120 (sec)\r\n// Target:\t0.025 psi\r\n// Low Alarm Limit:\t0 psi\r\n// Low Alarm Delay:\t120 (sec)\r\n// BAS (SQL):\tDPTE-18\r\n// BAS (PI):\tBMU.10.J.GMP.2N3071.2N3072.DP\r\n// Sensor Type:\tRoom\r\n// Sensor Location:\t2N325MR\r\n// Calibration Type:\t3-Point\r\n// Calibration Period:\tAnnual\r\n// Next Calibration:\t31-Aug-22\r\n\r\n// RH Fields\r\n// Room #:\t2N3071\r\n// Room Name:\tAirlock #1\r\n// Classification:\tCNC\r\n// GSF:\t195\r\n// Current Value:\t34.64 %\r\n// Room Status:\tWithin Spec\r\n// Timestamp:\t3/18/2023 7:54:52 PM\r\n// High Alarm Limit:\t60 %\r\n// High Alarm Delay:\t1800 (sec)\r\n// RH Target Range:\t30-55 %\r\n// Low Alarm Limit:\t20 %\r\n// Low Alarm Delay:\t1800 (sec)\r\n// BAS (SQL):\tn/a\r\n// BAS (PI):\tBMU.10.J.GMP.RM2N3071.RMHUM\r\n// Sensor Type:\tn/a\r\n// Sensor Location:\tn/a\r\n// Calibration Type:\tn/a\r\n// Calibration Period:\tn/a\r\n// Next Calibration:\tn/a\r\n\r\n// ACH Fields\r\n// Room #:\t2N307C\r\n// Room Name:\tTissue Culture\r\n// Classification:\tISO-7\r\n// GSF:\t214\r\n// Current Value:\t43.17\r\n// Room Status:\tWithin Spec\r\n// Timestamp:\t3/18/2023 7:55:44 PM\r\n// High Alarm Limit:\t100\r\n// High Alarm Delay:\t1800 (sec)\r\n// Target:\t40\r\n// Low Alarm Limit:\t30\r\n// Low Alarm Delay:\t1800 (sec)\r\n// BAS (SQL):\tn/a\r\n// BAS (PI):\tBMU.10.J.GMP.RM2N307C.AIRX\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./room-info-display.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 40
            },
            "accessors": {
                "roomInfo": {
                    "name": "roomInfo",
                    "setSignature": {
                        "name": "roomInfo",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "v",
                                "type": "literal type",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 33,
                        "jsdoctags": [
                            {
                                "name": "v",
                                "type": "literal type",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                },
                "attribute": {
                    "name": "attribute",
                    "setSignature": {
                        "name": "attribute",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "v",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 38,
                        "jsdoctags": [
                            {
                                "name": "v",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                }
            }
        },
        {
            "name": "StaticContentContainerComponent",
            "id": "component-StaticContentContainerComponent-17af2435a8c95202a3a8815f0dc5f089c3ed88021403cf15de6583229c464e4c404b65c991192e2edf86dcca07c773466b4a33b34f4c3ca7018e5d4f749b0b4b",
            "file": "src/app/static-content-container/static-content-container.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-static-content-container",
            "styleUrls": [
                "./static-content-container.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./static-content-container.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "page",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "page$",
                    "defaultValue": "new Subject()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subject<string>",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "safeHtml",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 17
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\nimport { Subject, mergeMap } from 'rxjs';\r\n\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\n\r\ndeclare const $: any;\r\n\r\n@Component({\r\n  selector: 'app-static-content-container',\r\n  templateUrl: './static-content-container.component.html',\r\n  styleUrls: ['./static-content-container.component.scss']\r\n})\r\nexport class StaticContentContainerComponent {\r\n  safeHtml: any;\r\n\r\n  page$: Subject<string> = new Subject();\r\n  @Input()\r\n  set page(v: string) {\r\n    this.page$.next(v);\r\n  }\r\n  \r\n  constructor(private sanitizer: DomSanitizer, private route: ActivatedRoute, private http:HttpClient) {\r\n\r\n    this.page$.pipe(mergeMap((p)=>this.http.get(`${environment.siteRootUrl}/assets/static-content/${p}`, {responseType: 'text'}))).subscribe((text) => {\r\n      this.safeHtml = text;\r\n\r\n      window.setTimeout(()=>{\r\n        $('.nav-toggle').click( () => {\r\n            $('#collapse').toggle();\r\n            const collapsed = $('#collapse').css(\"display\") == \"none\";\r\n            $('.nav-toggle').html(collapsed ? 'Read More...' : 'Read Less...');\r\n        });\r\n      },0);\r\n      \r\n    });\r\n\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./static-content-container.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "sanitizer",
                        "type": "DomSanitizer",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 23,
                "jsdoctags": [
                    {
                        "name": "sanitizer",
                        "type": "DomSanitizer",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "page": {
                    "name": "page",
                    "setSignature": {
                        "name": "page",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "v",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 21,
                        "jsdoctags": [
                            {
                                "name": "v",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                }
            },
            "templateData": "<div [innerHTML]=\"safeHtml | sanitizedHtml\"></div>\r\n\r\n\r\n<script>\r\n    // $(document).ready(function () {\r\n    //     $('.nav-toggle').click(function () {\r\n    //         var collapse_content_selector = $(this).attr('href');\r\n    //         var toggle_switch = $(this);\r\n    //         $(collapse_content_selector).toggle(function () {\r\n    //             if ($(this).css('display') == 'none') {\r\n    //                 toggle_switch.html('Read More ...');\r\n    //             } else {\r\n    //                 toggle_switch.html('Read Less...');\r\n    //             }\r\n    //         });\r\n    //     });\r\n    // });\r\n// window.setTimeout(()=>{\r\n//     $('.nav-toggle').click( () => {\r\n//         alert('click');\r\n//         // var collapse_content_selector = $(this).attr('href');\r\n//         // var toggle_switch = $(this);\r\n//         // $(collapse_content_selector).toggle( () => {\r\n//         //     if ($(this).css('display') == 'none') {\r\n//         //         toggle_switch.html('Read More ...');\r\n//         //     } else {\r\n//         //         toggle_switch.html('Read Less...');\r\n//         //     }\r\n//         // });\r\n//       });\r\n// },10)\r\n\r\n</script>"
        },
        {
            "name": "StaticContentEditorComponent",
            "id": "component-StaticContentEditorComponent-8b9b998e92be4cd9e99b2bb770f67413314e4726adf6e8b09897c7220bd18b09adaad52b8ba43f4e76b87e8919686c8a48d2f22590354ee7f27ca3e04478e5d9",
            "file": "src/app/static-content-editor/static-content-editor.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-static-content-editor",
            "styleUrls": [
                "./static-content-editor.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./static-content-editor.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "initialContent",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onSave",
                    "defaultValue": "new EventEmitter<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "editorForm",
                    "defaultValue": "this.fb.group({\r\n    editorContent: ''\r\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "save",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-static-content-editor',\r\n  templateUrl: './static-content-editor.component.html',\r\n  styleUrls: ['./static-content-editor.component.scss']\r\n})\r\nexport class StaticContentEditorComponent implements OnInit {\r\n  @Input() initialContent: string = '';\r\n  @Output() onSave = new EventEmitter<string>();\r\n\r\n  editorForm = this.fb.group({\r\n    editorContent: ''\r\n  });\r\n\r\n  constructor(private fb: FormBuilder) {}\r\n\r\n  ngOnInit(): void {\r\n    this.editorForm.patchValue({ editorContent: this.initialContent });\r\n  }\r\n\r\n  save() {\r\n    const content = this.editorForm.get('editorContent')?.value || '';\r\n    this.onSave.emit(content);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./static-content-editor.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 15,
                "jsdoctags": [
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div [formGroup]=\"editorForm\">\r\n  <editor\r\n    apiKey=\"ojb6b43xupdnswfj06s4xwmmscgqq27vxu4a0410zkolh0cs\"\r\n    formControlName=\"editorContent\"\r\n    [init]=\"{ plugins: 'lists link image table code help wordcount' }\"\r\n  ></editor>\r\n\r\n  <button pButton (click)=\"save()\">Save</button>\r\n</div>\r\n"
        },
        {
            "name": "StaticContentPageComponent",
            "id": "component-StaticContentPageComponent-7efb3e76426ccb453b16eb778a66cf1dd9cfa7833554de5bf37f841819e50522336baeed208361e6e710bfc41dbe4a1725681bcb679d1d6c39cfa4d5e7a26e3b",
            "file": "src/app/static-content-page/static-content-page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-static-content-page",
            "styleUrls": [],
            "styles": [],
            "template": "<app-static-content-container [page]=\"page\"></app-static-content-container>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "page",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ActivatedRoute, Params } from '@angular/router';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-static-content-page',\n  template: '<app-static-content-container [page]=\"page\"></app-static-content-container>',\n  styleUrls: []\n})\nexport class StaticContentPageComponent implements OnInit {\n\n  public page: string = ''\n  constructor(private route: ActivatedRoute) {\n    this.route.params.subscribe((params: Params) => {\n      this.page = `${params.page}.html`;\n    });\n  }\n\n  ngOnInit(): void {\n  }\n\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ]
        },
        {
            "name": "SvgStatusMapComponent",
            "id": "component-SvgStatusMapComponent-4ef37f9ba1016aae6d15647e6a4567fe68f83e86a7b652d76ecf24be48e9ecd5cd4944b0c6212ea6b5298987f588407a0b7238a310f33ee503e7bd9842dcb827",
            "file": "src/app/svg-status-map/svg-status-map.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-svg-status-map",
            "styleUrls": [
                "./svg-status-map.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./svg-status-map.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundImageUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 120,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "highlightedMapPin",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 102,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "pinStates",
                    "defaultValue": "{}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 98,
                    "type": "literal type",
                    "decorators": []
                },
                {
                    "name": "svgMap",
                    "defaultValue": "defaultSvgMap",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 95,
                    "type": "SvgMap",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "pinClick",
                    "defaultValue": "new EventEmitter<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 137,
                    "type": "EventEmitter<string>"
                },
                {
                    "name": "pinMouseOut",
                    "defaultValue": "new EventEmitter<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 143,
                    "type": "EventEmitter<string>"
                },
                {
                    "name": "pinMouseOver",
                    "defaultValue": "new EventEmitter<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 140,
                    "type": "EventEmitter<string>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "_backgroundImageUrl",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 118,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_highlightedMapPin",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 100,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "backgroundStyle",
                    "defaultValue": "{}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 134,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "mapTooltip",
                    "args": [
                        {
                            "name": "pin",
                            "type": "SvgMapPin",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "pin",
                            "type": "SvgMapPin",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "mouseOut",
                    "args": [
                        {
                            "name": "locationId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 163,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "locationId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "mouseOver",
                    "args": [
                        {
                            "name": "locationId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 153,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "locationId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 56,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "pinClass",
                    "args": [
                        {
                            "name": "locationId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 145,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "locationId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\r\n  AfterViewInit,\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  OnChanges,\r\n  Output\r\n} from '@angular/core';\r\nimport { SvgMap, SvgMapPin, defaultSvgMap } from '../api/models';\r\n\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\n\r\ndeclare const bootstrap: any;\r\n\r\nexport interface PinHoverInfo {\r\n  locationId: string;\r\n  status: 'on' | 'off';\r\n}\r\n\r\n@Component({\r\n  selector: 'app-svg-status-map',\r\n  templateUrl: './svg-status-map.component.html',\r\n  styleUrls: ['./svg-status-map.component.scss']\r\n})\r\nexport class SvgStatusMapComponent implements OnChanges {\r\n  constructor(private sanitizer: DomSanitizer) {}\r\n\r\n  mapTooltip(pin: SvgMapPin) {\r\n    const tooltipHtml = `\r\n    <div class=\"label-tooltip\">\r\n      Room: ${pin.title} <br>\r\n\r\n    </div>`;\r\n\r\n    // Room #: ${room.roomNumber} <br>\r\n    // Class: ${room.iso} <br>\r\n    // GSF: ${room.sq}\r\n\r\n    // Room: ${room.roomName} <br>\r\n    // Room #: ${room.roomNumber} <br>\r\n    // Class: ${room.iso} <br>\r\n    // GSF: ${room.sq}\r\n    // const tooltipHtml = `\r\n    //   <div align=\"left\" class=\"label-tooltip\">\r\n    //     <table>\r\n    //      <tr><td> Room: ${room.roomName} </td></tr>\r\n    //      <tr><td><b> Room #: ${room.roomNumber} </b></td></tr>\r\n    //      <tr><td><b> Class: ${room.iso} </b></td></tr>\r\n    //      <tr><td><b> GSF: ${room.sq} </b></td></tr>\r\n    //      </table>\r\n    //   </div>\r\n    // `;\r\n    return tooltipHtml;\r\n  }\r\n\r\n  ngOnChanges() {\r\n    for (const pin of this.svgMap.svgMapPins) {\r\n      window.setTimeout(() => {\r\n        const pinElem = document.getElementById('pin_' + pin.locationId);\r\n        if (pinElem) {\r\n          const tooltip = new bootstrap.Tooltip(pinElem, {\r\n            placement: 'right',\r\n            html: true,\r\n            title: '<div>' + pin.title + '</div>'\r\n          });\r\n        }\r\n      }, 100);\r\n\r\n      // const roomData = this.chartData.locations[locationName];\r\n      // if(roomData) {\r\n      //   const roomTooltip = this.roomLabelTooltip(roomData);\r\n      //   const tooltip = new bootstrap.Tooltip(label, {\r\n      //     placement:'right',\r\n      //     html: true,\r\n      //     title: roomTooltip\r\n      //   });\r\n      // }\r\n    }\r\n\r\n    for (const pin of this.svgMap.svgMapArrows) {\r\n      window.setTimeout(() => {\r\n        const pinElem = document.getElementById('pin_' + pin.locationId);\r\n        if (pinElem) {\r\n          const tooltip = new bootstrap.Tooltip(pinElem, {\r\n            placement: 'right',\r\n            html: true,\r\n            title: '<div>' + pin.locationId + '</div>'\r\n          });\r\n        }\r\n      }, 100);\r\n    }\r\n  }\r\n\r\n  @Input()\r\n  svgMap: SvgMap = defaultSvgMap;\r\n\r\n  @Input()\r\n  pinStates: { [name: string]: string } = {};\r\n\r\n  private _highlightedMapPin = '';\r\n  @Input()\r\n  get highlightedMapPin() {\r\n    return this._highlightedMapPin;\r\n  }\r\n  set highlightedMapPin(v: string) {\r\n    this._highlightedMapPin = v;\r\n    document.querySelectorAll('.pin-border').forEach((elem) => {\r\n      (elem as HTMLElement).style.fill = 'grey';\r\n    });\r\n    const target = document.querySelector(\r\n      '.pin-border[data-locationId=\"' + v + '\"]'\r\n    ) as HTMLElement;\r\n    if (target) {\r\n      target.style.fill = 'black';\r\n    }\r\n  }\r\n\r\n  private _backgroundImageUrl = '';\r\n  @Input()\r\n  get backgroundImageUrl() {\r\n    return this._backgroundImageUrl;\r\n  }\r\n  set backgroundImageUrl(v) {\r\n    this._backgroundImageUrl = v;\r\n\r\n    this.backgroundStyle = {\r\n      'background-image': 'url(' + this.backgroundImageUrl + ')',\r\n      'background-size': '100% 100%',\r\n      'background-repeat': 'no-repeat',\r\n      border: '1px solid blue;'\r\n    };\r\n  }\r\n\r\n  public backgroundStyle = {};\r\n\r\n  @Output()\r\n  pinClick: EventEmitter<string> = new EventEmitter<string>();\r\n\r\n  @Output()\r\n  pinMouseOver: EventEmitter<string> = new EventEmitter<string>();\r\n\r\n  @Output()\r\n  pinMouseOut: EventEmitter<string> = new EventEmitter<string>();\r\n\r\n  pinClass(locationId: string) {\r\n    if (this.pinStates[locationId]) {\r\n      return `pin-${this.pinStates[locationId]}`;\r\n    } else {\r\n      return 'pin-lightgray';\r\n    }\r\n  }\r\n\r\n  mouseOver(locationId: string) {\r\n    const target = document.querySelector(\r\n      '.pin-border[data-locationId=\"' + locationId + '\"]'\r\n    ) as HTMLElement;\r\n    if (target) {\r\n      target.style.fill = 'black';\r\n    }\r\n    this.pinMouseOver.emit(locationId);\r\n  }\r\n\r\n  mouseOut(locationId: string) {\r\n    const target = document.querySelector(\r\n      '.pin-border[data-locationId=\"' + locationId + '\"]'\r\n    ) as HTMLElement;\r\n    if (target) {\r\n      target.style.fill = 'grey';\r\n    }\r\n    this.pinMouseOut.emit(locationId);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "svg {\r\n  background-size: 100% 100%;\r\n  background-repeat: no-repeat;\r\n  max-width: 900px;\r\n  width: 90%;\r\n}\r\n\r\n.map-pin {\r\n  cursor: pointer;\r\n}\r\n\r\n.pin-path {\r\n  fill-opacity: 0.25;\r\n  stroke: #000;\r\n  stroke-linecap: round;\r\n  stroke-linejoin: round;\r\n  // fill-opacity: 0.25;\r\n  // transition: fill 0.2s;\r\n}\r\n\r\n.pin-green {\r\n  fill: green;\r\n}\r\n\r\n.pin-red {\r\n  fill: red;\r\n}\r\n\r\n.pin-yellow {\r\n  fill: yellow;\r\n}\r\n\r\n.pin-gray {\r\n  fill: gray;\r\n}\r\n\r\n.pin-lightgray {\r\n  fill: lightgray;\r\n}\r\n\r\n.pin-white {\r\n  fill: white;\r\n}\r\n\r\ncircle {\r\n  cursor: pointer;\r\n}\r\n\r\n.pin-border {\r\n  fill: grey;\r\n  stroke: #000;\r\n  stroke-miterlimit: 10;\r\n  stroke-width: 0.5px;\r\n\r\n  :hover {\r\n    fill: black;\r\n  }\r\n}\r\n\r\npin-border-highlighted {\r\n  fill: black;\r\n}\r\n",
                    "styleUrl": "./svg-status-map.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "sanitizer",
                        "type": "DomSanitizer",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 25,
                "jsdoctags": [
                    {
                        "name": "sanitizer",
                        "type": "DomSanitizer",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnChanges"
            ],
            "accessors": {
                "highlightedMapPin": {
                    "name": "highlightedMapPin",
                    "setSignature": {
                        "name": "highlightedMapPin",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "v",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 105,
                        "jsdoctags": [
                            {
                                "name": "v",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "highlightedMapPin",
                        "type": "",
                        "returnType": "",
                        "line": 102
                    }
                },
                "backgroundImageUrl": {
                    "name": "backgroundImageUrl",
                    "setSignature": {
                        "name": "backgroundImageUrl",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "v",
                                "type": "",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 123,
                        "jsdoctags": [
                            {
                                "name": "v",
                                "type": "",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "backgroundImageUrl",
                        "type": "",
                        "returnType": "",
                        "line": 120
                    }
                }
            },
            "templateData": "<!-- <div>\r\n  <h2>Background</h2>\r\n  <img src=\"assets/images/floor-plans/PET_B3_Background.png\" />\r\n</div> -->\r\n\r\n<svg\r\n  xmlns=\"http://www.w3.org/2000/svg\"\r\n  [attr.viewBox]=\"svgMap.viewbox\"\r\n  [style]=\"backgroundStyle\"\r\n>\r\n  <defs [innerHtml]=\"svgMap.defs | sanitizedHtml\"></defs>\r\n  <g\r\n    *ngIf=\"svgMap.backgroundSvg\"\r\n    id=\"background\"\r\n    [innerHtml]=\"svgMap.backgroundSvg | sanitizedHtml\"\r\n  ></g>\r\n  <g *ngFor=\"let pin of svgMap.svgMapPins\" [attr.id]=\"'pin_' + pin.locationId\">\r\n    <a\r\n      class=\"map-pin\"\r\n      data-toggle=\"tooltip\"\r\n      (click)=\"pinClick.emit(pin.locationId)\"\r\n      (mouseover)=\"mouseOver(pin.locationId)\"\r\n      (mouseout)=\"mouseOut(pin.locationId)\"\r\n    >\r\n      <path\r\n        *ngIf=\"pin.path\"\r\n        class=\"pin-path\"\r\n        [attr.d]=\"pin.path\"\r\n        [attr.data-locationId]=\"pin.locationId\"\r\n      />\r\n      <circle\r\n        *ngIf=\"!pin.path\"\r\n        class=\"pin-border\"\r\n        [attr.data-locationId]=\"pin.locationId\"\r\n        [attr.cx]=\"pin.cx\"\r\n        [attr.cy]=\"pin.cy\"\r\n        [attr.r]=\"pin.r + 5\"\r\n      />\r\n\r\n      <circle\r\n        [ngClass]=\"pinClass(pin.locationId)\"\r\n        [attr.cx]=\"pin.cx\"\r\n        [attr.cy]=\"pin.cy\"\r\n        [attr.r]=\"pin.r\"\r\n      />\r\n    </a>\r\n  </g>\r\n\r\n  <g\r\n    *ngFor=\"let arrow of svgMap.svgMapArrows\"\r\n    [attr.id]=\"'pin_' + arrow.locationId\"\r\n  >\r\n    <a\r\n      class=\"map-pin\"\r\n      data-toggle=\"tooltip\"\r\n      (click)=\"pinClick.emit(arrow.locationId)\"\r\n      (mouseover)=\"mouseOver(arrow.locationId)\"\r\n      (mouseout)=\"mouseOut(arrow.locationId)\"\r\n    >\r\n      <polygon\r\n        class=\"pin-border\"\r\n        [attr.data-locationId]=\"arrow.locationId\"\r\n        [attr.points]=\"arrow.arrowOutlinePoints\"\r\n      ></polygon>\r\n      <polygon\r\n        [ngClass]=\"pinClass(arrow.locationId)\"\r\n        [attr.points]=\"arrow.arrowInsidePoints\"\r\n      ></polygon>\r\n    </a>\r\n  </g>\r\n</svg>\r\n\r\n<!-- <img\r\n  src=\"assets/images/floor-plans/FloorPlanColorKey.svg\"\r\n  style=\"max-width: 100%; border: 1px solid red\"\r\n/> -->\r\n\r\n<script>\r\n  $('[data-toggle=\"tooltip\"]').tooltip();\r\n</script>\r\n\r\n<!-- <g id=\"dPArrowsFID5\">\r\n  <g id=\"pin1CM100B_1CM100_DP\">\r\n      <polygon id=\"pinBack1CM100B_1CM100_DP\" class=\"stGray\" points=\"152.15 304.26 170.23 321.72 170.23 311.21 198.53 311.21 198.53 297.29 170.23 297.29 170.23 286.72 152.15 304.26\" />\r\n      <polygon id=\"pinColor1CM100B_1CM100_DP\" class=\"stWhite\" points=\"155.47 304.25 167.91 316.27 167.91 308.9 196.22 308.9 196.22 299.61 167.91 299.61 167.91 292.19 155.47 304.25\" />\r\n  </g> -->\r\n"
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "id": "module-AppModule-4d24e87c5d32ec465b94314f58e6861af24b728721a471c21bf9422ad817aab98d422b5a57a19182fbe5b1d00ec6ebb8a9bbb935ea449ab8fb8ca2b57cadbad2",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { ApfMonitoredRoomsChartComponent } from './apf-monitored-rooms-chart/apf-monitored-rooms-chart.component';\r\nimport { ApfPortfolioAllDashboardComponent } from './apf-portfolio-all-dashboard/apf-portfolio-all-dashboard.component';\r\nimport { ApfPortfolioIcDashboardComponent } from './apf-portfolio-ic-dashboard/apf-portfolio-ic-dashboard.component';\r\nimport { ApfPortfolioIcMapComponent } from './apf-portfolio-ic-map/apf-portfolio-ic-map.component';\r\nimport { ApfPortfolioMapComponent } from './apf-portfolio-all-map/apf-portfolio-all-map.component';\r\nimport { ApfTimelineChartComponent } from './apf-timeline-chart/apf-timeline-chart.component';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { ChartDemoComponent } from './chart-demo/chart-demo.component';\r\nimport { ContactUsDialogComponent } from './contact-us-dialog/contact-us-dialog.component';\r\nimport { DataService } from 'src/app/api/data.service';\r\nimport { ErrorLogDashboardComponent } from './error-log-dashboard/error-log-dashboard.component';\r\nimport { FacilityInfoPageComponent } from './facility-info-page/facility-info-page.component';\r\nimport { FormulaHeaderComponent } from './formula-header/formula-header.component';\r\nimport { GoogleChartsModule } from 'angular-google-charts';\r\nimport { GsfGrowthByClassificationChartComponent } from './gsf-growth-by-classification-chart/gsf-growth-by-classification-chart.component';\r\nimport { GsfPieChartComponent } from './gsf-pie-chart/gsf-pie-chart.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { LeftNavComponent } from './left-nav/left-nav.component';\r\nimport { NavMenuComponent } from './nav-menu/nav-menu.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { NihLogoHeaderComponent } from './nih-logo-header/nih-logo-header.component';\r\nimport { PiDataFilterToolbarComponent } from './pi-data-filter-toolbar/pi-data-filter-toolbar.component';\r\nimport { RoomDataTableComponent } from './room-data-table/room-data-table.component';\r\nimport { RoomInfoDisplayComponent } from './room-info-display/room-info-display.component';\r\nimport { RouterModule } from '@angular/router';\r\nimport { SafeUrlPipe } from './safe-url.pipe'\r\nimport { SanitizedHtmlPipe } from './sanitized-html.pipe';\r\nimport { StaticContentContainerComponent } from './static-content-container/static-content-container.component';\r\nimport { StaticContentEditorComponent } from './static-content-editor/static-content-editor.component';\r\nimport { StaticContentPageComponent } from './static-content-page/static-content-page.component';\r\nimport { SvgStatusMapComponent } from './svg-status-map/svg-status-map.component';\r\nimport { ThirdPartyComponentsModule } from './3rd-party-components/3rd-party-components.module';\r\nimport { appRoutes } from './routes';\nimport { FacilityLayoutComponent } from './facility-layout/facility-layout.component';\nimport { FacilityDescriptionComponent } from './facility-description/facility-description.component';\r\n\r\n// import { DataService } from './data.service';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavMenuComponent,\r\n    HomeComponent,\r\n    NihLogoHeaderComponent,\r\n    FormulaHeaderComponent,\r\n    ApfPortfolioMapComponent,\r\n    GsfPieChartComponent,\r\n    ChartDemoComponent,\r\n    ApfPortfolioAllDashboardComponent,\r\n    GsfGrowthByClassificationChartComponent,\r\n    ApfPortfolioIcDashboardComponent,\r\n    ApfPortfolioIcMapComponent,\r\n    ApfTimelineChartComponent,\r\n    ApfMonitoredRoomsChartComponent,\r\n    PiDataFilterToolbarComponent,\r\n    SanitizedHtmlPipe,\r\n    SafeUrlPipe,\r\n    StaticContentContainerComponent,\r\n    SvgStatusMapComponent,\r\n    StaticContentEditorComponent,\r\n    RoomInfoDisplayComponent,\r\n    RoomDataTableComponent,\r\n    ErrorLogDashboardComponent,\r\n    LeftNavComponent,\r\n    FacilityInfoPageComponent,\r\n    ContactUsDialogComponent,\r\n    StaticContentPageComponent,\r\n    FacilityLayoutComponent,\r\n    FacilityDescriptionComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule.withServerTransition({ appId: 'ng-cli-universal' }),\r\n    HttpClientModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    GoogleChartsModule,\r\n    ThirdPartyComponentsModule,\r\n    RouterModule.forRoot(appRoutes)\r\n  ],\r\n  providers: [DataService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": [
                        {
                            "name": "DataService"
                        }
                    ]
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ApfMonitoredRoomsChartComponent"
                        },
                        {
                            "name": "ApfPortfolioAllDashboardComponent"
                        },
                        {
                            "name": "ApfPortfolioIcDashboardComponent"
                        },
                        {
                            "name": "ApfPortfolioIcMapComponent"
                        },
                        {
                            "name": "ApfPortfolioMapComponent"
                        },
                        {
                            "name": "ApfTimelineChartComponent"
                        },
                        {
                            "name": "AppComponent"
                        },
                        {
                            "name": "ChartDemoComponent"
                        },
                        {
                            "name": "ContactUsDialogComponent"
                        },
                        {
                            "name": "ErrorLogDashboardComponent"
                        },
                        {
                            "name": "FacilityDescriptionComponent"
                        },
                        {
                            "name": "FacilityInfoPageComponent"
                        },
                        {
                            "name": "FacilityLayoutComponent"
                        },
                        {
                            "name": "FormulaHeaderComponent"
                        },
                        {
                            "name": "GsfGrowthByClassificationChartComponent"
                        },
                        {
                            "name": "GsfPieChartComponent"
                        },
                        {
                            "name": "HomeComponent"
                        },
                        {
                            "name": "LeftNavComponent"
                        },
                        {
                            "name": "NavMenuComponent"
                        },
                        {
                            "name": "NihLogoHeaderComponent"
                        },
                        {
                            "name": "PiDataFilterToolbarComponent"
                        },
                        {
                            "name": "RoomDataTableComponent"
                        },
                        {
                            "name": "RoomInfoDisplayComponent"
                        },
                        {
                            "name": "SafeUrlPipe"
                        },
                        {
                            "name": "SanitizedHtmlPipe"
                        },
                        {
                            "name": "StaticContentContainerComponent"
                        },
                        {
                            "name": "StaticContentEditorComponent"
                        },
                        {
                            "name": "StaticContentPageComponent"
                        },
                        {
                            "name": "SvgStatusMapComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ThirdPartyComponentsModule",
            "id": "module-ThirdPartyComponentsModule-0d24ae45e420071e912b681f29ad3c9f05f1a7b3d838a2c5a9e3272078110db4337e97912c8c98266bc7a5e949eae8280a83eb4ba77170b041ed87fd76f84885",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/3rd-party-components/3rd-party-components.module.ts",
            "methods": [],
            "sourceCode": "import { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { ButtonModule } from 'primeng/button';\r\nimport { CalendarModule } from 'primeng/calendar';\r\nimport { DropdownModule } from 'primeng/dropdown';\r\nimport { DynamicDialogModule } from 'primeng/dynamicdialog';\r\nimport { EditorModule } from '@tinymce/tinymce-angular';\r\nimport { GalleriaModule } from 'primeng/galleria';\r\nimport { ImageModule } from 'primeng/image';\r\nimport { NgModule } from '@angular/core';\r\nimport { OverlayPanelModule } from 'primeng/overlaypanel';\r\nimport { ProgressSpinnerModule } from 'primeng/progressspinner';\r\nimport { TabMenuModule } from 'primeng/tabmenu';\r\nimport { TableModule } from 'primeng/table';\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [],\r\n  exports: [\r\n    BrowserAnimationsModule,\r\n    ButtonModule,\r\n    CalendarModule,\r\n    DropdownModule,\r\n    DynamicDialogModule,\r\n    EditorModule,\r\n    GalleriaModule,\r\n    ImageModule,\r\n    OverlayPanelModule,\r\n    ProgressSpinnerModule,\r\n    TableModule,\r\n    TabMenuModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: []\r\n})\r\nexport class ThirdPartyComponentsModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "$",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/apf-portfolio-all-map/apf-portfolio-all-map.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "any"
            },
            {
                "name": "$",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/static-content-container/static-content-container.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "any"
            },
            {
                "name": "bootstrap",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/apf-portfolio-all-map/apf-portfolio-all-map.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "any"
            },
            {
                "name": "bootstrap",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/apf-timeline-chart/apf-timeline-chart.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "any"
            },
            {
                "name": "bootstrap",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/svg-status-map/svg-status-map.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "any"
            },
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "dataServiceMock",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/nav-menu/nav-menu.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n    contactUs: ()=>{}\r\n}"
            },
            {
                "name": "defaultSvgMap",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/api/models/svgMap.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "SvgMap",
                "defaultValue": "{\r\n  id: 0,\r\n  backgroundSvg: '',\r\n  name: '',\r\n  svgMapPins: [],\r\n  svgMapArrows: [],\r\n  viewbox: '0 0 0 0',\r\n  defs: '',\r\n  facilityId: 0\r\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  production: true,\r\n  siteRootUrl:'https://orfd-cogen.ors.nih.gov/FPV2',\r\n  apiRootUrl: 'https://orfd-cogen.ors.nih.gov/FPV2/api',\r\n  attachmentRootUrl: 'https://dtrdata.orf.od.nih.gov/FCISPortal/attachmentsGSS'\r\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  production: false,\r\n  siteRootUrl: 'https://localhost:44420',\r\n  apiRootUrl: 'https://localhost:44420/api',\r\n  attachmentRootUrl: 'https://dtrdata.orf.od.nih.gov/FCISPortal/attachmentsGSS'\r\n}"
            },
            {
                "name": "Large",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/contact-us-dialog/contact-us-dialog.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "() => ({\r\n  props: {\r\n    initialContent: 'Hello World'\r\n  }\r\n})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/facility-description/facility-description.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "() => ({\r\n  props: {\r\n    initialContent: 'Hello World'\r\n  }\r\n})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/nav-menu/nav-menu.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "() => ({\r\n  props: {\r\n    initialContent: 'Hello World'\r\n  }\r\n})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pi-data-filter-toolbar/pi-data-filter-toolbar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "() => ({\r\n  props: {\r\n    facilities: [{ name: 'One', value: 1 }]\r\n  }\r\n})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/static-content-editor/static-content-editor.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "() => ({\r\n  props: {\r\n    initialContent: 'Hello World'\r\n  }\r\n})"
            },
            {
                "name": "providers",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/main.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[{ provide: 'BASE_URL', useFactory: getBaseUrl, deps: [] }]"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Small",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Button>",
                "defaultValue": "(args: Button) => ({\r\n  props: args\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Header>",
                "defaultValue": "(args: Header) => ({\r\n  props: args\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Page>",
                "defaultValue": "(args: Page) => ({\r\n  props: args\r\n})"
            }
        ],
        "functions": [
            {
                "name": "getBaseUrl",
                "file": "src/main.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": []
            }
        ],
        "typealiases": [
            {
                "name": "apfLimitsLookup",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/apf-portfolio-ic-dashboard/apf-portfolio-ic-dashboard.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 181
            },
            {
                "name": "filterFormData",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/pi-data-filter-toolbar/pi-data-filter-toolbar.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 181
            },
            {
                "name": "locationStatusLookup",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/apf-portfolio-ic-dashboard/apf-portfolio-ic-dashboard.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 181
            },
            {
                "name": "roomInfoLookup",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/apf-portfolio-ic-dashboard/apf-portfolio-ic-dashboard.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 181
            }
        ],
        "enumerations": [],
        "groupedVariables": {
            "src/app/apf-portfolio-all-map/apf-portfolio-all-map.component.ts": [
                {
                    "name": "$",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/apf-portfolio-all-map/apf-portfolio-all-map.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any"
                },
                {
                    "name": "bootstrap",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/apf-portfolio-all-map/apf-portfolio-all-map.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any"
                }
            ],
            "src/app/static-content-container/static-content-container.component.ts": [
                {
                    "name": "$",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/static-content-container/static-content-container.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any"
                }
            ],
            "src/app/apf-timeline-chart/apf-timeline-chart.component.ts": [
                {
                    "name": "bootstrap",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/apf-timeline-chart/apf-timeline-chart.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any"
                }
            ],
            "src/app/svg-status-map/svg-status-map.component.ts": [
                {
                    "name": "bootstrap",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/svg-status-map/svg-status-map.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any"
                }
            ],
            "src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type"
                }
            ],
            "src/app/nav-menu/nav-menu.stories.ts": [
                {
                    "name": "dataServiceMock",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/nav-menu/nav-menu.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n    contactUs: ()=>{}\r\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/nav-menu/nav-menu.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "() => ({\r\n  props: {\r\n    initialContent: 'Hello World'\r\n  }\r\n})"
                }
            ],
            "src/app/api/models/svgMap.ts": [
                {
                    "name": "defaultSvgMap",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/api/models/svgMap.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SvgMap",
                    "defaultValue": "{\r\n  id: 0,\r\n  backgroundSvg: '',\r\n  name: '',\r\n  svgMapPins: [],\r\n  svgMapArrows: [],\r\n  viewbox: '0 0 0 0',\r\n  defs: '',\r\n  facilityId: 0\r\n}"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  production: true,\r\n  siteRootUrl:'https://orfd-cogen.ors.nih.gov/FPV2',\r\n  apiRootUrl: 'https://orfd-cogen.ors.nih.gov/FPV2/api',\r\n  attachmentRootUrl: 'https://dtrdata.orf.od.nih.gov/FCISPortal/attachmentsGSS'\r\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  production: false,\r\n  siteRootUrl: 'https://localhost:44420',\r\n  apiRootUrl: 'https://localhost:44420/api',\r\n  attachmentRootUrl: 'https://dtrdata.orf.od.nih.gov/FCISPortal/attachmentsGSS'\r\n}"
                }
            ],
            "src/stories/Button.stories.ts": [
                {
                    "name": "Large",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Small",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Button>",
                    "defaultValue": "(args: Button) => ({\r\n  props: args\r\n})"
                }
            ],
            "src/stories/Header.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Header>",
                    "defaultValue": "(args: Header) => ({\r\n  props: args\r\n})"
                }
            ],
            "src/stories/Page.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Page>",
                    "defaultValue": "(args: Page) => ({\r\n  props: args\r\n})"
                }
            ],
            "src/app/contact-us-dialog/contact-us-dialog.stories.ts": [
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/contact-us-dialog/contact-us-dialog.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "() => ({\r\n  props: {\r\n    initialContent: 'Hello World'\r\n  }\r\n})"
                }
            ],
            "src/app/facility-description/facility-description.stories.ts": [
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/facility-description/facility-description.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "() => ({\r\n  props: {\r\n    initialContent: 'Hello World'\r\n  }\r\n})"
                }
            ],
            "src/app/pi-data-filter-toolbar/pi-data-filter-toolbar.stories.ts": [
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pi-data-filter-toolbar/pi-data-filter-toolbar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "() => ({\r\n  props: {\r\n    facilities: [{ name: 'One', value: 1 }]\r\n  }\r\n})"
                }
            ],
            "src/app/static-content-editor/static-content-editor.stories.ts": [
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/static-content-editor/static-content-editor.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "() => ({\r\n  props: {\r\n    initialContent: 'Hello World'\r\n  }\r\n})"
                }
            ],
            "src/main.ts": [
                {
                    "name": "providers",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/main.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[{ provide: 'BASE_URL', useFactory: getBaseUrl, deps: [] }]"
                }
            ]
        },
        "groupedFunctions": {
            "src/main.ts": [
                {
                    "name": "getBaseUrl",
                    "file": "src/main.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": []
                }
            ]
        },
        "groupedEnumerations": {},
        "groupedTypeAliases": {
            "src/app/apf-portfolio-ic-dashboard/apf-portfolio-ic-dashboard.service.ts": [
                {
                    "name": "apfLimitsLookup",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/apf-portfolio-ic-dashboard/apf-portfolio-ic-dashboard.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 181
                },
                {
                    "name": "locationStatusLookup",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/apf-portfolio-ic-dashboard/apf-portfolio-ic-dashboard.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 181
                },
                {
                    "name": "roomInfoLookup",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/apf-portfolio-ic-dashboard/apf-portfolio-ic-dashboard.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 181
                }
            ],
            "src/app/pi-data-filter-toolbar/pi-data-filter-toolbar.component.ts": [
                {
                    "name": "filterFormData",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/pi-data-filter-toolbar/pi-data-filter-toolbar.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 181
                }
            ]
        }
    },
    "routes": [],
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "src/app/apf-monitored-rooms-chart/apf-monitored-rooms-chart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ApfMonitoredRoomsChartComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/apf-portfolio-all-dashboard/apf-portfolio-all-dashboard.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ApfPortfolioAllDashboardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/apf-portfolio-all-dashboard/apf-portfolio-all-dashboard.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ApfPortfolioAllDashboardService",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/apf-portfolio-all-map/apf-portfolio-all-map.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ApfPortfolioMapComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/apf-portfolio-all-map/apf-portfolio-all-map.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "$",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/apf-portfolio-all-map/apf-portfolio-all-map.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "bootstrap",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/apf-portfolio-ic-dashboard/apf-portfolio-ic-dashboard.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ApfPortfolioIcDashboardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/27",
                "status": "low"
            },
            {
                "filePath": "src/app/apf-portfolio-ic-dashboard/apf-portfolio-ic-dashboard.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ApfPortfolioIcDashboardService",
                "coveragePercent": 0,
                "coverageCount": "0/24",
                "status": "low"
            },
            {
                "filePath": "src/app/apf-portfolio-ic-dashboard/apf-portfolio-ic-dashboard.service.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "PiDataFilter",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/apf-portfolio-ic-dashboard/apf-portfolio-ic-dashboard.service.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "RoomDisplayField",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/apf-portfolio-ic-dashboard/apf-portfolio-ic-dashboard.service.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "StatusPoint",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/apf-portfolio-ic-dashboard/apf-portfolio-ic-dashboard.service.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "TimelineChartData",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/apf-portfolio-ic-dashboard/apf-portfolio-ic-dashboard.service.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "TimelineChartDataPoint",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/apf-portfolio-ic-map/apf-portfolio-ic-map.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ApfPortfolioIcMapComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/apf-timeline-chart/apf-timeline-chart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ApfTimelineChartComponent",
                "coveragePercent": 0,
                "coverageCount": "0/21",
                "status": "low"
            },
            {
                "filePath": "src/app/apf-timeline-chart/apf-timeline-chart.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "bootstrap",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/api/data.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "DataService",
                "coveragePercent": 0,
                "coverageCount": "0/23",
                "status": "low"
            },
            {
                "filePath": "src/app/api/models/attachment.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Attachment",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/api/models/attachment.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AttachmentGroup",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/api/models/contactUsMessage.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ContactUsMessage",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/api/models/errorLog.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ErrorLog",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/api/models/facility.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Facility",
                "coveragePercent": 0,
                "coverageCount": "0/17",
                "status": "low"
            },
            {
                "filePath": "src/app/api/models/gsfChart.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "FacilityGsf",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/api/models/gsfChart.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "GsfGrowth",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/api/models/gsfChart.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ICGsf",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/api/models/room.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Room",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/api/models/roomParameter.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "RoomParameter",
                "coveragePercent": 0,
                "coverageCount": "0/17",
                "status": "low"
            },
            {
                "filePath": "src/app/api/models/svgMap.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "SvgMap",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/api/models/svgMap.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "SvgMapArrow",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/api/models/svgMap.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "SvgMapPin",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/api/models/svgMap.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "defaultSvgMap",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/api/models/timeline.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "FacilityTimeSeriesData",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/api/models/timeline.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "LocationCurrentStatus",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/api/models/timeline.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "LocationQuery",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/api/models/timeline.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "LocationTimeSeriesData",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/api/models/timeline.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "RoomTimeSeriesData",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/api/models/timeline.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "TimeSeriesPoint",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/chart-demo/chart-demo.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ChartDemoComponent",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "src/app/contact-us-dialog/contact-us-dialog.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ContactUsDialogComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/contact-us-dialog/contact-us-dialog.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/error-log-dashboard/error-log-dashboard.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ErrorLogDashboardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/facility-description/facility-description.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FacilityDescriptionComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/facility-description/facility-description.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/facility-info-page/facility-info-page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FacilityInfoPageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "src/app/facility-info-page/facility-info-page.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "FacilityInfoPageService",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/facility-layout/facility-layout.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FacilityLayoutComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/formula-header/formula-header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FormulaHeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/gsf-growth-by-classification-chart/gsf-growth-by-classification-chart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "GsfGrowthByClassificationChartComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/gsf-pie-chart/gsf-pie-chart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "GsfPieChartComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/home/home.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HomeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/left-nav/left-nav.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LeftNavComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/nav-menu/nav-menu.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NavMenuComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/nav-menu/nav-menu.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "dataServiceMock",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/nav-menu/nav-menu.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/nih-logo-header/nih-logo-header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NihLogoHeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/pi-data-filter-toolbar/pi-data-filter-toolbar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PiDataFilterToolbarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/16",
                "status": "low"
            },
            {
                "filePath": "src/app/pi-data-filter-toolbar/pi-data-filter-toolbar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/room-data-table/room-data-table.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RoomDataTableComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/room-info-display/room-info-display.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RoomInfoDisplayComponent",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "src/app/safe-url.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "SafeUrlPipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/sanitized-html.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "SanitizedHtmlPipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/static-content-container/static-content-container.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "StaticContentContainerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/static-content-container/static-content-container.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "$",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/static-content-editor/static-content-editor.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "StaticContentEditorComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/static-content-editor/static-content-editor.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/static-content-page/static-content-page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "StaticContentPageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/svg-status-map/svg-status-map.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SvgStatusMapComponent",
                "coveragePercent": 0,
                "coverageCount": "0/17",
                "status": "low"
            },
            {
                "filePath": "src/app/svg-status-map/svg-status-map.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "PinHoverInfo",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/svg-status-map/svg-status-map.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "bootstrap",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/main.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "getBaseUrl",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/main.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "providers",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Large",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Small",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/User.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "User",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 83,
                "coverageCount": "5/6",
                "status": "very-good"
            },
            {
                "filePath": "src/stories/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}