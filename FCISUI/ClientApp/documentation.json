{
    "pipes": [
        {
            "name": "SafeUrlPipe",
            "id": "pipe-SafeUrlPipe-64598a6ad7e24f699ae45481c63d65a5e0186667e8025ff515473cc9387fbef0b906ed097a0c00016d20c31865741bb0bd0cf6f89aa4cf324b4e94d88e26058e",
            "file": "src/app/safe-url.pipe.ts",
            "type": "pipe",
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "ngname": "safeurl",
            "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\r\n\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\n\r\n@Pipe({\r\n    name: 'safeurl'\r\n  })\r\n  \r\n  export class SafeUrlPipe implements PipeTransform {\r\n    constructor(private sanitizer: DomSanitizer) { }\r\n  \r\n    transform(url:string) {\r\n      return this.sanitizer.bypassSecurityTrustResourceUrl(url);\r\n    }\r\n  }\r\n  "
        },
        {
            "name": "SanitizedHtmlPipe",
            "id": "pipe-SanitizedHtmlPipe-273a256e9599f0e82c3389478533ede0e2139bb4594c33f83a6038b51cd2c93d6de91570fca38708253f11391664f61cfc7744502a8f3c2fb9d288bfe5569589",
            "file": "src/app/sanitized-html.pipe.ts",
            "type": "pipe",
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 10,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "ngname": "sanitizedHtml",
            "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\r\n\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\n\r\n@Pipe({\r\n  name: 'sanitizedHtml'\r\n})\r\nexport class SanitizedHtmlPipe implements PipeTransform {\r\n  constructor(private sanitized: DomSanitizer) {}\r\n  transform(value: any): any {\r\n    return this.sanitized.bypassSecurityTrustHtml(value);\r\n  }\r\n}\r\n\r\n"
        }
    ],
    "interfaces": [
        {
            "name": "Attachment",
            "id": "interface-Attachment-fc565a4c62c360debe355b51fc7482a3995030e0369c0c3bb5b5157da3d71ee3638ea855b07c61311026cd66bac20e9417b17b74e6eb6f3067ea590b52d6fd59",
            "file": "src/app/api/models/attachment.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Attachment\r\n{\r\n    storedFileName:string,\r\n    docTitle:string,\r\n    description:string,\r\n    url:string\r\n}\r\nexport interface AttachmentGroup\r\n{\r\n    description:string;\r\n    attachments: Attachment[];\r\n}\r\n",
            "properties": [
                {
                    "name": "description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "docTitle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "storedFileName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "url",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "AttachmentGroup",
            "id": "interface-AttachmentGroup-fc565a4c62c360debe355b51fc7482a3995030e0369c0c3bb5b5157da3d71ee3638ea855b07c61311026cd66bac20e9417b17b74e6eb6f3067ea590b52d6fd59",
            "file": "src/app/api/models/attachment.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Attachment\r\n{\r\n    storedFileName:string,\r\n    docTitle:string,\r\n    description:string,\r\n    url:string\r\n}\r\nexport interface AttachmentGroup\r\n{\r\n    description:string;\r\n    attachments: Attachment[];\r\n}\r\n",
            "properties": [
                {
                    "name": "attachments",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Attachment[]",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "ContactUsMessage",
            "id": "interface-ContactUsMessage-7212cc6f0e622e37437aee5b13091a6c44d658061fd6dcc16b0e9d49d756d5ee70dd03b329ba79611c54a1032c0e85f4693fd9b0bfbd6404537c5e23c84cc5f4",
            "file": "src/app/api/models/contactUsMessage.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface ContactUsMessage{\r\n    fromAddress:string;\r\n    subject:string;\r\n    messageBody:string;\r\n}\r\n",
            "properties": [
                {
                    "name": "fromAddress",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "messageBody",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "subject",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "ErrorLog",
            "id": "interface-ErrorLog-a1723ffb05a23049d20e10c6b24eb4c3874be112b78f9aaebfaeceee837446d28f3824263391340b655151e56e26b7d9dd13bc82959e5cefb467c85b1f04c5dd",
            "file": "src/app/api/models/errorLog.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface ErrorLog {\r\n    errorLogId: number;\r\n    errorMessage?: string;\r\n    errorTrace?: string;\r\n    errorDate?: Date;\r\n}",
            "properties": [
                {
                    "name": "errorDate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "optional": true,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "errorLogId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "errorMessage",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "errorTrace",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 17
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "Facility",
            "id": "interface-Facility-3e3b5cb938a5acf118031b7230af3276a2619bf8bfc725259e5f66245161a7156769aaf3aed132e84f6acf193411eeb9d669d3153db70c81f0e5e364a2064d5a",
            "file": "src/app/api/models/facility.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Facility {\r\n  facilityId: number;\r\n  facilityName: string;\r\n  facilityAbbrName?: string;\r\n  facilityIc?: string;\r\n  facilitySection?: string;\r\n  facilityBuilding?: string;\r\n  facilityLocation?: string;\r\n  description?: string;\r\n  comments: string;\r\n  sortOrder?: number;\r\n  piPath?: string;\r\n  attribute?: string;\r\n  circleid?: string;\r\n  isActive?: boolean;\r\n  facilityRepName?: string;\r\n  facilityFullName?: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "attribute",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "circleid",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "comments",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "facilityAbbrName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "facilityBuilding",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "facilityFullName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "facilityIc",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "facilityId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "facilityLocation",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "facilityName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "facilityRepName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "facilitySection",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "isActive",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "piPath",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "sortOrder",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 11
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "FacilityGsf",
            "id": "interface-FacilityGsf-62b471f369de979423c25b5adebff0af95f81c84e553318752283eb9dba849c9d18e634ac4ce26635dc001b0b36998a23913b24e0d195fb1958d00cc3241d19a",
            "file": "src/app/api/models/gsfChart.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface FacilityGsf {\r\n  facility: string;\r\n  gsf: number;\r\n}\r\n\r\nexport interface GsfGrowth {\r\n  iso7RoomsCount: number;\r\n  iso8RoomsCount: number;\r\n  cncRoomsCount: number;\r\n  iso7RoomsArea: number;\r\n  iso8RoomsArea: number;\r\n  cncRoomsArea: number;\r\n  criticalEnvironmentParametersCount: number;\r\n  goLiveDate: Date;\r\n}\r\n\r\nexport interface ICGsf {\r\n  ic: string;\r\n  gsf: number;\r\n}\r\n",
            "properties": [
                {
                    "name": "facility",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "gsf",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "FacilityTimeSeriesData",
            "id": "interface-FacilityTimeSeriesData-76c68cc294c66cc4dd47198bbb51f5890b9331191bd46f1d670a3c935a7e43caed002c589150456c62a9d1d275ba3151bcafb3c8382a661ce441d71f48e8f5b4",
            "file": "src/app/api/models/timeline.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Facility, Room } from '.';\r\n\r\nexport interface TimeSeriesPoint {\r\n  timestamp: number;\r\n  numeric_value: number;\r\n}\r\n\r\nexport interface LocationTimeSeriesData<T> {\r\n  location: T; //facility or room\r\n  tag: string; // piPath\r\n  points: TimeSeriesPoint[];\r\n}\r\n\r\nexport interface FacilityTimeSeriesData {\r\n  facility: Facility;\r\n  tag: string; // piPath\r\n  points: TimeSeriesPoint[];\r\n}\r\n\r\nexport interface RoomTimeSeriesData {\r\n  room: Room;\r\n  tag: string; // piPath\r\n  points: TimeSeriesPoint[];\r\n}\r\n\r\nexport interface LocationCurrentStatus {\r\n  locationName: string; //facility or room name\r\n  attribute: 'Composite' | 'Temp' | 'Hum' | 'Airx' | 'DP';\r\n  statusPoint: TimeSeriesPoint;\r\n}\r\n\r\nexport interface LocationQuery {\r\n  locationName: string;\r\n  tag: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "facility",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Facility",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "points",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TimeSeriesPoint[]",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "tag",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 16
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "GsfGrowth",
            "id": "interface-GsfGrowth-62b471f369de979423c25b5adebff0af95f81c84e553318752283eb9dba849c9d18e634ac4ce26635dc001b0b36998a23913b24e0d195fb1958d00cc3241d19a",
            "file": "src/app/api/models/gsfChart.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface FacilityGsf {\r\n  facility: string;\r\n  gsf: number;\r\n}\r\n\r\nexport interface GsfGrowth {\r\n  iso7RoomsCount: number;\r\n  iso8RoomsCount: number;\r\n  cncRoomsCount: number;\r\n  iso7RoomsArea: number;\r\n  iso8RoomsArea: number;\r\n  cncRoomsArea: number;\r\n  criticalEnvironmentParametersCount: number;\r\n  goLiveDate: Date;\r\n}\r\n\r\nexport interface ICGsf {\r\n  ic: string;\r\n  gsf: number;\r\n}\r\n",
            "properties": [
                {
                    "name": "cncRoomsArea",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "cncRoomsCount",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "criticalEnvironmentParametersCount",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "goLiveDate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "iso7RoomsArea",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "iso7RoomsCount",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "iso8RoomsArea",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "iso8RoomsCount",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "ICGsf",
            "id": "interface-ICGsf-62b471f369de979423c25b5adebff0af95f81c84e553318752283eb9dba849c9d18e634ac4ce26635dc001b0b36998a23913b24e0d195fb1958d00cc3241d19a",
            "file": "src/app/api/models/gsfChart.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface FacilityGsf {\r\n  facility: string;\r\n  gsf: number;\r\n}\r\n\r\nexport interface GsfGrowth {\r\n  iso7RoomsCount: number;\r\n  iso8RoomsCount: number;\r\n  cncRoomsCount: number;\r\n  iso7RoomsArea: number;\r\n  iso8RoomsArea: number;\r\n  cncRoomsArea: number;\r\n  criticalEnvironmentParametersCount: number;\r\n  goLiveDate: Date;\r\n}\r\n\r\nexport interface ICGsf {\r\n  ic: string;\r\n  gsf: number;\r\n}\r\n",
            "properties": [
                {
                    "name": "gsf",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "ic",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 18
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "LocationCurrentStatus",
            "id": "interface-LocationCurrentStatus-76c68cc294c66cc4dd47198bbb51f5890b9331191bd46f1d670a3c935a7e43caed002c589150456c62a9d1d275ba3151bcafb3c8382a661ce441d71f48e8f5b4",
            "file": "src/app/api/models/timeline.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Facility, Room } from '.';\r\n\r\nexport interface TimeSeriesPoint {\r\n  timestamp: number;\r\n  numeric_value: number;\r\n}\r\n\r\nexport interface LocationTimeSeriesData<T> {\r\n  location: T; //facility or room\r\n  tag: string; // piPath\r\n  points: TimeSeriesPoint[];\r\n}\r\n\r\nexport interface FacilityTimeSeriesData {\r\n  facility: Facility;\r\n  tag: string; // piPath\r\n  points: TimeSeriesPoint[];\r\n}\r\n\r\nexport interface RoomTimeSeriesData {\r\n  room: Room;\r\n  tag: string; // piPath\r\n  points: TimeSeriesPoint[];\r\n}\r\n\r\nexport interface LocationCurrentStatus {\r\n  locationName: string; //facility or room name\r\n  attribute: 'Composite' | 'Temp' | 'Hum' | 'Airx' | 'DP';\r\n  statusPoint: TimeSeriesPoint;\r\n}\r\n\r\nexport interface LocationQuery {\r\n  locationName: string;\r\n  tag: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "attribute",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"Composite\" | \"Temp\" | \"Hum\" | \"Airx\" | \"DP\"",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "locationName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "statusPoint",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TimeSeriesPoint",
                    "optional": false,
                    "description": "",
                    "line": 29
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "LocationQuery",
            "id": "interface-LocationQuery-76c68cc294c66cc4dd47198bbb51f5890b9331191bd46f1d670a3c935a7e43caed002c589150456c62a9d1d275ba3151bcafb3c8382a661ce441d71f48e8f5b4",
            "file": "src/app/api/models/timeline.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Facility, Room } from '.';\r\n\r\nexport interface TimeSeriesPoint {\r\n  timestamp: number;\r\n  numeric_value: number;\r\n}\r\n\r\nexport interface LocationTimeSeriesData<T> {\r\n  location: T; //facility or room\r\n  tag: string; // piPath\r\n  points: TimeSeriesPoint[];\r\n}\r\n\r\nexport interface FacilityTimeSeriesData {\r\n  facility: Facility;\r\n  tag: string; // piPath\r\n  points: TimeSeriesPoint[];\r\n}\r\n\r\nexport interface RoomTimeSeriesData {\r\n  room: Room;\r\n  tag: string; // piPath\r\n  points: TimeSeriesPoint[];\r\n}\r\n\r\nexport interface LocationCurrentStatus {\r\n  locationName: string; //facility or room name\r\n  attribute: 'Composite' | 'Temp' | 'Hum' | 'Airx' | 'DP';\r\n  statusPoint: TimeSeriesPoint;\r\n}\r\n\r\nexport interface LocationQuery {\r\n  locationName: string;\r\n  tag: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "locationName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "tag",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 34
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "LocationTimeSeriesData",
            "id": "interface-LocationTimeSeriesData-76c68cc294c66cc4dd47198bbb51f5890b9331191bd46f1d670a3c935a7e43caed002c589150456c62a9d1d275ba3151bcafb3c8382a661ce441d71f48e8f5b4",
            "file": "src/app/api/models/timeline.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Facility, Room } from '.';\r\n\r\nexport interface TimeSeriesPoint {\r\n  timestamp: number;\r\n  numeric_value: number;\r\n}\r\n\r\nexport interface LocationTimeSeriesData<T> {\r\n  location: T; //facility or room\r\n  tag: string; // piPath\r\n  points: TimeSeriesPoint[];\r\n}\r\n\r\nexport interface FacilityTimeSeriesData {\r\n  facility: Facility;\r\n  tag: string; // piPath\r\n  points: TimeSeriesPoint[];\r\n}\r\n\r\nexport interface RoomTimeSeriesData {\r\n  room: Room;\r\n  tag: string; // piPath\r\n  points: TimeSeriesPoint[];\r\n}\r\n\r\nexport interface LocationCurrentStatus {\r\n  locationName: string; //facility or room name\r\n  attribute: 'Composite' | 'Temp' | 'Hum' | 'Airx' | 'DP';\r\n  statusPoint: TimeSeriesPoint;\r\n}\r\n\r\nexport interface LocationQuery {\r\n  locationName: string;\r\n  tag: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "location",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "T",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "points",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TimeSeriesPoint[]",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "tag",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "PiDataFilter",
            "id": "interface-PiDataFilter-4096b764617cb8b2902ef9ff0d4bd9a525ffb24ac1e72f15ae26439e4171fb505835fb27ec2e456904c47a5a46f7d4b0ed7d87105bb234e634dc90efa7be5169",
            "file": "src/app/facility-timeline-dashboard/facility-timeline-dashboard.service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import {\r\n    BehaviorSubject,\r\n    Observable,\r\n    Subject,\r\n    combineLatest,\r\n    distinctUntilChanged,\r\n    filter,\r\n    map,\r\n    mergeMap,\r\n    of,\r\n    zip\r\n} from 'rxjs';\r\nimport {\r\n    LocationCurrentStatus,\r\n    Room,\r\n    SvgMap,\r\n} from 'src/app/api/models';\r\nimport { keyBy, reduce } from 'lodash';\r\n\r\nimport { DataService } from 'src/app/api/data.service';\r\nimport { Injectable } from '@angular/core';\r\nimport { PiWebApiService } from '../api/pi-webapi.service';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\nexport interface PiDataFilter {\r\n    facility: { repName?: string; sectionName: string; value: number };\r\n    //portfolioId: string;\r\n    //facilityOrPortfolio: 'facility' | 'portfolio'\r\n    status: string;\r\n    startDate: Date;\r\n    endDate: Date;\r\n    interval: number;\r\n  }\r\n  \r\n  export interface TimelineChartDataPoint {\r\n    locationName: string;\r\n    tag: string;\r\n    // statusValue:number,\r\n    chillerStatusLabel: string;\r\n    statusColor: string;\r\n    startDate: Date;\r\n    endDate: Date;\r\n  }\r\n  \r\n  export interface RoomDisplayField {\r\n    name: string;\r\n    value: string;\r\n    displayType?: string;\r\n  }\r\n  \r\n  export interface TimelineChartData {\r\n    points: TimelineChartDataPoint[];\r\n    locations: { [name: string]: any };\r\n    // locationCount: number;\r\n    locationType: 'room' | 'facility';\r\n  }\r\n  \r\n  export interface StatusPoint {\r\n    timeStamp: number;\r\n    numeric_value: number;\r\n  }\r\n  \r\n  export type locationStatusLookup = { [name: string]: string };\r\n  export type roomInfoLookup = { [name: string]: string };\r\n  export type apfLimitsLookup = { [facRoomKey: string]: any };\r\n  \r\n  @Injectable()\r\n  export class FacilityTimelineDashboardService {\r\n    constructor(private dataService: DataService, private piWebApiService:PiWebApiService) {\r\n      const defaultStartDate = new Date();\r\n      defaultStartDate.setDate(defaultStartDate.getDate() - 1);\r\n\r\n      this._piDataFilter$ = new Subject<PiDataFilter>()\r\n      // new BehaviorSubject<PiDataFilter>({\r\n      //   facility: { repName: '', sectionName: '', value: 0 },\r\n      //   portfolioId: '',\r\n      //   facilityOrPortfolio: 'facility',\r\n      //   status: '',\r\n      //   startDate: defaultStartDate,\r\n      //   endDate: defaultEndDate,\r\n      //   interval: 10\r\n      // });\r\n  \r\n      this._ic$ = new BehaviorSubject<string>('');\r\n      this._facilityFilterOptions$ = new BehaviorSubject<\r\n        { repName: string; sectionName: string; value: string }[]\r\n      >([]);\r\n      this._svgMap$ = new BehaviorSubject<SvgMap>({\r\n        name: 'apf_facility_all',\r\n        backgroundSvg: '',\r\n        id: 0,\r\n        svgMapPins: [],\r\n        svgMapArrows: [],\r\n        viewbox: '0 0 0 0',\r\n        defs: '',\r\n        facilityId: 0\r\n      });\r\n      this._svgMapBackgroundImageUrl$ = new BehaviorSubject<string>('');\r\n      this._currentStatusValues$ = new BehaviorSubject<LocationCurrentStatus[]>(\r\n        []\r\n      );\r\n      this._parameterValues$ = new BehaviorSubject<Room[]>([]);\r\n      this._timelineChartData$ = new BehaviorSubject<TimelineChartData>({\r\n        points: [],\r\n        locations: {},\r\n        //locationCount:0,\r\n        locationType: 'facility'\r\n      });\r\n      this._selectedPin$ = new BehaviorSubject<string>('');\r\n      this._selectedRoomInfo$ = new BehaviorSubject<roomInfoLookup>({});\r\n      this._hoveredPin$ = new BehaviorSubject<string>('');\r\n      this._hoveredTimelineLabel$ = new BehaviorSubject<string>('');\r\n      this._apfLimits$ = new BehaviorSubject<apfLimitsLookup>({});\r\n      this._pinStates = new BehaviorSubject<locationStatusLookup>({});\r\n    \r\n      // Setup APF Limits from PI for all facilities\r\n      //this.dataService.apfLimits().subscribe((limits: any[]) => {\r\n      this.piWebApiService.apfLimits().subscribe((limits: any[]) => {\r\n\r\n        const limitsLookup:{[key:string]:string} = {};\r\n\r\n        try {\r\n          for(const limit of limits) {\r\n            if(limit.Conn_Room) {\r\n              const name1 = limit.Conn_Room ? `${limit.Room}_${limit.Conn_Room}_DP` : limit.Room;\r\n              const name2 = limit.Conn_Room ? `${limit.Conn_Room}_${limit.Room}_DP` : limit.Room;\r\n              limitsLookup[`${limit.Facility.toLowerCase()}|${name1.toLowerCase()}`] = limit;\r\n              limitsLookup[`${limit.Facility.toLowerCase()}|${name2.toLowerCase()}`] = limit;\r\n            }\r\n            else {\r\n              limitsLookup[`${limit.Facility.toLowerCase()}|${limit.Room.toLowerCase()}`] = limit\r\n            }\r\n          }\r\n        }\r\n        catch(e){\r\n          console.log(e)\r\n        }\r\n  \r\n        this._apfLimits$.next(limitsLookup);\r\n      });\r\n  \r\n      // create an observable of the facility selected in the fillter control\r\n      const selectedFacility$ = this._piDataFilter$.pipe(\r\n        distinctUntilChanged(\r\n          (prev, curr) => prev.facility.value === curr.facility.value\r\n        ),\r\n        map((f) => f.facility)\r\n      );\r\n\r\n      const selectedStatus$ = this._piDataFilter$.pipe(\r\n        map((f) => (f.status.toLowerCase())),\r\n        distinctUntilChanged()\r\n      );\r\n      \r\n      // create an observable of the marker type to use with the map - 'pin' or 'arrow'\r\n      const svgMapMarker$ = this._piDataFilter$.pipe(\r\n        map((f) => (f.status.toLowerCase() === 'dp' ? 'arrow' : 'pin')),\r\n        distinctUntilChanged()\r\n      );\r\n  \r\n      // Update the floor plan and room parameter info needed by svg map when the facility changes\r\n      selectedFacility$\r\n        .pipe(\r\n          filter(facility=>Boolean(facility?.value)),\r\n          mergeMap((facility) =>\r\n            zip(\r\n              of(facility.value),\r\n              this.dataService.roomParameterInfo(facility.value) // parameter info from database for each room and attribute in facility\r\n            )\r\n          )\r\n        )\r\n        .subscribe(([facilityId, parameterValues]) => {\r\n          const backGroundImageUrl = `assets/images/orig-floor-plans/FID${facilityId}_FloorPlan.jpg`;\r\n          this._svgMapBackgroundImageUrl$.next(backGroundImageUrl);\r\n\r\n          this._parameterValues$.next(parameterValues);\r\n  \r\n          this._selectedPin$.next('');\r\n          this._selectedRoomInfo$.next({});\r\n        });\r\n      \r\n\r\n      // Update the room states when the facility or the selected status attribute changes\r\n      combineLatest([selectedFacility$, selectedStatus$])\r\n        .pipe(\r\n          mergeMap(([facility,status]) => {\r\n            return this.piWebApiService.facilityCurrentStatusData(facility.sectionName, status);\r\n          }),\r\n          map((statusData)=>{\r\n            const pinStatusLookup = reduce(\r\n              statusData,\r\n              (acc, x) => ({\r\n                ...acc,\r\n                [x.locationName]: this.statusColor(x.statusPoint.numeric_value)\r\n              }),\r\n              {}\r\n            );\r\n            return pinStatusLookup;\r\n          })\r\n        ).subscribe((pinStatusLookup)=>{\r\n          this._pinStates.next(pinStatusLookup);\r\n    \r\n        })\r\n        \r\n  \r\n      // Get the pins or arrows for the Svg Floor plan if the facility changes or attriibute changes between not dp and dp\r\n      combineLatest([selectedFacility$, svgMapMarker$])\r\n        .pipe(\r\n          mergeMap(([facility, marker]) => {\r\n            return this.dataService.svgMap(facility.value, marker);\r\n          })\r\n        )\r\n        .subscribe((svgMap) => {\r\n          this._svgMap$.next(svgMap);\r\n        });\r\n  \r\n      // when a map pin is selected, prepare room info display data using the apf limits query, current status values, and the room parameters\r\n      const roomCurrentAttributeData$ = \r\n        combineLatest([selectedFacility$, this._selectedPin$])\r\n          .pipe(\r\n            filter(([facility,pin])=>Boolean(pin)),\r\n            mergeMap(([facility,pin])=>zip(\r\n              of(facility),\r\n              of(pin),\r\n              //this.dataService.roomCurrentAttributeData(facility.value,pin)))\r\n              this.piWebApiService.roomCurrentAttributeData(facility.sectionName,pin)))\r\n          )\r\n\r\n      roomCurrentAttributeData$\r\n      .subscribe(([facility,pin,roomStatusValues]) => {\r\n        const sectionName = facility.sectionName.toLowerCase();\r\n        const key = `${sectionName}|${pin.toLowerCase()}`; // pin = room number\r\n        const apfLimits = this._apfLimits$.value[key];\r\n        const isDP = pin.indexOf('DP') > -1;\r\n        const room = isDP ? \r\n          this._parameterValues$.value.find(\r\n            (r) => (r.formattedName.toLowerCase() === pin.toLowerCase())\r\n          ) : \r\n          this._parameterValues$.value.find(\r\n            (r) => (r.roomNumber.toLowerCase() === pin.toLowerCase())\r\n          );\r\n  \r\n        const info = {\r\n          ...apfLimits,\r\n          gsf: room?.sq,\r\n          roomParameters: room?.roomParameters,\r\n          roomStatusValues,\r\n          compositeStatus: roomStatusValues.find(\r\n            (x) => x.attribute === 'Composite'\r\n          )?.statusPoint,\r\n          tempStatus: roomStatusValues.find((x) => x.attribute === 'Temp')\r\n            ?.statusPoint,\r\n          rhStatus: roomStatusValues.find((x) => x.attribute === 'Hum')\r\n            ?.statusPoint,\r\n          achStatus: roomStatusValues.find((x) => x.attribute === 'Airx')\r\n            ?.statusPoint,\r\n          dpStatus: roomStatusValues.find((x) => x.attribute === 'DP')\r\n            ?.statusPoint\r\n        };\r\n  \r\n        this._selectedRoomInfo$.next(info);\r\n      });\r\n  \r\n\r\n      // prepare data for specific facility timeline\r\n      this._piDataFilter$\r\n        .pipe(\r\n          mergeMap((filter: PiDataFilter) =>\r\n\r\n            this.piWebApiService.timelineData(\r\n              filter.facility.sectionName,\r\n              filter.status,\r\n              filter.startDate,\r\n              filter.endDate,\r\n              filter.interval\r\n            )\r\n              .pipe(\r\n                catchError((err) => {\r\n                  console.log(\r\n                    'Error from dataService.facilityRoomsTimelineDate:' +\r\n                      JSON.stringify(err)\r\n                  );\r\n                  return of([]);\r\n                }),\r\n                map((data) => ({ filter, data }))\r\n              )\r\n          )\r\n        )\r\n        .subscribe((dataAndFilter) => {\r\n          const chartDataPoints: TimelineChartDataPoint[] = [];\r\n          const rooms = dataAndFilter.data.map((d) => d.location);\r\n          const roomLookup = keyBy(rooms, (r) => r.roomNumber);\r\n          const timestamps = (dataAndFilter.data || [])\r\n            .filter((x) => x.points.some(Boolean))\r\n            .map((x) => x.points[0].timestamp);\r\n          const minTimestamp = timestamps.reduce(function (a, b) {\r\n            return a < b ? a : b;\r\n          },Number.MAX_VALUE);\r\n  \r\n          for (const x of dataAndFilter.data) {\r\n            if (!x.points.some(Boolean)) {\r\n              x.points = [\r\n                {\r\n                  timestamp: minTimestamp,\r\n                  numeric_value: 1\r\n                },\r\n                {\r\n                  timestamp: dataAndFilter.filter.endDate.getTime(),\r\n                  numeric_value: 1\r\n                }\r\n              ];\r\n            }\r\n  \r\n            x.points.sort((a, b) => a.timestamp - b.timestamp);\r\n            let startTime = x.points[0].timestamp;\r\n            for (const y of x.points) {\r\n              if (y.timestamp < dataAndFilter.filter.startDate.getTime()) {\r\n                console.log('error - timestamp before request time');\r\n              }\r\n              const point: TimelineChartDataPoint = {\r\n                locationName: x.location.roomNumber,\r\n                tag: x.tag,\r\n                startDate: new Date(startTime),\r\n                endDate: new Date(Math.max(y.timestamp, startTime)),\r\n                statusColor: this.statusColor(y.numeric_value),\r\n                chillerStatusLabel: this.chillerStatusLabel(y.numeric_value)\r\n              };\r\n  \r\n              startTime = y.timestamp;\r\n              chartDataPoints.push(point);\r\n            }\r\n          }\r\n\r\n          const locations:any = {};\r\n          for(const d of dataAndFilter.data) {\r\n            locations[d.location.roomNumber] =d.location\r\n          }\r\n\r\n          this._timelineChartData$.next({\r\n            points: chartDataPoints,\r\n            locations: roomLookup,\r\n            //locationCount:dataAndFilter.data.length,\r\n            locationType: 'room'\r\n          });\r\n        });\r\n    } // end contstructor\r\n  \r\n    private _ic$: Subject<string>;\r\n    public setIC(ic: string) {\r\n      this._ic$.next(ic);\r\n    }\r\n  \r\n    private _piDataFilter$: Subject<PiDataFilter>;\r\n    public filterPiData(filter: PiDataFilter) {\r\n      this._piDataFilter$.next(filter);\r\n    }\r\n    public get piDataFilter$() {\r\n      return this._piDataFilter$ as Observable<PiDataFilter>;\r\n    }\r\n  \r\n    public get isFacilityAll$() {\r\n      return this._piDataFilter$.pipe(\r\n        map((f) => {\r\n          return Number(f.facility) === 0;\r\n        })\r\n      );\r\n    }\r\n  \r\n    private _svgMap$: Subject<SvgMap>;\r\n    public get svgMap$() {\r\n      return this._svgMap$ as Observable<SvgMap>;\r\n    }\r\n  \r\n    private _currentStatusValues$: BehaviorSubject<LocationCurrentStatus[]>;\r\n    private _pinStates: BehaviorSubject<locationStatusLookup>;\r\n  \r\n    public get pinStates$() {\r\n      return this._pinStates as Observable<locationStatusLookup>;\r\n    }\r\n  \r\n    private _parameterValues$: BehaviorSubject<Room[]>;\r\n    public get parameterValues$() {\r\n      return this._parameterValues$ as Observable<Room[]>;\r\n    }\r\n  \r\n    private _timelineChartData$: Subject<TimelineChartData>;\r\n    public get timelineChartData$() {\r\n      return this._timelineChartData$ as Observable<TimelineChartData>;\r\n    }\r\n  \r\n    private _svgMapBackgroundImageUrl$: Subject<string>;\r\n    public get svgMapBackgroundImageUrl$() {\r\n      return this._svgMapBackgroundImageUrl$ as Observable<string>;\r\n    }\r\n  \r\n    private _selectedPin$: Subject<string>;\r\n    public get selectedPin$() {\r\n      return this._selectedPin$ as Observable<string>;\r\n    }\r\n  \r\n    private _hoveredPin$: Subject<string>;\r\n    public get hoveredPin$() {\r\n      return this._hoveredPin$ as Observable<string>;\r\n    }\r\n  \r\n    private _hoveredTimelineLabel$: Subject<string>;\r\n    public get hoveredTimelineLabel$() {\r\n      return this._hoveredTimelineLabel$ as Observable<string>;\r\n    }\r\n  \r\n    private _selectedRoomInfo$: Subject<roomInfoLookup>;\r\n    public get selectedRoomInfo$() {\r\n      return this._selectedRoomInfo$ as Observable<roomInfoLookup>;\r\n    }\r\n  \r\n    public setSelectedPin(pinName: string) {\r\n      this._selectedPin$.next(pinName);\r\n    }\r\n  \r\n    public setHoveredPin(pinName: string) {\r\n      this._hoveredPin$.next(pinName);\r\n    }\r\n  \r\n    public setHoveredTimelineLabel(label: string) {\r\n      this._hoveredTimelineLabel$.next(label);\r\n    }\r\n  \r\n    private _apfLimits$: BehaviorSubject<apfLimitsLookup>;\r\n    public get apfLimits$() {\r\n      return this._apfLimits$ as Observable<apfLimitsLookup>;\r\n    }\r\n  \r\n    private statusColor = (statusVal: number) => {\r\n      switch (statusVal) {\r\n        case 0:\r\n          return 'green';\r\n        case 1:\r\n          return 'gray';\r\n        case 2:\r\n          return 'yellow';\r\n        case 3:\r\n          return 'red';\r\n        default:\r\n          return 'lightgray';\r\n      }\r\n    };\r\n  \r\n    private chillerStatusLabel = (statusVal: number) => {\r\n      switch (statusVal) {\r\n        case 0:\r\n          return 'Within Spec';\r\n        case 1:\r\n          return 'Comm Loss';\r\n        case 2:\r\n          return 'Warning';\r\n        case 3:\r\n          return 'Alarm (out of Spec)';\r\n        default:\r\n          return '';\r\n      }\r\n    };\r\n  \r\n    public gsfGrowthByClassification$ = this.dataService\r\n      .gsfGrowthByClassification()\r\n      .pipe(\r\n        map((d: any) =>\r\n          d.map((x: any) => {\r\n            const goLiveDate = new Date(x.goLiveDate);\r\n            return [\r\n              goLiveDate,\r\n              x.cncRoomsArea + x.iso8RoomsArea + x.iso7RoomsArea,\r\n              x.criticalEnvironmentParametersCount\r\n            ];\r\n          })\r\n        )\r\n      );\r\n  \r\n    private _facilityFilterOptions$: BehaviorSubject<\r\n      { repName: string; sectionName: string; value: string }[]\r\n    >;\r\n    public get facilityFilterOptions$() {\r\n      return this._facilityFilterOptions$ as Observable<\r\n        { repName: string; sectionName: string; value: string }[]\r\n      >;\r\n    }\r\n  }\r\n  ",
            "properties": [
                {
                    "name": "endDate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "facility",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "interval",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "startDate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "status",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 29
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "PinHoverInfo",
            "id": "interface-PinHoverInfo-30aeb3b44833b1ec13c5485fada77bf6cd6464d6626b0200b98783a444750faeac58cc2aa59a5c1e10bf3f645af0ca49a79261d2281f4b35f6c0dbc1f571a9a0",
            "file": "src/app/svg-status-map/svg-status-map.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import {\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  OnChanges,\r\n  Output\r\n} from '@angular/core';\r\nimport { SvgMap, SvgMapPin, defaultSvgMap } from '../api/models';\r\n\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\n\r\ndeclare const bootstrap: any;\r\n\r\nexport interface PinHoverInfo {\r\n  locationId: string;\r\n  status: 'on' | 'off';\r\n}\r\n\r\n@Component({\r\n  selector: 'app-svg-status-map',\r\n  templateUrl: './svg-status-map.component.html',\r\n  styleUrls: ['./svg-status-map.component.scss']\r\n})\r\nexport class SvgStatusMapComponent implements OnChanges {\r\n  constructor(private sanitizer: DomSanitizer) {}\r\n\r\n  mapTooltip(pin: SvgMapPin) {\r\n    const tooltipHtml = `\r\n    <div class=\"label-tooltip\">\r\n      Room: ${pin.title} <br>\r\n\r\n    </div>`;\r\n\r\n    // Room #: ${room.roomNumber} <br>\r\n    // Class: ${room.iso} <br>\r\n    // GSF: ${room.sq}\r\n\r\n    // Room: ${room.roomName} <br>\r\n    // Room #: ${room.roomNumber} <br>\r\n    // Class: ${room.iso} <br>\r\n    // GSF: ${room.sq}\r\n    // const tooltipHtml = `\r\n    //   <div align=\"left\" class=\"label-tooltip\">\r\n    //     <table>\r\n    //      <tr><td> Room: ${room.roomName} </td></tr>\r\n    //      <tr><td><b> Room #: ${room.roomNumber} </b></td></tr>\r\n    //      <tr><td><b> Class: ${room.iso} </b></td></tr>\r\n    //      <tr><td><b> GSF: ${room.sq} </b></td></tr>\r\n    //      </table>\r\n    //   </div>\r\n    // `;\r\n    return tooltipHtml;\r\n  }\r\n\r\n  ngOnChanges() {\r\n    for (const pin of this.svgMap.svgMapPins) {\r\n      window.setTimeout(() => {\r\n        const pinElem = document.getElementById('pin_' + pin.locationId);\r\n        if (pinElem) {\r\n          const tooltip = new bootstrap.Tooltip(pinElem, {\r\n            placement: 'right',\r\n            html: true,\r\n            title: '<div>' + pin.title + '</div>'\r\n          });\r\n        }\r\n      }, 100);\r\n\r\n      // const roomData = this.chartData.locations[locationName];\r\n      // if(roomData) {\r\n      //   const roomTooltip = this.roomLabelTooltip(roomData);\r\n      //   const tooltip = new bootstrap.Tooltip(label, {\r\n      //     placement:'right',\r\n      //     html: true,\r\n      //     title: roomTooltip\r\n      //   });\r\n      // }\r\n    }\r\n\r\n    for (const pin of this.svgMap.svgMapArrows) {\r\n      window.setTimeout(() => {\r\n        const pinElem = document.getElementById('pin_' + pin.locationId);\r\n        if (pinElem) {\r\n          const tooltip = new bootstrap.Tooltip(pinElem, {\r\n            placement: 'right',\r\n            html: true,\r\n            title: '<div>' + pin.locationId + '</div>'\r\n          });\r\n        }\r\n      }, 100);\r\n    }\r\n  }\r\n\r\n  @Input()\r\n  svgMap: SvgMap = defaultSvgMap;\r\n\r\n  @Input()\r\n  pinStates: { [name: string]: string } = {};\r\n\r\n  private _highlightedMapPin = '';\r\n  @Input()\r\n  get highlightedMapPin() {\r\n    return this._highlightedMapPin;\r\n  }\r\n  set highlightedMapPin(v: string) {\r\n    this._highlightedMapPin = v;\r\n    document.querySelectorAll('.pin-border').forEach((elem) => {\r\n      (elem as HTMLElement).style.fill = 'grey';\r\n    });\r\n    const target = document.querySelector(\r\n      '.pin-border[data-locationId=\"' + v + '\"]'\r\n    ) as HTMLElement;\r\n    if (target) {\r\n      target.style.fill = 'black';\r\n    }\r\n  }\r\n\r\n  private _backgroundImageUrl = '';\r\n  @Input()\r\n  get backgroundImageUrl() {\r\n    return this._backgroundImageUrl;\r\n  }\r\n  set backgroundImageUrl(v) {\r\n    this._backgroundImageUrl = v;\r\n\r\n    this.backgroundStyle = {\r\n      'background-image': 'url(' + this.backgroundImageUrl + ')',\r\n      'background-size': '100% 100%',\r\n      'background-repeat': 'no-repeat',\r\n      border: '1px solid blue;'\r\n    };\r\n  }\r\n\r\n  public backgroundStyle = {};\r\n\r\n  @Output()\r\n  pinClick: EventEmitter<string> = new EventEmitter<string>();\r\n\r\n  @Output()\r\n  pinMouseOver: EventEmitter<string> = new EventEmitter<string>();\r\n\r\n  @Output()\r\n  pinMouseOut: EventEmitter<string> = new EventEmitter<string>();\r\n\r\n  pinClass(locationId: string) {\r\n    if (this.pinStates[locationId]) {\r\n      return `pin-${this.pinStates[locationId]}`;\r\n    } else {\r\n      return 'pin-lightgray';\r\n    }\r\n  }\r\n\r\n  mouseOver(locationId: string) {\r\n    const target = document.querySelector(\r\n      '.pin-border[data-locationId=\"' + locationId + '\"]'\r\n    ) as HTMLElement;\r\n    if (target) {\r\n      target.style.fill = 'black';\r\n    }\r\n    this.pinMouseOver.emit(locationId);\r\n  }\r\n\r\n  mouseOut(locationId: string) {\r\n    const target = document.querySelector(\r\n      '.pin-border[data-locationId=\"' + locationId + '\"]'\r\n    ) as HTMLElement;\r\n    if (target) {\r\n      target.style.fill = 'grey';\r\n    }\r\n    this.pinMouseOut.emit(locationId);\r\n  }\r\n}\r\n",
            "properties": [
                {
                    "name": "locationId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "status",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"on\" | \"off\"",
                    "optional": false,
                    "description": "",
                    "line": 16
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "Role",
            "id": "interface-Role-b1fd0e4f132882771428e3a8a50934d0eb5249e1014499cc8b25412111296f4464dec50caeb0864de0b09f2d861c9de88e14c3b3fe96ea4e73571eb21b93e4dd",
            "file": "src/app/api/models/role.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Role {\r\n    roleId:number;\r\n    roleName:string;\r\n    description:string;\r\n    comments:string;\r\n    sortOrder:number;\r\n}\r\n\r\n",
            "properties": [
                {
                    "name": "comments",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "roleId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "roleName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "sortOrder",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "Room",
            "id": "interface-Room-9abf61cda6f4364bdcc36dc62a21c0a9c397936b181e7eee18b25c976e5431c859f7d2e864809ce3773a8b02af8cfd70314b3ba4a2351dfc6582eee313c1e47e",
            "file": "src/app/api/models/room.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { RoomParameter } from './roomParameter';\r\n\r\nexport interface Room {\r\n  roomId: number;\r\n  facilityId: number;\r\n  facility: string;\r\n  roomNumber: string;\r\n  connectingRoom: string;\r\n  roomName: string;\r\n  sq: number;\r\n  formattedName: string;\r\n  isActive: boolean;\r\n  roomParameters?: RoomParameter[];\r\n}\r\n\r\n\r\n",
            "properties": [
                {
                    "name": "connectingRoom",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "facility",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "facilityId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "formattedName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "isActive",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "roomId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "roomName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "roomNumber",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "roomParameters",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "RoomParameter[]",
                    "optional": true,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "sq",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "RoomDisplayField",
            "id": "interface-RoomDisplayField-4096b764617cb8b2902ef9ff0d4bd9a525ffb24ac1e72f15ae26439e4171fb505835fb27ec2e456904c47a5a46f7d4b0ed7d87105bb234e634dc90efa7be5169",
            "file": "src/app/facility-timeline-dashboard/facility-timeline-dashboard.service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import {\r\n    BehaviorSubject,\r\n    Observable,\r\n    Subject,\r\n    combineLatest,\r\n    distinctUntilChanged,\r\n    filter,\r\n    map,\r\n    mergeMap,\r\n    of,\r\n    zip\r\n} from 'rxjs';\r\nimport {\r\n    LocationCurrentStatus,\r\n    Room,\r\n    SvgMap,\r\n} from 'src/app/api/models';\r\nimport { keyBy, reduce } from 'lodash';\r\n\r\nimport { DataService } from 'src/app/api/data.service';\r\nimport { Injectable } from '@angular/core';\r\nimport { PiWebApiService } from '../api/pi-webapi.service';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\nexport interface PiDataFilter {\r\n    facility: { repName?: string; sectionName: string; value: number };\r\n    //portfolioId: string;\r\n    //facilityOrPortfolio: 'facility' | 'portfolio'\r\n    status: string;\r\n    startDate: Date;\r\n    endDate: Date;\r\n    interval: number;\r\n  }\r\n  \r\n  export interface TimelineChartDataPoint {\r\n    locationName: string;\r\n    tag: string;\r\n    // statusValue:number,\r\n    chillerStatusLabel: string;\r\n    statusColor: string;\r\n    startDate: Date;\r\n    endDate: Date;\r\n  }\r\n  \r\n  export interface RoomDisplayField {\r\n    name: string;\r\n    value: string;\r\n    displayType?: string;\r\n  }\r\n  \r\n  export interface TimelineChartData {\r\n    points: TimelineChartDataPoint[];\r\n    locations: { [name: string]: any };\r\n    // locationCount: number;\r\n    locationType: 'room' | 'facility';\r\n  }\r\n  \r\n  export interface StatusPoint {\r\n    timeStamp: number;\r\n    numeric_value: number;\r\n  }\r\n  \r\n  export type locationStatusLookup = { [name: string]: string };\r\n  export type roomInfoLookup = { [name: string]: string };\r\n  export type apfLimitsLookup = { [facRoomKey: string]: any };\r\n  \r\n  @Injectable()\r\n  export class FacilityTimelineDashboardService {\r\n    constructor(private dataService: DataService, private piWebApiService:PiWebApiService) {\r\n      const defaultStartDate = new Date();\r\n      defaultStartDate.setDate(defaultStartDate.getDate() - 1);\r\n\r\n      this._piDataFilter$ = new Subject<PiDataFilter>()\r\n      // new BehaviorSubject<PiDataFilter>({\r\n      //   facility: { repName: '', sectionName: '', value: 0 },\r\n      //   portfolioId: '',\r\n      //   facilityOrPortfolio: 'facility',\r\n      //   status: '',\r\n      //   startDate: defaultStartDate,\r\n      //   endDate: defaultEndDate,\r\n      //   interval: 10\r\n      // });\r\n  \r\n      this._ic$ = new BehaviorSubject<string>('');\r\n      this._facilityFilterOptions$ = new BehaviorSubject<\r\n        { repName: string; sectionName: string; value: string }[]\r\n      >([]);\r\n      this._svgMap$ = new BehaviorSubject<SvgMap>({\r\n        name: 'apf_facility_all',\r\n        backgroundSvg: '',\r\n        id: 0,\r\n        svgMapPins: [],\r\n        svgMapArrows: [],\r\n        viewbox: '0 0 0 0',\r\n        defs: '',\r\n        facilityId: 0\r\n      });\r\n      this._svgMapBackgroundImageUrl$ = new BehaviorSubject<string>('');\r\n      this._currentStatusValues$ = new BehaviorSubject<LocationCurrentStatus[]>(\r\n        []\r\n      );\r\n      this._parameterValues$ = new BehaviorSubject<Room[]>([]);\r\n      this._timelineChartData$ = new BehaviorSubject<TimelineChartData>({\r\n        points: [],\r\n        locations: {},\r\n        //locationCount:0,\r\n        locationType: 'facility'\r\n      });\r\n      this._selectedPin$ = new BehaviorSubject<string>('');\r\n      this._selectedRoomInfo$ = new BehaviorSubject<roomInfoLookup>({});\r\n      this._hoveredPin$ = new BehaviorSubject<string>('');\r\n      this._hoveredTimelineLabel$ = new BehaviorSubject<string>('');\r\n      this._apfLimits$ = new BehaviorSubject<apfLimitsLookup>({});\r\n      this._pinStates = new BehaviorSubject<locationStatusLookup>({});\r\n    \r\n      // Setup APF Limits from PI for all facilities\r\n      //this.dataService.apfLimits().subscribe((limits: any[]) => {\r\n      this.piWebApiService.apfLimits().subscribe((limits: any[]) => {\r\n\r\n        const limitsLookup:{[key:string]:string} = {};\r\n\r\n        try {\r\n          for(const limit of limits) {\r\n            if(limit.Conn_Room) {\r\n              const name1 = limit.Conn_Room ? `${limit.Room}_${limit.Conn_Room}_DP` : limit.Room;\r\n              const name2 = limit.Conn_Room ? `${limit.Conn_Room}_${limit.Room}_DP` : limit.Room;\r\n              limitsLookup[`${limit.Facility.toLowerCase()}|${name1.toLowerCase()}`] = limit;\r\n              limitsLookup[`${limit.Facility.toLowerCase()}|${name2.toLowerCase()}`] = limit;\r\n            }\r\n            else {\r\n              limitsLookup[`${limit.Facility.toLowerCase()}|${limit.Room.toLowerCase()}`] = limit\r\n            }\r\n          }\r\n        }\r\n        catch(e){\r\n          console.log(e)\r\n        }\r\n  \r\n        this._apfLimits$.next(limitsLookup);\r\n      });\r\n  \r\n      // create an observable of the facility selected in the fillter control\r\n      const selectedFacility$ = this._piDataFilter$.pipe(\r\n        distinctUntilChanged(\r\n          (prev, curr) => prev.facility.value === curr.facility.value\r\n        ),\r\n        map((f) => f.facility)\r\n      );\r\n\r\n      const selectedStatus$ = this._piDataFilter$.pipe(\r\n        map((f) => (f.status.toLowerCase())),\r\n        distinctUntilChanged()\r\n      );\r\n      \r\n      // create an observable of the marker type to use with the map - 'pin' or 'arrow'\r\n      const svgMapMarker$ = this._piDataFilter$.pipe(\r\n        map((f) => (f.status.toLowerCase() === 'dp' ? 'arrow' : 'pin')),\r\n        distinctUntilChanged()\r\n      );\r\n  \r\n      // Update the floor plan and room parameter info needed by svg map when the facility changes\r\n      selectedFacility$\r\n        .pipe(\r\n          filter(facility=>Boolean(facility?.value)),\r\n          mergeMap((facility) =>\r\n            zip(\r\n              of(facility.value),\r\n              this.dataService.roomParameterInfo(facility.value) // parameter info from database for each room and attribute in facility\r\n            )\r\n          )\r\n        )\r\n        .subscribe(([facilityId, parameterValues]) => {\r\n          const backGroundImageUrl = `assets/images/orig-floor-plans/FID${facilityId}_FloorPlan.jpg`;\r\n          this._svgMapBackgroundImageUrl$.next(backGroundImageUrl);\r\n\r\n          this._parameterValues$.next(parameterValues);\r\n  \r\n          this._selectedPin$.next('');\r\n          this._selectedRoomInfo$.next({});\r\n        });\r\n      \r\n\r\n      // Update the room states when the facility or the selected status attribute changes\r\n      combineLatest([selectedFacility$, selectedStatus$])\r\n        .pipe(\r\n          mergeMap(([facility,status]) => {\r\n            return this.piWebApiService.facilityCurrentStatusData(facility.sectionName, status);\r\n          }),\r\n          map((statusData)=>{\r\n            const pinStatusLookup = reduce(\r\n              statusData,\r\n              (acc, x) => ({\r\n                ...acc,\r\n                [x.locationName]: this.statusColor(x.statusPoint.numeric_value)\r\n              }),\r\n              {}\r\n            );\r\n            return pinStatusLookup;\r\n          })\r\n        ).subscribe((pinStatusLookup)=>{\r\n          this._pinStates.next(pinStatusLookup);\r\n    \r\n        })\r\n        \r\n  \r\n      // Get the pins or arrows for the Svg Floor plan if the facility changes or attriibute changes between not dp and dp\r\n      combineLatest([selectedFacility$, svgMapMarker$])\r\n        .pipe(\r\n          mergeMap(([facility, marker]) => {\r\n            return this.dataService.svgMap(facility.value, marker);\r\n          })\r\n        )\r\n        .subscribe((svgMap) => {\r\n          this._svgMap$.next(svgMap);\r\n        });\r\n  \r\n      // when a map pin is selected, prepare room info display data using the apf limits query, current status values, and the room parameters\r\n      const roomCurrentAttributeData$ = \r\n        combineLatest([selectedFacility$, this._selectedPin$])\r\n          .pipe(\r\n            filter(([facility,pin])=>Boolean(pin)),\r\n            mergeMap(([facility,pin])=>zip(\r\n              of(facility),\r\n              of(pin),\r\n              //this.dataService.roomCurrentAttributeData(facility.value,pin)))\r\n              this.piWebApiService.roomCurrentAttributeData(facility.sectionName,pin)))\r\n          )\r\n\r\n      roomCurrentAttributeData$\r\n      .subscribe(([facility,pin,roomStatusValues]) => {\r\n        const sectionName = facility.sectionName.toLowerCase();\r\n        const key = `${sectionName}|${pin.toLowerCase()}`; // pin = room number\r\n        const apfLimits = this._apfLimits$.value[key];\r\n        const isDP = pin.indexOf('DP') > -1;\r\n        const room = isDP ? \r\n          this._parameterValues$.value.find(\r\n            (r) => (r.formattedName.toLowerCase() === pin.toLowerCase())\r\n          ) : \r\n          this._parameterValues$.value.find(\r\n            (r) => (r.roomNumber.toLowerCase() === pin.toLowerCase())\r\n          );\r\n  \r\n        const info = {\r\n          ...apfLimits,\r\n          gsf: room?.sq,\r\n          roomParameters: room?.roomParameters,\r\n          roomStatusValues,\r\n          compositeStatus: roomStatusValues.find(\r\n            (x) => x.attribute === 'Composite'\r\n          )?.statusPoint,\r\n          tempStatus: roomStatusValues.find((x) => x.attribute === 'Temp')\r\n            ?.statusPoint,\r\n          rhStatus: roomStatusValues.find((x) => x.attribute === 'Hum')\r\n            ?.statusPoint,\r\n          achStatus: roomStatusValues.find((x) => x.attribute === 'Airx')\r\n            ?.statusPoint,\r\n          dpStatus: roomStatusValues.find((x) => x.attribute === 'DP')\r\n            ?.statusPoint\r\n        };\r\n  \r\n        this._selectedRoomInfo$.next(info);\r\n      });\r\n  \r\n\r\n      // prepare data for specific facility timeline\r\n      this._piDataFilter$\r\n        .pipe(\r\n          mergeMap((filter: PiDataFilter) =>\r\n\r\n            this.piWebApiService.timelineData(\r\n              filter.facility.sectionName,\r\n              filter.status,\r\n              filter.startDate,\r\n              filter.endDate,\r\n              filter.interval\r\n            )\r\n              .pipe(\r\n                catchError((err) => {\r\n                  console.log(\r\n                    'Error from dataService.facilityRoomsTimelineDate:' +\r\n                      JSON.stringify(err)\r\n                  );\r\n                  return of([]);\r\n                }),\r\n                map((data) => ({ filter, data }))\r\n              )\r\n          )\r\n        )\r\n        .subscribe((dataAndFilter) => {\r\n          const chartDataPoints: TimelineChartDataPoint[] = [];\r\n          const rooms = dataAndFilter.data.map((d) => d.location);\r\n          const roomLookup = keyBy(rooms, (r) => r.roomNumber);\r\n          const timestamps = (dataAndFilter.data || [])\r\n            .filter((x) => x.points.some(Boolean))\r\n            .map((x) => x.points[0].timestamp);\r\n          const minTimestamp = timestamps.reduce(function (a, b) {\r\n            return a < b ? a : b;\r\n          },Number.MAX_VALUE);\r\n  \r\n          for (const x of dataAndFilter.data) {\r\n            if (!x.points.some(Boolean)) {\r\n              x.points = [\r\n                {\r\n                  timestamp: minTimestamp,\r\n                  numeric_value: 1\r\n                },\r\n                {\r\n                  timestamp: dataAndFilter.filter.endDate.getTime(),\r\n                  numeric_value: 1\r\n                }\r\n              ];\r\n            }\r\n  \r\n            x.points.sort((a, b) => a.timestamp - b.timestamp);\r\n            let startTime = x.points[0].timestamp;\r\n            for (const y of x.points) {\r\n              if (y.timestamp < dataAndFilter.filter.startDate.getTime()) {\r\n                console.log('error - timestamp before request time');\r\n              }\r\n              const point: TimelineChartDataPoint = {\r\n                locationName: x.location.roomNumber,\r\n                tag: x.tag,\r\n                startDate: new Date(startTime),\r\n                endDate: new Date(Math.max(y.timestamp, startTime)),\r\n                statusColor: this.statusColor(y.numeric_value),\r\n                chillerStatusLabel: this.chillerStatusLabel(y.numeric_value)\r\n              };\r\n  \r\n              startTime = y.timestamp;\r\n              chartDataPoints.push(point);\r\n            }\r\n          }\r\n\r\n          const locations:any = {};\r\n          for(const d of dataAndFilter.data) {\r\n            locations[d.location.roomNumber] =d.location\r\n          }\r\n\r\n          this._timelineChartData$.next({\r\n            points: chartDataPoints,\r\n            locations: roomLookup,\r\n            //locationCount:dataAndFilter.data.length,\r\n            locationType: 'room'\r\n          });\r\n        });\r\n    } // end contstructor\r\n  \r\n    private _ic$: Subject<string>;\r\n    public setIC(ic: string) {\r\n      this._ic$.next(ic);\r\n    }\r\n  \r\n    private _piDataFilter$: Subject<PiDataFilter>;\r\n    public filterPiData(filter: PiDataFilter) {\r\n      this._piDataFilter$.next(filter);\r\n    }\r\n    public get piDataFilter$() {\r\n      return this._piDataFilter$ as Observable<PiDataFilter>;\r\n    }\r\n  \r\n    public get isFacilityAll$() {\r\n      return this._piDataFilter$.pipe(\r\n        map((f) => {\r\n          return Number(f.facility) === 0;\r\n        })\r\n      );\r\n    }\r\n  \r\n    private _svgMap$: Subject<SvgMap>;\r\n    public get svgMap$() {\r\n      return this._svgMap$ as Observable<SvgMap>;\r\n    }\r\n  \r\n    private _currentStatusValues$: BehaviorSubject<LocationCurrentStatus[]>;\r\n    private _pinStates: BehaviorSubject<locationStatusLookup>;\r\n  \r\n    public get pinStates$() {\r\n      return this._pinStates as Observable<locationStatusLookup>;\r\n    }\r\n  \r\n    private _parameterValues$: BehaviorSubject<Room[]>;\r\n    public get parameterValues$() {\r\n      return this._parameterValues$ as Observable<Room[]>;\r\n    }\r\n  \r\n    private _timelineChartData$: Subject<TimelineChartData>;\r\n    public get timelineChartData$() {\r\n      return this._timelineChartData$ as Observable<TimelineChartData>;\r\n    }\r\n  \r\n    private _svgMapBackgroundImageUrl$: Subject<string>;\r\n    public get svgMapBackgroundImageUrl$() {\r\n      return this._svgMapBackgroundImageUrl$ as Observable<string>;\r\n    }\r\n  \r\n    private _selectedPin$: Subject<string>;\r\n    public get selectedPin$() {\r\n      return this._selectedPin$ as Observable<string>;\r\n    }\r\n  \r\n    private _hoveredPin$: Subject<string>;\r\n    public get hoveredPin$() {\r\n      return this._hoveredPin$ as Observable<string>;\r\n    }\r\n  \r\n    private _hoveredTimelineLabel$: Subject<string>;\r\n    public get hoveredTimelineLabel$() {\r\n      return this._hoveredTimelineLabel$ as Observable<string>;\r\n    }\r\n  \r\n    private _selectedRoomInfo$: Subject<roomInfoLookup>;\r\n    public get selectedRoomInfo$() {\r\n      return this._selectedRoomInfo$ as Observable<roomInfoLookup>;\r\n    }\r\n  \r\n    public setSelectedPin(pinName: string) {\r\n      this._selectedPin$.next(pinName);\r\n    }\r\n  \r\n    public setHoveredPin(pinName: string) {\r\n      this._hoveredPin$.next(pinName);\r\n    }\r\n  \r\n    public setHoveredTimelineLabel(label: string) {\r\n      this._hoveredTimelineLabel$.next(label);\r\n    }\r\n  \r\n    private _apfLimits$: BehaviorSubject<apfLimitsLookup>;\r\n    public get apfLimits$() {\r\n      return this._apfLimits$ as Observable<apfLimitsLookup>;\r\n    }\r\n  \r\n    private statusColor = (statusVal: number) => {\r\n      switch (statusVal) {\r\n        case 0:\r\n          return 'green';\r\n        case 1:\r\n          return 'gray';\r\n        case 2:\r\n          return 'yellow';\r\n        case 3:\r\n          return 'red';\r\n        default:\r\n          return 'lightgray';\r\n      }\r\n    };\r\n  \r\n    private chillerStatusLabel = (statusVal: number) => {\r\n      switch (statusVal) {\r\n        case 0:\r\n          return 'Within Spec';\r\n        case 1:\r\n          return 'Comm Loss';\r\n        case 2:\r\n          return 'Warning';\r\n        case 3:\r\n          return 'Alarm (out of Spec)';\r\n        default:\r\n          return '';\r\n      }\r\n    };\r\n  \r\n    public gsfGrowthByClassification$ = this.dataService\r\n      .gsfGrowthByClassification()\r\n      .pipe(\r\n        map((d: any) =>\r\n          d.map((x: any) => {\r\n            const goLiveDate = new Date(x.goLiveDate);\r\n            return [\r\n              goLiveDate,\r\n              x.cncRoomsArea + x.iso8RoomsArea + x.iso7RoomsArea,\r\n              x.criticalEnvironmentParametersCount\r\n            ];\r\n          })\r\n        )\r\n      );\r\n  \r\n    private _facilityFilterOptions$: BehaviorSubject<\r\n      { repName: string; sectionName: string; value: string }[]\r\n    >;\r\n    public get facilityFilterOptions$() {\r\n      return this._facilityFilterOptions$ as Observable<\r\n        { repName: string; sectionName: string; value: string }[]\r\n      >;\r\n    }\r\n  }\r\n  ",
            "properties": [
                {
                    "name": "displayType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 48
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 46
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 47
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "RoomParameter",
            "id": "interface-RoomParameter-732b4eb5bf65345a7eb3b1dfd0b81bcff623e02fc704e8935a589b0212ca2a42e10ae8e1c4acfeb8b7de7f658e78e5eca31e0642d278ab1a81caaee9e2dc3f97",
            "file": "src/app/api/models/roomParameter.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface RoomParameter {\r\n  roomParameterId: number;\r\n  roomId: number;\r\n  facility: string;\r\n  roomNumber: string;\r\n  parameter: string;\r\n  iso: string;\r\n  sensorLocation: string;\r\n  sensorType: string;\r\n  calibrationType: string;\r\n  calibrationPeriod: string;\r\n  nextCalibration: string;\r\n  htte10: string;\r\n  siemensPointName: string;\r\n  jciPointName: string;\r\n  isoOrder: number;\r\n  rhTargetRange: string;\r\n\r\n\r\n}\r\n\r\n",
            "properties": [
                {
                    "name": "calibrationPeriod",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "calibrationType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "facility",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "htte10",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "iso",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "isoOrder",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "jciPointName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "nextCalibration",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "parameter",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "rhTargetRange",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "roomId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "roomNumber",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "roomParameterId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "sensorLocation",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "sensorType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "siemensPointName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "RoomStatusData",
            "id": "interface-RoomStatusData-25ae36e09943c1082499bbc9a89bd548f40d04eef67b730d9c6088378d0f76310ab321f45755bdf20d6308aab2eba2feeec85e905c60e640e61b409c0afccee4",
            "file": "src/app/timeline-chart-next/timeline-chart-next.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport * as d3 from 'd3';\r\n\r\ninterface StatusPoint {\r\n  time: Date;\r\n  status: number;\r\n}\r\n\r\ninterface RoomStatusData {\r\n  roomName: string;\r\n  statusPoints: StatusPoint[];\r\n}\r\n\r\n@Component({\r\n  selector: 'app-timeline-chart-next',\r\n  templateUrl: './timeline-chart-next.component.html',\r\n  styleUrls: ['./timeline-chart-next.component.css']\r\n})\r\nexport class TimelineChartNextComponent implements OnInit {\r\n  constructor() {}\r\n\r\n  private svg: any;\r\n\r\n  ngOnInit(): void {\r\n    this.createSvg();\r\n    this.createBars(this.chartData);\r\n  }\r\n\r\n  private dataPrep(points:StatusPoint[], minTime:Date, maxTime:Date) {\r\n\r\n    points.sort((a, b) => new Date(a.time).getTime() - new Date(b.time).getTime());\r\n\r\n    if(points[0].time !== minTime) {\r\n        points.unshift({time: minTime, status: points[0].status})\r\n    }\r\n    if(points[points.length - 1].time !== maxTime) {\r\n        points.push({time: maxTime, status: points[points.length - 1].status})\r\n    }\r\n    const enhancedPoints = [];\r\n    for(let i=0; i<points.length-1; i++) {\r\n      const duration = points[i+1].time.getTime() - points[i].time.getTime();\r\n      const enhancedPoint = {...points[i], duration};\r\n      enhancedPoints.push(enhancedPoint);\r\n    }\r\n    return enhancedPoints.slice(0, -1);\r\n  }\r\n\r\n  private createSvg(): void {\r\n    const svgParams = this.chartParams.svg;\r\n    this.svg = d3.select(\"figure#timelineChart\")\r\n      .append(\"svg\")\r\n      .attr(\"width\", svgParams.width + svgParams.margin.left + svgParams.margin.right)\r\n      .attr(\"height\", svgParams.height + svgParams.margin.top + svgParams.margin.bottom)\r\n      .append(\"g\")\r\n      .attr(\"transform\", \"translate(\" + this.chartParams.svg.margin.left+ \",\" + svgParams.margin.top + \")\");\r\n  }\r\n\r\n  private createBars(data: RoomStatusData[]): void {\r\n    const minTime = d3.min(data.flatMap((d) => d.statusPoints), (d) => new Date(d.time)) || new Date();\r\n    const maxTime = d3.max(data.flatMap((d) => d.statusPoints), (d) => new Date(d.time)) || new Date();\r\n\r\n      // difference between minTime and maxTime in milliseconds\r\n    const timeRange = maxTime.getTime() - minTime.getTime();\r\n\r\n    const preparedData = data.map((d) => ({\r\n      roomName: d.roomName, \r\n      statusPoints: this.dataPrep(d.statusPoints, minTime, maxTime)\r\n    }));\r\n\r\n    // xAxis setup\r\n    const xScale = \r\n      d3.scaleTime().range([0, this.chartParams.svg.width])\r\n        .domain(\r\n          data.flatMap((d) => d.statusPoints).map(x=>x.time)\r\n        );\r\n    const xAxis = d3.axisBottom(xScale);\r\n    this.svg.append(\"g\").attr(\"transform\", `translate(0,${this.chartParams.svg.height})`).call(xAxis);\r\n\r\n    // yAxis setup\r\n    const yScale = d3.scaleBand().range([0, this.chartParams.svg.height]);\r\n    const yAxis = d3.axisLeft(yScale);\r\n    yScale.domain(data.map((d) => d.roomName));\r\n    this.svg.append(\"g\").call(yAxis);\r\n\r\n\r\n  }\r\n\r\n  chartParams = {\r\n    svg: {\r\n      width: 800,\r\n      height: 200,\r\n      margin: { top: 20, right: 30, bottom: 30, left: 50 }\r\n    },\r\n    row: {\r\n      height: 41,\r\n      evenRowFillColor: '#ebe9e6',\r\n      oddRowFillColor: '#d4d2cf',\r\n      padding: {\r\n        top: 8,\r\n        right: 12,\r\n        bottom: 8,\r\n        left: 12\r\n      }\r\n    },\r\n    bar: {\r\n      height: 24,\r\n      colors: {\r\n        '0': 'green',\r\n        '1': 'yellow',\r\n        '2': 'red'\r\n      },\r\n      hoverColors: {\r\n        '0': 'lightgreen',\r\n        '1': 'lightyellow',\r\n        '2': 'lightred'\r\n      }\r\n    }\r\n  };\r\n\r\n  chartData: RoomStatusData[] = [\r\n    {\r\n      roomName: 'Room 1',\r\n      statusPoints: [\r\n        { time: new Date('2021-01-01T09:00:00'), status: 0 },\r\n        { time: new Date('2021-01-01T12:00:00'), status: 1 },\r\n        { time: new Date('2021-01-01T15:00:00'), status: 2 }\r\n      ]\r\n    },\r\n    {\r\n      roomName: 'Room 2',\r\n      statusPoints: [\r\n        { time: new Date('2021-01-01T09:00:00'), status: 2 },\r\n        { time: new Date('2021-01-01T12:00:00'), status: 1 },\r\n        { time: new Date('2021-01-01T15:00:00'), status: 0 }\r\n      ]\r\n    }\r\n\r\n  ];\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n// const minTime = d3.min(data.flatMap((d) => d.statusPoints), (d) => new Date(d.time));\r\n// const maxTime = d3.max(data.flatMap((d) => d.statusPoints), (d) => new Date(d.time));\r\n// const timeRange = maxTime - minTime;\r\n\r\n// for(const room of data) {\r\n//   dataPrep(room.statusPoints, minTime, maxTime);\r\n// }\r\n\r\n// const margin = { top: 20, right: 30, bottom: 30, left: 50 };\r\n// const width = 800 - margin.left - margin.right;\r\n// const height = 400 - margin.top - margin.bottom;\r\n\r\n// const svg = d3\r\n//   .select(\"#chart\")\r\n//   .attr(\"width\", width + margin.left + margin.right)\r\n//   .attr(\"height\", height + margin.top + margin.bottom)\r\n//   .append(\"g\")\r\n//   .attr(\"transform\", `translate(${margin.left},${margin.top})`);\r\n\r\n// const scalePercent = (x) => width * x / timeRange;\r\n// const xScale = d3.scaleTime().range([0, width]);\r\n// const yScale = d3.scaleBand().range([0, height]);\r\n\r\n// const xAxis = d3.axisBottom(xScale);\r\n// const yAxis = d3.axisLeft(yScale);\r\n\r\n// const colorScale = d3\r\n//   .scaleOrdinal()\r\n//   .domain([0, 1, 2])\r\n//   .range([\"green\", \"yellow\", \"red\"]);\r\n\r\n// const rowFill0 = \"#ebe9e6\";\r\n// const rowFill1 = \"#d4d2cf\";\r\n// const rowHeight = 41;\r\n// const barHeight = 24;\r\n\r\n// xScale.domain(\r\n//   d3.extent(data.flatMap((d) => d.statusPoints), (d) => new Date(d.time))\r\n// );\r\n// yScale.domain(data.map((d) => d.roomName));\r\n\r\n// svg.append(\"g\").attr(\"transform\", `translate(0,${height})`).call(xAxis);\r\n// svg.append(\"g\").call(yAxis);\r\n\r\n\r\n\r\n// svg\r\n// .selectAll(\".bar-group\")\r\n// .data(data)\r\n// .enter()\r\n//     .append(\"g\")\r\n//         .attr(\"class\", \"bar-group\")\r\n//         .attr(\"transform\", (d) => `translate(0,${yScale(d.roomName) + 2 * margin.top + margin.bottom})`)\r\n//         .append(\"rect\")\r\n//             .attr(\"x\", 0)\r\n//             .attr(\"y\", 0)\r\n//             .attr(\"width\", 400)\r\n//             .attr(\"height\", 20)\r\n//             .attr(\"fill\", \"green\")\r\n//             .attr(\"pointer-events\", \"all\")\r\n//             .on(\"mousemove\", (event) => {\r\n//                 const [x, y] = d3.pointer(event);\r\n//                 const date = xScale.invert(x);\r\n//                 const room = yScale.domain()[Math.floor(y / yScale.step())];\r\n\r\n//                 const status = data.find((d) => d.roomName === room).statusPoints.find(\r\n//                     (d) => new Date(d.time) <= date && new Date(d.time) + 1000 > date\r\n//                 ).status;\r\n\r\n//                 console.log(`Room: ${room}, Status: ${status}`);\r\n//             })\r\n//         .selectAll(\".bar\")\r\n//         .data((d) => d.statusPoints)\r\n//         .enter()\r\n//         .append(\"rect\")\r\n//             .attr(\"class\", \"bar\")\r\n//             .attr(\"x\", (p) => xScale(new Date(p.time)))  //(d) => xScale(new Date(d.time))\r\n//             .attr(\"y\", 0)\r\n//             .attr(\"width\", (p) => scalePercent(p.duration))\r\n//             .attr(\"height\", 20)\r\n//             .attr(\"fill\", (p) => colorScale(p.status))\r\n",
            "properties": [
                {
                    "name": "roomName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "statusPoints",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StatusPoint[]",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "RoomTimeSeriesData",
            "id": "interface-RoomTimeSeriesData-76c68cc294c66cc4dd47198bbb51f5890b9331191bd46f1d670a3c935a7e43caed002c589150456c62a9d1d275ba3151bcafb3c8382a661ce441d71f48e8f5b4",
            "file": "src/app/api/models/timeline.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Facility, Room } from '.';\r\n\r\nexport interface TimeSeriesPoint {\r\n  timestamp: number;\r\n  numeric_value: number;\r\n}\r\n\r\nexport interface LocationTimeSeriesData<T> {\r\n  location: T; //facility or room\r\n  tag: string; // piPath\r\n  points: TimeSeriesPoint[];\r\n}\r\n\r\nexport interface FacilityTimeSeriesData {\r\n  facility: Facility;\r\n  tag: string; // piPath\r\n  points: TimeSeriesPoint[];\r\n}\r\n\r\nexport interface RoomTimeSeriesData {\r\n  room: Room;\r\n  tag: string; // piPath\r\n  points: TimeSeriesPoint[];\r\n}\r\n\r\nexport interface LocationCurrentStatus {\r\n  locationName: string; //facility or room name\r\n  attribute: 'Composite' | 'Temp' | 'Hum' | 'Airx' | 'DP';\r\n  statusPoint: TimeSeriesPoint;\r\n}\r\n\r\nexport interface LocationQuery {\r\n  locationName: string;\r\n  tag: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "points",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TimeSeriesPoint[]",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "room",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Room",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "tag",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 22
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "StatusPoint",
            "id": "interface-StatusPoint-4096b764617cb8b2902ef9ff0d4bd9a525ffb24ac1e72f15ae26439e4171fb505835fb27ec2e456904c47a5a46f7d4b0ed7d87105bb234e634dc90efa7be5169",
            "file": "src/app/facility-timeline-dashboard/facility-timeline-dashboard.service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import {\r\n    BehaviorSubject,\r\n    Observable,\r\n    Subject,\r\n    combineLatest,\r\n    distinctUntilChanged,\r\n    filter,\r\n    map,\r\n    mergeMap,\r\n    of,\r\n    zip\r\n} from 'rxjs';\r\nimport {\r\n    LocationCurrentStatus,\r\n    Room,\r\n    SvgMap,\r\n} from 'src/app/api/models';\r\nimport { keyBy, reduce } from 'lodash';\r\n\r\nimport { DataService } from 'src/app/api/data.service';\r\nimport { Injectable } from '@angular/core';\r\nimport { PiWebApiService } from '../api/pi-webapi.service';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\nexport interface PiDataFilter {\r\n    facility: { repName?: string; sectionName: string; value: number };\r\n    //portfolioId: string;\r\n    //facilityOrPortfolio: 'facility' | 'portfolio'\r\n    status: string;\r\n    startDate: Date;\r\n    endDate: Date;\r\n    interval: number;\r\n  }\r\n  \r\n  export interface TimelineChartDataPoint {\r\n    locationName: string;\r\n    tag: string;\r\n    // statusValue:number,\r\n    chillerStatusLabel: string;\r\n    statusColor: string;\r\n    startDate: Date;\r\n    endDate: Date;\r\n  }\r\n  \r\n  export interface RoomDisplayField {\r\n    name: string;\r\n    value: string;\r\n    displayType?: string;\r\n  }\r\n  \r\n  export interface TimelineChartData {\r\n    points: TimelineChartDataPoint[];\r\n    locations: { [name: string]: any };\r\n    // locationCount: number;\r\n    locationType: 'room' | 'facility';\r\n  }\r\n  \r\n  export interface StatusPoint {\r\n    timeStamp: number;\r\n    numeric_value: number;\r\n  }\r\n  \r\n  export type locationStatusLookup = { [name: string]: string };\r\n  export type roomInfoLookup = { [name: string]: string };\r\n  export type apfLimitsLookup = { [facRoomKey: string]: any };\r\n  \r\n  @Injectable()\r\n  export class FacilityTimelineDashboardService {\r\n    constructor(private dataService: DataService, private piWebApiService:PiWebApiService) {\r\n      const defaultStartDate = new Date();\r\n      defaultStartDate.setDate(defaultStartDate.getDate() - 1);\r\n\r\n      this._piDataFilter$ = new Subject<PiDataFilter>()\r\n      // new BehaviorSubject<PiDataFilter>({\r\n      //   facility: { repName: '', sectionName: '', value: 0 },\r\n      //   portfolioId: '',\r\n      //   facilityOrPortfolio: 'facility',\r\n      //   status: '',\r\n      //   startDate: defaultStartDate,\r\n      //   endDate: defaultEndDate,\r\n      //   interval: 10\r\n      // });\r\n  \r\n      this._ic$ = new BehaviorSubject<string>('');\r\n      this._facilityFilterOptions$ = new BehaviorSubject<\r\n        { repName: string; sectionName: string; value: string }[]\r\n      >([]);\r\n      this._svgMap$ = new BehaviorSubject<SvgMap>({\r\n        name: 'apf_facility_all',\r\n        backgroundSvg: '',\r\n        id: 0,\r\n        svgMapPins: [],\r\n        svgMapArrows: [],\r\n        viewbox: '0 0 0 0',\r\n        defs: '',\r\n        facilityId: 0\r\n      });\r\n      this._svgMapBackgroundImageUrl$ = new BehaviorSubject<string>('');\r\n      this._currentStatusValues$ = new BehaviorSubject<LocationCurrentStatus[]>(\r\n        []\r\n      );\r\n      this._parameterValues$ = new BehaviorSubject<Room[]>([]);\r\n      this._timelineChartData$ = new BehaviorSubject<TimelineChartData>({\r\n        points: [],\r\n        locations: {},\r\n        //locationCount:0,\r\n        locationType: 'facility'\r\n      });\r\n      this._selectedPin$ = new BehaviorSubject<string>('');\r\n      this._selectedRoomInfo$ = new BehaviorSubject<roomInfoLookup>({});\r\n      this._hoveredPin$ = new BehaviorSubject<string>('');\r\n      this._hoveredTimelineLabel$ = new BehaviorSubject<string>('');\r\n      this._apfLimits$ = new BehaviorSubject<apfLimitsLookup>({});\r\n      this._pinStates = new BehaviorSubject<locationStatusLookup>({});\r\n    \r\n      // Setup APF Limits from PI for all facilities\r\n      //this.dataService.apfLimits().subscribe((limits: any[]) => {\r\n      this.piWebApiService.apfLimits().subscribe((limits: any[]) => {\r\n\r\n        const limitsLookup:{[key:string]:string} = {};\r\n\r\n        try {\r\n          for(const limit of limits) {\r\n            if(limit.Conn_Room) {\r\n              const name1 = limit.Conn_Room ? `${limit.Room}_${limit.Conn_Room}_DP` : limit.Room;\r\n              const name2 = limit.Conn_Room ? `${limit.Conn_Room}_${limit.Room}_DP` : limit.Room;\r\n              limitsLookup[`${limit.Facility.toLowerCase()}|${name1.toLowerCase()}`] = limit;\r\n              limitsLookup[`${limit.Facility.toLowerCase()}|${name2.toLowerCase()}`] = limit;\r\n            }\r\n            else {\r\n              limitsLookup[`${limit.Facility.toLowerCase()}|${limit.Room.toLowerCase()}`] = limit\r\n            }\r\n          }\r\n        }\r\n        catch(e){\r\n          console.log(e)\r\n        }\r\n  \r\n        this._apfLimits$.next(limitsLookup);\r\n      });\r\n  \r\n      // create an observable of the facility selected in the fillter control\r\n      const selectedFacility$ = this._piDataFilter$.pipe(\r\n        distinctUntilChanged(\r\n          (prev, curr) => prev.facility.value === curr.facility.value\r\n        ),\r\n        map((f) => f.facility)\r\n      );\r\n\r\n      const selectedStatus$ = this._piDataFilter$.pipe(\r\n        map((f) => (f.status.toLowerCase())),\r\n        distinctUntilChanged()\r\n      );\r\n      \r\n      // create an observable of the marker type to use with the map - 'pin' or 'arrow'\r\n      const svgMapMarker$ = this._piDataFilter$.pipe(\r\n        map((f) => (f.status.toLowerCase() === 'dp' ? 'arrow' : 'pin')),\r\n        distinctUntilChanged()\r\n      );\r\n  \r\n      // Update the floor plan and room parameter info needed by svg map when the facility changes\r\n      selectedFacility$\r\n        .pipe(\r\n          filter(facility=>Boolean(facility?.value)),\r\n          mergeMap((facility) =>\r\n            zip(\r\n              of(facility.value),\r\n              this.dataService.roomParameterInfo(facility.value) // parameter info from database for each room and attribute in facility\r\n            )\r\n          )\r\n        )\r\n        .subscribe(([facilityId, parameterValues]) => {\r\n          const backGroundImageUrl = `assets/images/orig-floor-plans/FID${facilityId}_FloorPlan.jpg`;\r\n          this._svgMapBackgroundImageUrl$.next(backGroundImageUrl);\r\n\r\n          this._parameterValues$.next(parameterValues);\r\n  \r\n          this._selectedPin$.next('');\r\n          this._selectedRoomInfo$.next({});\r\n        });\r\n      \r\n\r\n      // Update the room states when the facility or the selected status attribute changes\r\n      combineLatest([selectedFacility$, selectedStatus$])\r\n        .pipe(\r\n          mergeMap(([facility,status]) => {\r\n            return this.piWebApiService.facilityCurrentStatusData(facility.sectionName, status);\r\n          }),\r\n          map((statusData)=>{\r\n            const pinStatusLookup = reduce(\r\n              statusData,\r\n              (acc, x) => ({\r\n                ...acc,\r\n                [x.locationName]: this.statusColor(x.statusPoint.numeric_value)\r\n              }),\r\n              {}\r\n            );\r\n            return pinStatusLookup;\r\n          })\r\n        ).subscribe((pinStatusLookup)=>{\r\n          this._pinStates.next(pinStatusLookup);\r\n    \r\n        })\r\n        \r\n  \r\n      // Get the pins or arrows for the Svg Floor plan if the facility changes or attriibute changes between not dp and dp\r\n      combineLatest([selectedFacility$, svgMapMarker$])\r\n        .pipe(\r\n          mergeMap(([facility, marker]) => {\r\n            return this.dataService.svgMap(facility.value, marker);\r\n          })\r\n        )\r\n        .subscribe((svgMap) => {\r\n          this._svgMap$.next(svgMap);\r\n        });\r\n  \r\n      // when a map pin is selected, prepare room info display data using the apf limits query, current status values, and the room parameters\r\n      const roomCurrentAttributeData$ = \r\n        combineLatest([selectedFacility$, this._selectedPin$])\r\n          .pipe(\r\n            filter(([facility,pin])=>Boolean(pin)),\r\n            mergeMap(([facility,pin])=>zip(\r\n              of(facility),\r\n              of(pin),\r\n              //this.dataService.roomCurrentAttributeData(facility.value,pin)))\r\n              this.piWebApiService.roomCurrentAttributeData(facility.sectionName,pin)))\r\n          )\r\n\r\n      roomCurrentAttributeData$\r\n      .subscribe(([facility,pin,roomStatusValues]) => {\r\n        const sectionName = facility.sectionName.toLowerCase();\r\n        const key = `${sectionName}|${pin.toLowerCase()}`; // pin = room number\r\n        const apfLimits = this._apfLimits$.value[key];\r\n        const isDP = pin.indexOf('DP') > -1;\r\n        const room = isDP ? \r\n          this._parameterValues$.value.find(\r\n            (r) => (r.formattedName.toLowerCase() === pin.toLowerCase())\r\n          ) : \r\n          this._parameterValues$.value.find(\r\n            (r) => (r.roomNumber.toLowerCase() === pin.toLowerCase())\r\n          );\r\n  \r\n        const info = {\r\n          ...apfLimits,\r\n          gsf: room?.sq,\r\n          roomParameters: room?.roomParameters,\r\n          roomStatusValues,\r\n          compositeStatus: roomStatusValues.find(\r\n            (x) => x.attribute === 'Composite'\r\n          )?.statusPoint,\r\n          tempStatus: roomStatusValues.find((x) => x.attribute === 'Temp')\r\n            ?.statusPoint,\r\n          rhStatus: roomStatusValues.find((x) => x.attribute === 'Hum')\r\n            ?.statusPoint,\r\n          achStatus: roomStatusValues.find((x) => x.attribute === 'Airx')\r\n            ?.statusPoint,\r\n          dpStatus: roomStatusValues.find((x) => x.attribute === 'DP')\r\n            ?.statusPoint\r\n        };\r\n  \r\n        this._selectedRoomInfo$.next(info);\r\n      });\r\n  \r\n\r\n      // prepare data for specific facility timeline\r\n      this._piDataFilter$\r\n        .pipe(\r\n          mergeMap((filter: PiDataFilter) =>\r\n\r\n            this.piWebApiService.timelineData(\r\n              filter.facility.sectionName,\r\n              filter.status,\r\n              filter.startDate,\r\n              filter.endDate,\r\n              filter.interval\r\n            )\r\n              .pipe(\r\n                catchError((err) => {\r\n                  console.log(\r\n                    'Error from dataService.facilityRoomsTimelineDate:' +\r\n                      JSON.stringify(err)\r\n                  );\r\n                  return of([]);\r\n                }),\r\n                map((data) => ({ filter, data }))\r\n              )\r\n          )\r\n        )\r\n        .subscribe((dataAndFilter) => {\r\n          const chartDataPoints: TimelineChartDataPoint[] = [];\r\n          const rooms = dataAndFilter.data.map((d) => d.location);\r\n          const roomLookup = keyBy(rooms, (r) => r.roomNumber);\r\n          const timestamps = (dataAndFilter.data || [])\r\n            .filter((x) => x.points.some(Boolean))\r\n            .map((x) => x.points[0].timestamp);\r\n          const minTimestamp = timestamps.reduce(function (a, b) {\r\n            return a < b ? a : b;\r\n          },Number.MAX_VALUE);\r\n  \r\n          for (const x of dataAndFilter.data) {\r\n            if (!x.points.some(Boolean)) {\r\n              x.points = [\r\n                {\r\n                  timestamp: minTimestamp,\r\n                  numeric_value: 1\r\n                },\r\n                {\r\n                  timestamp: dataAndFilter.filter.endDate.getTime(),\r\n                  numeric_value: 1\r\n                }\r\n              ];\r\n            }\r\n  \r\n            x.points.sort((a, b) => a.timestamp - b.timestamp);\r\n            let startTime = x.points[0].timestamp;\r\n            for (const y of x.points) {\r\n              if (y.timestamp < dataAndFilter.filter.startDate.getTime()) {\r\n                console.log('error - timestamp before request time');\r\n              }\r\n              const point: TimelineChartDataPoint = {\r\n                locationName: x.location.roomNumber,\r\n                tag: x.tag,\r\n                startDate: new Date(startTime),\r\n                endDate: new Date(Math.max(y.timestamp, startTime)),\r\n                statusColor: this.statusColor(y.numeric_value),\r\n                chillerStatusLabel: this.chillerStatusLabel(y.numeric_value)\r\n              };\r\n  \r\n              startTime = y.timestamp;\r\n              chartDataPoints.push(point);\r\n            }\r\n          }\r\n\r\n          const locations:any = {};\r\n          for(const d of dataAndFilter.data) {\r\n            locations[d.location.roomNumber] =d.location\r\n          }\r\n\r\n          this._timelineChartData$.next({\r\n            points: chartDataPoints,\r\n            locations: roomLookup,\r\n            //locationCount:dataAndFilter.data.length,\r\n            locationType: 'room'\r\n          });\r\n        });\r\n    } // end contstructor\r\n  \r\n    private _ic$: Subject<string>;\r\n    public setIC(ic: string) {\r\n      this._ic$.next(ic);\r\n    }\r\n  \r\n    private _piDataFilter$: Subject<PiDataFilter>;\r\n    public filterPiData(filter: PiDataFilter) {\r\n      this._piDataFilter$.next(filter);\r\n    }\r\n    public get piDataFilter$() {\r\n      return this._piDataFilter$ as Observable<PiDataFilter>;\r\n    }\r\n  \r\n    public get isFacilityAll$() {\r\n      return this._piDataFilter$.pipe(\r\n        map((f) => {\r\n          return Number(f.facility) === 0;\r\n        })\r\n      );\r\n    }\r\n  \r\n    private _svgMap$: Subject<SvgMap>;\r\n    public get svgMap$() {\r\n      return this._svgMap$ as Observable<SvgMap>;\r\n    }\r\n  \r\n    private _currentStatusValues$: BehaviorSubject<LocationCurrentStatus[]>;\r\n    private _pinStates: BehaviorSubject<locationStatusLookup>;\r\n  \r\n    public get pinStates$() {\r\n      return this._pinStates as Observable<locationStatusLookup>;\r\n    }\r\n  \r\n    private _parameterValues$: BehaviorSubject<Room[]>;\r\n    public get parameterValues$() {\r\n      return this._parameterValues$ as Observable<Room[]>;\r\n    }\r\n  \r\n    private _timelineChartData$: Subject<TimelineChartData>;\r\n    public get timelineChartData$() {\r\n      return this._timelineChartData$ as Observable<TimelineChartData>;\r\n    }\r\n  \r\n    private _svgMapBackgroundImageUrl$: Subject<string>;\r\n    public get svgMapBackgroundImageUrl$() {\r\n      return this._svgMapBackgroundImageUrl$ as Observable<string>;\r\n    }\r\n  \r\n    private _selectedPin$: Subject<string>;\r\n    public get selectedPin$() {\r\n      return this._selectedPin$ as Observable<string>;\r\n    }\r\n  \r\n    private _hoveredPin$: Subject<string>;\r\n    public get hoveredPin$() {\r\n      return this._hoveredPin$ as Observable<string>;\r\n    }\r\n  \r\n    private _hoveredTimelineLabel$: Subject<string>;\r\n    public get hoveredTimelineLabel$() {\r\n      return this._hoveredTimelineLabel$ as Observable<string>;\r\n    }\r\n  \r\n    private _selectedRoomInfo$: Subject<roomInfoLookup>;\r\n    public get selectedRoomInfo$() {\r\n      return this._selectedRoomInfo$ as Observable<roomInfoLookup>;\r\n    }\r\n  \r\n    public setSelectedPin(pinName: string) {\r\n      this._selectedPin$.next(pinName);\r\n    }\r\n  \r\n    public setHoveredPin(pinName: string) {\r\n      this._hoveredPin$.next(pinName);\r\n    }\r\n  \r\n    public setHoveredTimelineLabel(label: string) {\r\n      this._hoveredTimelineLabel$.next(label);\r\n    }\r\n  \r\n    private _apfLimits$: BehaviorSubject<apfLimitsLookup>;\r\n    public get apfLimits$() {\r\n      return this._apfLimits$ as Observable<apfLimitsLookup>;\r\n    }\r\n  \r\n    private statusColor = (statusVal: number) => {\r\n      switch (statusVal) {\r\n        case 0:\r\n          return 'green';\r\n        case 1:\r\n          return 'gray';\r\n        case 2:\r\n          return 'yellow';\r\n        case 3:\r\n          return 'red';\r\n        default:\r\n          return 'lightgray';\r\n      }\r\n    };\r\n  \r\n    private chillerStatusLabel = (statusVal: number) => {\r\n      switch (statusVal) {\r\n        case 0:\r\n          return 'Within Spec';\r\n        case 1:\r\n          return 'Comm Loss';\r\n        case 2:\r\n          return 'Warning';\r\n        case 3:\r\n          return 'Alarm (out of Spec)';\r\n        default:\r\n          return '';\r\n      }\r\n    };\r\n  \r\n    public gsfGrowthByClassification$ = this.dataService\r\n      .gsfGrowthByClassification()\r\n      .pipe(\r\n        map((d: any) =>\r\n          d.map((x: any) => {\r\n            const goLiveDate = new Date(x.goLiveDate);\r\n            return [\r\n              goLiveDate,\r\n              x.cncRoomsArea + x.iso8RoomsArea + x.iso7RoomsArea,\r\n              x.criticalEnvironmentParametersCount\r\n            ];\r\n          })\r\n        )\r\n      );\r\n  \r\n    private _facilityFilterOptions$: BehaviorSubject<\r\n      { repName: string; sectionName: string; value: string }[]\r\n    >;\r\n    public get facilityFilterOptions$() {\r\n      return this._facilityFilterOptions$ as Observable<\r\n        { repName: string; sectionName: string; value: string }[]\r\n      >;\r\n    }\r\n  }\r\n  ",
            "properties": [
                {
                    "name": "numeric_value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 60
                },
                {
                    "name": "timeStamp",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 59
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "StatusPoint",
            "id": "interface-StatusPoint-25ae36e09943c1082499bbc9a89bd548f40d04eef67b730d9c6088378d0f76310ab321f45755bdf20d6308aab2eba2feeec85e905c60e640e61b409c0afccee4-1",
            "file": "src/app/timeline-chart-next/timeline-chart-next.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport * as d3 from 'd3';\r\n\r\ninterface StatusPoint {\r\n  time: Date;\r\n  status: number;\r\n}\r\n\r\ninterface RoomStatusData {\r\n  roomName: string;\r\n  statusPoints: StatusPoint[];\r\n}\r\n\r\n@Component({\r\n  selector: 'app-timeline-chart-next',\r\n  templateUrl: './timeline-chart-next.component.html',\r\n  styleUrls: ['./timeline-chart-next.component.css']\r\n})\r\nexport class TimelineChartNextComponent implements OnInit {\r\n  constructor() {}\r\n\r\n  private svg: any;\r\n\r\n  ngOnInit(): void {\r\n    this.createSvg();\r\n    this.createBars(this.chartData);\r\n  }\r\n\r\n  private dataPrep(points:StatusPoint[], minTime:Date, maxTime:Date) {\r\n\r\n    points.sort((a, b) => new Date(a.time).getTime() - new Date(b.time).getTime());\r\n\r\n    if(points[0].time !== minTime) {\r\n        points.unshift({time: minTime, status: points[0].status})\r\n    }\r\n    if(points[points.length - 1].time !== maxTime) {\r\n        points.push({time: maxTime, status: points[points.length - 1].status})\r\n    }\r\n    const enhancedPoints = [];\r\n    for(let i=0; i<points.length-1; i++) {\r\n      const duration = points[i+1].time.getTime() - points[i].time.getTime();\r\n      const enhancedPoint = {...points[i], duration};\r\n      enhancedPoints.push(enhancedPoint);\r\n    }\r\n    return enhancedPoints.slice(0, -1);\r\n  }\r\n\r\n  private createSvg(): void {\r\n    const svgParams = this.chartParams.svg;\r\n    this.svg = d3.select(\"figure#timelineChart\")\r\n      .append(\"svg\")\r\n      .attr(\"width\", svgParams.width + svgParams.margin.left + svgParams.margin.right)\r\n      .attr(\"height\", svgParams.height + svgParams.margin.top + svgParams.margin.bottom)\r\n      .append(\"g\")\r\n      .attr(\"transform\", \"translate(\" + this.chartParams.svg.margin.left+ \",\" + svgParams.margin.top + \")\");\r\n  }\r\n\r\n  private createBars(data: RoomStatusData[]): void {\r\n    const minTime = d3.min(data.flatMap((d) => d.statusPoints), (d) => new Date(d.time)) || new Date();\r\n    const maxTime = d3.max(data.flatMap((d) => d.statusPoints), (d) => new Date(d.time)) || new Date();\r\n\r\n      // difference between minTime and maxTime in milliseconds\r\n    const timeRange = maxTime.getTime() - minTime.getTime();\r\n\r\n    const preparedData = data.map((d) => ({\r\n      roomName: d.roomName, \r\n      statusPoints: this.dataPrep(d.statusPoints, minTime, maxTime)\r\n    }));\r\n\r\n    // xAxis setup\r\n    const xScale = \r\n      d3.scaleTime().range([0, this.chartParams.svg.width])\r\n        .domain(\r\n          data.flatMap((d) => d.statusPoints).map(x=>x.time)\r\n        );\r\n    const xAxis = d3.axisBottom(xScale);\r\n    this.svg.append(\"g\").attr(\"transform\", `translate(0,${this.chartParams.svg.height})`).call(xAxis);\r\n\r\n    // yAxis setup\r\n    const yScale = d3.scaleBand().range([0, this.chartParams.svg.height]);\r\n    const yAxis = d3.axisLeft(yScale);\r\n    yScale.domain(data.map((d) => d.roomName));\r\n    this.svg.append(\"g\").call(yAxis);\r\n\r\n\r\n  }\r\n\r\n  chartParams = {\r\n    svg: {\r\n      width: 800,\r\n      height: 200,\r\n      margin: { top: 20, right: 30, bottom: 30, left: 50 }\r\n    },\r\n    row: {\r\n      height: 41,\r\n      evenRowFillColor: '#ebe9e6',\r\n      oddRowFillColor: '#d4d2cf',\r\n      padding: {\r\n        top: 8,\r\n        right: 12,\r\n        bottom: 8,\r\n        left: 12\r\n      }\r\n    },\r\n    bar: {\r\n      height: 24,\r\n      colors: {\r\n        '0': 'green',\r\n        '1': 'yellow',\r\n        '2': 'red'\r\n      },\r\n      hoverColors: {\r\n        '0': 'lightgreen',\r\n        '1': 'lightyellow',\r\n        '2': 'lightred'\r\n      }\r\n    }\r\n  };\r\n\r\n  chartData: RoomStatusData[] = [\r\n    {\r\n      roomName: 'Room 1',\r\n      statusPoints: [\r\n        { time: new Date('2021-01-01T09:00:00'), status: 0 },\r\n        { time: new Date('2021-01-01T12:00:00'), status: 1 },\r\n        { time: new Date('2021-01-01T15:00:00'), status: 2 }\r\n      ]\r\n    },\r\n    {\r\n      roomName: 'Room 2',\r\n      statusPoints: [\r\n        { time: new Date('2021-01-01T09:00:00'), status: 2 },\r\n        { time: new Date('2021-01-01T12:00:00'), status: 1 },\r\n        { time: new Date('2021-01-01T15:00:00'), status: 0 }\r\n      ]\r\n    }\r\n\r\n  ];\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n// const minTime = d3.min(data.flatMap((d) => d.statusPoints), (d) => new Date(d.time));\r\n// const maxTime = d3.max(data.flatMap((d) => d.statusPoints), (d) => new Date(d.time));\r\n// const timeRange = maxTime - minTime;\r\n\r\n// for(const room of data) {\r\n//   dataPrep(room.statusPoints, minTime, maxTime);\r\n// }\r\n\r\n// const margin = { top: 20, right: 30, bottom: 30, left: 50 };\r\n// const width = 800 - margin.left - margin.right;\r\n// const height = 400 - margin.top - margin.bottom;\r\n\r\n// const svg = d3\r\n//   .select(\"#chart\")\r\n//   .attr(\"width\", width + margin.left + margin.right)\r\n//   .attr(\"height\", height + margin.top + margin.bottom)\r\n//   .append(\"g\")\r\n//   .attr(\"transform\", `translate(${margin.left},${margin.top})`);\r\n\r\n// const scalePercent = (x) => width * x / timeRange;\r\n// const xScale = d3.scaleTime().range([0, width]);\r\n// const yScale = d3.scaleBand().range([0, height]);\r\n\r\n// const xAxis = d3.axisBottom(xScale);\r\n// const yAxis = d3.axisLeft(yScale);\r\n\r\n// const colorScale = d3\r\n//   .scaleOrdinal()\r\n//   .domain([0, 1, 2])\r\n//   .range([\"green\", \"yellow\", \"red\"]);\r\n\r\n// const rowFill0 = \"#ebe9e6\";\r\n// const rowFill1 = \"#d4d2cf\";\r\n// const rowHeight = 41;\r\n// const barHeight = 24;\r\n\r\n// xScale.domain(\r\n//   d3.extent(data.flatMap((d) => d.statusPoints), (d) => new Date(d.time))\r\n// );\r\n// yScale.domain(data.map((d) => d.roomName));\r\n\r\n// svg.append(\"g\").attr(\"transform\", `translate(0,${height})`).call(xAxis);\r\n// svg.append(\"g\").call(yAxis);\r\n\r\n\r\n\r\n// svg\r\n// .selectAll(\".bar-group\")\r\n// .data(data)\r\n// .enter()\r\n//     .append(\"g\")\r\n//         .attr(\"class\", \"bar-group\")\r\n//         .attr(\"transform\", (d) => `translate(0,${yScale(d.roomName) + 2 * margin.top + margin.bottom})`)\r\n//         .append(\"rect\")\r\n//             .attr(\"x\", 0)\r\n//             .attr(\"y\", 0)\r\n//             .attr(\"width\", 400)\r\n//             .attr(\"height\", 20)\r\n//             .attr(\"fill\", \"green\")\r\n//             .attr(\"pointer-events\", \"all\")\r\n//             .on(\"mousemove\", (event) => {\r\n//                 const [x, y] = d3.pointer(event);\r\n//                 const date = xScale.invert(x);\r\n//                 const room = yScale.domain()[Math.floor(y / yScale.step())];\r\n\r\n//                 const status = data.find((d) => d.roomName === room).statusPoints.find(\r\n//                     (d) => new Date(d.time) <= date && new Date(d.time) + 1000 > date\r\n//                 ).status;\r\n\r\n//                 console.log(`Room: ${room}, Status: ${status}`);\r\n//             })\r\n//         .selectAll(\".bar\")\r\n//         .data((d) => d.statusPoints)\r\n//         .enter()\r\n//         .append(\"rect\")\r\n//             .attr(\"class\", \"bar\")\r\n//             .attr(\"x\", (p) => xScale(new Date(p.time)))  //(d) => xScale(new Date(d.time))\r\n//             .attr(\"y\", 0)\r\n//             .attr(\"width\", (p) => scalePercent(p.duration))\r\n//             .attr(\"height\", 20)\r\n//             .attr(\"fill\", (p) => colorScale(p.status))\r\n",
            "properties": [
                {
                    "name": "status",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "time",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "StatusPoint-1"
        },
        {
            "name": "SvgMap",
            "id": "interface-SvgMap-8408807dea59d4e826f1720591bfbe8745c9acd766b0b8f48e089a9a7bd19f22a2c9dd5e11e02405094723e7fabc83d8a9847ed731f3baa73f0399b5e2c5c7e5",
            "file": "src/app/api/models/svgMap.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface SvgMapPin {\r\n  id: number;\r\n  locationId: string;\r\n  title: string;\r\n  cx: number;\r\n  cy: number;\r\n  r: number;\r\n  path: string;\r\n}\r\n\r\nexport interface SvgMapArrow {\r\n  id: number;\r\n  locationId: string;\r\n\r\n  arrowOutlinePoints: string;\r\n  arrowInsidePoints: string;\r\n}\r\n\r\nexport interface SvgMap {\r\n  id: number;\r\n  name: string;\r\n  defs: string;\r\n  backgroundSvg: string;\r\n  viewbox: string;\r\n  facilityId: number;\r\n  svgMapPins: SvgMapPin[];\r\n  svgMapArrows: SvgMapArrow[];\r\n}\r\n\r\nexport const defaultSvgMap: SvgMap = {\r\n  id: 0,\r\n  backgroundSvg: '',\r\n  name: '',\r\n  svgMapPins: [],\r\n  svgMapArrows: [],\r\n  viewbox: '0 0 0 0',\r\n  defs: '',\r\n  facilityId: 0\r\n};\r\n",
            "properties": [
                {
                    "name": "backgroundSvg",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "defs",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "facilityId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "svgMapArrows",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SvgMapArrow[]",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "svgMapPins",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SvgMapPin[]",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "viewbox",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 24
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "SvgMapArrow",
            "id": "interface-SvgMapArrow-8408807dea59d4e826f1720591bfbe8745c9acd766b0b8f48e089a9a7bd19f22a2c9dd5e11e02405094723e7fabc83d8a9847ed731f3baa73f0399b5e2c5c7e5",
            "file": "src/app/api/models/svgMap.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface SvgMapPin {\r\n  id: number;\r\n  locationId: string;\r\n  title: string;\r\n  cx: number;\r\n  cy: number;\r\n  r: number;\r\n  path: string;\r\n}\r\n\r\nexport interface SvgMapArrow {\r\n  id: number;\r\n  locationId: string;\r\n\r\n  arrowOutlinePoints: string;\r\n  arrowInsidePoints: string;\r\n}\r\n\r\nexport interface SvgMap {\r\n  id: number;\r\n  name: string;\r\n  defs: string;\r\n  backgroundSvg: string;\r\n  viewbox: string;\r\n  facilityId: number;\r\n  svgMapPins: SvgMapPin[];\r\n  svgMapArrows: SvgMapArrow[];\r\n}\r\n\r\nexport const defaultSvgMap: SvgMap = {\r\n  id: 0,\r\n  backgroundSvg: '',\r\n  name: '',\r\n  svgMapPins: [],\r\n  svgMapArrows: [],\r\n  viewbox: '0 0 0 0',\r\n  defs: '',\r\n  facilityId: 0\r\n};\r\n",
            "properties": [
                {
                    "name": "arrowInsidePoints",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "arrowOutlinePoints",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "locationId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "SvgMapPin",
            "id": "interface-SvgMapPin-8408807dea59d4e826f1720591bfbe8745c9acd766b0b8f48e089a9a7bd19f22a2c9dd5e11e02405094723e7fabc83d8a9847ed731f3baa73f0399b5e2c5c7e5",
            "file": "src/app/api/models/svgMap.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface SvgMapPin {\r\n  id: number;\r\n  locationId: string;\r\n  title: string;\r\n  cx: number;\r\n  cy: number;\r\n  r: number;\r\n  path: string;\r\n}\r\n\r\nexport interface SvgMapArrow {\r\n  id: number;\r\n  locationId: string;\r\n\r\n  arrowOutlinePoints: string;\r\n  arrowInsidePoints: string;\r\n}\r\n\r\nexport interface SvgMap {\r\n  id: number;\r\n  name: string;\r\n  defs: string;\r\n  backgroundSvg: string;\r\n  viewbox: string;\r\n  facilityId: number;\r\n  svgMapPins: SvgMapPin[];\r\n  svgMapArrows: SvgMapArrow[];\r\n}\r\n\r\nexport const defaultSvgMap: SvgMap = {\r\n  id: 0,\r\n  backgroundSvg: '',\r\n  name: '',\r\n  svgMapPins: [],\r\n  svgMapArrows: [],\r\n  viewbox: '0 0 0 0',\r\n  defs: '',\r\n  facilityId: 0\r\n};\r\n",
            "properties": [
                {
                    "name": "cx",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "cy",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "locationId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "path",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "r",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "TimelineChartData",
            "id": "interface-TimelineChartData-4096b764617cb8b2902ef9ff0d4bd9a525ffb24ac1e72f15ae26439e4171fb505835fb27ec2e456904c47a5a46f7d4b0ed7d87105bb234e634dc90efa7be5169",
            "file": "src/app/facility-timeline-dashboard/facility-timeline-dashboard.service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import {\r\n    BehaviorSubject,\r\n    Observable,\r\n    Subject,\r\n    combineLatest,\r\n    distinctUntilChanged,\r\n    filter,\r\n    map,\r\n    mergeMap,\r\n    of,\r\n    zip\r\n} from 'rxjs';\r\nimport {\r\n    LocationCurrentStatus,\r\n    Room,\r\n    SvgMap,\r\n} from 'src/app/api/models';\r\nimport { keyBy, reduce } from 'lodash';\r\n\r\nimport { DataService } from 'src/app/api/data.service';\r\nimport { Injectable } from '@angular/core';\r\nimport { PiWebApiService } from '../api/pi-webapi.service';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\nexport interface PiDataFilter {\r\n    facility: { repName?: string; sectionName: string; value: number };\r\n    //portfolioId: string;\r\n    //facilityOrPortfolio: 'facility' | 'portfolio'\r\n    status: string;\r\n    startDate: Date;\r\n    endDate: Date;\r\n    interval: number;\r\n  }\r\n  \r\n  export interface TimelineChartDataPoint {\r\n    locationName: string;\r\n    tag: string;\r\n    // statusValue:number,\r\n    chillerStatusLabel: string;\r\n    statusColor: string;\r\n    startDate: Date;\r\n    endDate: Date;\r\n  }\r\n  \r\n  export interface RoomDisplayField {\r\n    name: string;\r\n    value: string;\r\n    displayType?: string;\r\n  }\r\n  \r\n  export interface TimelineChartData {\r\n    points: TimelineChartDataPoint[];\r\n    locations: { [name: string]: any };\r\n    // locationCount: number;\r\n    locationType: 'room' | 'facility';\r\n  }\r\n  \r\n  export interface StatusPoint {\r\n    timeStamp: number;\r\n    numeric_value: number;\r\n  }\r\n  \r\n  export type locationStatusLookup = { [name: string]: string };\r\n  export type roomInfoLookup = { [name: string]: string };\r\n  export type apfLimitsLookup = { [facRoomKey: string]: any };\r\n  \r\n  @Injectable()\r\n  export class FacilityTimelineDashboardService {\r\n    constructor(private dataService: DataService, private piWebApiService:PiWebApiService) {\r\n      const defaultStartDate = new Date();\r\n      defaultStartDate.setDate(defaultStartDate.getDate() - 1);\r\n\r\n      this._piDataFilter$ = new Subject<PiDataFilter>()\r\n      // new BehaviorSubject<PiDataFilter>({\r\n      //   facility: { repName: '', sectionName: '', value: 0 },\r\n      //   portfolioId: '',\r\n      //   facilityOrPortfolio: 'facility',\r\n      //   status: '',\r\n      //   startDate: defaultStartDate,\r\n      //   endDate: defaultEndDate,\r\n      //   interval: 10\r\n      // });\r\n  \r\n      this._ic$ = new BehaviorSubject<string>('');\r\n      this._facilityFilterOptions$ = new BehaviorSubject<\r\n        { repName: string; sectionName: string; value: string }[]\r\n      >([]);\r\n      this._svgMap$ = new BehaviorSubject<SvgMap>({\r\n        name: 'apf_facility_all',\r\n        backgroundSvg: '',\r\n        id: 0,\r\n        svgMapPins: [],\r\n        svgMapArrows: [],\r\n        viewbox: '0 0 0 0',\r\n        defs: '',\r\n        facilityId: 0\r\n      });\r\n      this._svgMapBackgroundImageUrl$ = new BehaviorSubject<string>('');\r\n      this._currentStatusValues$ = new BehaviorSubject<LocationCurrentStatus[]>(\r\n        []\r\n      );\r\n      this._parameterValues$ = new BehaviorSubject<Room[]>([]);\r\n      this._timelineChartData$ = new BehaviorSubject<TimelineChartData>({\r\n        points: [],\r\n        locations: {},\r\n        //locationCount:0,\r\n        locationType: 'facility'\r\n      });\r\n      this._selectedPin$ = new BehaviorSubject<string>('');\r\n      this._selectedRoomInfo$ = new BehaviorSubject<roomInfoLookup>({});\r\n      this._hoveredPin$ = new BehaviorSubject<string>('');\r\n      this._hoveredTimelineLabel$ = new BehaviorSubject<string>('');\r\n      this._apfLimits$ = new BehaviorSubject<apfLimitsLookup>({});\r\n      this._pinStates = new BehaviorSubject<locationStatusLookup>({});\r\n    \r\n      // Setup APF Limits from PI for all facilities\r\n      //this.dataService.apfLimits().subscribe((limits: any[]) => {\r\n      this.piWebApiService.apfLimits().subscribe((limits: any[]) => {\r\n\r\n        const limitsLookup:{[key:string]:string} = {};\r\n\r\n        try {\r\n          for(const limit of limits) {\r\n            if(limit.Conn_Room) {\r\n              const name1 = limit.Conn_Room ? `${limit.Room}_${limit.Conn_Room}_DP` : limit.Room;\r\n              const name2 = limit.Conn_Room ? `${limit.Conn_Room}_${limit.Room}_DP` : limit.Room;\r\n              limitsLookup[`${limit.Facility.toLowerCase()}|${name1.toLowerCase()}`] = limit;\r\n              limitsLookup[`${limit.Facility.toLowerCase()}|${name2.toLowerCase()}`] = limit;\r\n            }\r\n            else {\r\n              limitsLookup[`${limit.Facility.toLowerCase()}|${limit.Room.toLowerCase()}`] = limit\r\n            }\r\n          }\r\n        }\r\n        catch(e){\r\n          console.log(e)\r\n        }\r\n  \r\n        this._apfLimits$.next(limitsLookup);\r\n      });\r\n  \r\n      // create an observable of the facility selected in the fillter control\r\n      const selectedFacility$ = this._piDataFilter$.pipe(\r\n        distinctUntilChanged(\r\n          (prev, curr) => prev.facility.value === curr.facility.value\r\n        ),\r\n        map((f) => f.facility)\r\n      );\r\n\r\n      const selectedStatus$ = this._piDataFilter$.pipe(\r\n        map((f) => (f.status.toLowerCase())),\r\n        distinctUntilChanged()\r\n      );\r\n      \r\n      // create an observable of the marker type to use with the map - 'pin' or 'arrow'\r\n      const svgMapMarker$ = this._piDataFilter$.pipe(\r\n        map((f) => (f.status.toLowerCase() === 'dp' ? 'arrow' : 'pin')),\r\n        distinctUntilChanged()\r\n      );\r\n  \r\n      // Update the floor plan and room parameter info needed by svg map when the facility changes\r\n      selectedFacility$\r\n        .pipe(\r\n          filter(facility=>Boolean(facility?.value)),\r\n          mergeMap((facility) =>\r\n            zip(\r\n              of(facility.value),\r\n              this.dataService.roomParameterInfo(facility.value) // parameter info from database for each room and attribute in facility\r\n            )\r\n          )\r\n        )\r\n        .subscribe(([facilityId, parameterValues]) => {\r\n          const backGroundImageUrl = `assets/images/orig-floor-plans/FID${facilityId}_FloorPlan.jpg`;\r\n          this._svgMapBackgroundImageUrl$.next(backGroundImageUrl);\r\n\r\n          this._parameterValues$.next(parameterValues);\r\n  \r\n          this._selectedPin$.next('');\r\n          this._selectedRoomInfo$.next({});\r\n        });\r\n      \r\n\r\n      // Update the room states when the facility or the selected status attribute changes\r\n      combineLatest([selectedFacility$, selectedStatus$])\r\n        .pipe(\r\n          mergeMap(([facility,status]) => {\r\n            return this.piWebApiService.facilityCurrentStatusData(facility.sectionName, status);\r\n          }),\r\n          map((statusData)=>{\r\n            const pinStatusLookup = reduce(\r\n              statusData,\r\n              (acc, x) => ({\r\n                ...acc,\r\n                [x.locationName]: this.statusColor(x.statusPoint.numeric_value)\r\n              }),\r\n              {}\r\n            );\r\n            return pinStatusLookup;\r\n          })\r\n        ).subscribe((pinStatusLookup)=>{\r\n          this._pinStates.next(pinStatusLookup);\r\n    \r\n        })\r\n        \r\n  \r\n      // Get the pins or arrows for the Svg Floor plan if the facility changes or attriibute changes between not dp and dp\r\n      combineLatest([selectedFacility$, svgMapMarker$])\r\n        .pipe(\r\n          mergeMap(([facility, marker]) => {\r\n            return this.dataService.svgMap(facility.value, marker);\r\n          })\r\n        )\r\n        .subscribe((svgMap) => {\r\n          this._svgMap$.next(svgMap);\r\n        });\r\n  \r\n      // when a map pin is selected, prepare room info display data using the apf limits query, current status values, and the room parameters\r\n      const roomCurrentAttributeData$ = \r\n        combineLatest([selectedFacility$, this._selectedPin$])\r\n          .pipe(\r\n            filter(([facility,pin])=>Boolean(pin)),\r\n            mergeMap(([facility,pin])=>zip(\r\n              of(facility),\r\n              of(pin),\r\n              //this.dataService.roomCurrentAttributeData(facility.value,pin)))\r\n              this.piWebApiService.roomCurrentAttributeData(facility.sectionName,pin)))\r\n          )\r\n\r\n      roomCurrentAttributeData$\r\n      .subscribe(([facility,pin,roomStatusValues]) => {\r\n        const sectionName = facility.sectionName.toLowerCase();\r\n        const key = `${sectionName}|${pin.toLowerCase()}`; // pin = room number\r\n        const apfLimits = this._apfLimits$.value[key];\r\n        const isDP = pin.indexOf('DP') > -1;\r\n        const room = isDP ? \r\n          this._parameterValues$.value.find(\r\n            (r) => (r.formattedName.toLowerCase() === pin.toLowerCase())\r\n          ) : \r\n          this._parameterValues$.value.find(\r\n            (r) => (r.roomNumber.toLowerCase() === pin.toLowerCase())\r\n          );\r\n  \r\n        const info = {\r\n          ...apfLimits,\r\n          gsf: room?.sq,\r\n          roomParameters: room?.roomParameters,\r\n          roomStatusValues,\r\n          compositeStatus: roomStatusValues.find(\r\n            (x) => x.attribute === 'Composite'\r\n          )?.statusPoint,\r\n          tempStatus: roomStatusValues.find((x) => x.attribute === 'Temp')\r\n            ?.statusPoint,\r\n          rhStatus: roomStatusValues.find((x) => x.attribute === 'Hum')\r\n            ?.statusPoint,\r\n          achStatus: roomStatusValues.find((x) => x.attribute === 'Airx')\r\n            ?.statusPoint,\r\n          dpStatus: roomStatusValues.find((x) => x.attribute === 'DP')\r\n            ?.statusPoint\r\n        };\r\n  \r\n        this._selectedRoomInfo$.next(info);\r\n      });\r\n  \r\n\r\n      // prepare data for specific facility timeline\r\n      this._piDataFilter$\r\n        .pipe(\r\n          mergeMap((filter: PiDataFilter) =>\r\n\r\n            this.piWebApiService.timelineData(\r\n              filter.facility.sectionName,\r\n              filter.status,\r\n              filter.startDate,\r\n              filter.endDate,\r\n              filter.interval\r\n            )\r\n              .pipe(\r\n                catchError((err) => {\r\n                  console.log(\r\n                    'Error from dataService.facilityRoomsTimelineDate:' +\r\n                      JSON.stringify(err)\r\n                  );\r\n                  return of([]);\r\n                }),\r\n                map((data) => ({ filter, data }))\r\n              )\r\n          )\r\n        )\r\n        .subscribe((dataAndFilter) => {\r\n          const chartDataPoints: TimelineChartDataPoint[] = [];\r\n          const rooms = dataAndFilter.data.map((d) => d.location);\r\n          const roomLookup = keyBy(rooms, (r) => r.roomNumber);\r\n          const timestamps = (dataAndFilter.data || [])\r\n            .filter((x) => x.points.some(Boolean))\r\n            .map((x) => x.points[0].timestamp);\r\n          const minTimestamp = timestamps.reduce(function (a, b) {\r\n            return a < b ? a : b;\r\n          },Number.MAX_VALUE);\r\n  \r\n          for (const x of dataAndFilter.data) {\r\n            if (!x.points.some(Boolean)) {\r\n              x.points = [\r\n                {\r\n                  timestamp: minTimestamp,\r\n                  numeric_value: 1\r\n                },\r\n                {\r\n                  timestamp: dataAndFilter.filter.endDate.getTime(),\r\n                  numeric_value: 1\r\n                }\r\n              ];\r\n            }\r\n  \r\n            x.points.sort((a, b) => a.timestamp - b.timestamp);\r\n            let startTime = x.points[0].timestamp;\r\n            for (const y of x.points) {\r\n              if (y.timestamp < dataAndFilter.filter.startDate.getTime()) {\r\n                console.log('error - timestamp before request time');\r\n              }\r\n              const point: TimelineChartDataPoint = {\r\n                locationName: x.location.roomNumber,\r\n                tag: x.tag,\r\n                startDate: new Date(startTime),\r\n                endDate: new Date(Math.max(y.timestamp, startTime)),\r\n                statusColor: this.statusColor(y.numeric_value),\r\n                chillerStatusLabel: this.chillerStatusLabel(y.numeric_value)\r\n              };\r\n  \r\n              startTime = y.timestamp;\r\n              chartDataPoints.push(point);\r\n            }\r\n          }\r\n\r\n          const locations:any = {};\r\n          for(const d of dataAndFilter.data) {\r\n            locations[d.location.roomNumber] =d.location\r\n          }\r\n\r\n          this._timelineChartData$.next({\r\n            points: chartDataPoints,\r\n            locations: roomLookup,\r\n            //locationCount:dataAndFilter.data.length,\r\n            locationType: 'room'\r\n          });\r\n        });\r\n    } // end contstructor\r\n  \r\n    private _ic$: Subject<string>;\r\n    public setIC(ic: string) {\r\n      this._ic$.next(ic);\r\n    }\r\n  \r\n    private _piDataFilter$: Subject<PiDataFilter>;\r\n    public filterPiData(filter: PiDataFilter) {\r\n      this._piDataFilter$.next(filter);\r\n    }\r\n    public get piDataFilter$() {\r\n      return this._piDataFilter$ as Observable<PiDataFilter>;\r\n    }\r\n  \r\n    public get isFacilityAll$() {\r\n      return this._piDataFilter$.pipe(\r\n        map((f) => {\r\n          return Number(f.facility) === 0;\r\n        })\r\n      );\r\n    }\r\n  \r\n    private _svgMap$: Subject<SvgMap>;\r\n    public get svgMap$() {\r\n      return this._svgMap$ as Observable<SvgMap>;\r\n    }\r\n  \r\n    private _currentStatusValues$: BehaviorSubject<LocationCurrentStatus[]>;\r\n    private _pinStates: BehaviorSubject<locationStatusLookup>;\r\n  \r\n    public get pinStates$() {\r\n      return this._pinStates as Observable<locationStatusLookup>;\r\n    }\r\n  \r\n    private _parameterValues$: BehaviorSubject<Room[]>;\r\n    public get parameterValues$() {\r\n      return this._parameterValues$ as Observable<Room[]>;\r\n    }\r\n  \r\n    private _timelineChartData$: Subject<TimelineChartData>;\r\n    public get timelineChartData$() {\r\n      return this._timelineChartData$ as Observable<TimelineChartData>;\r\n    }\r\n  \r\n    private _svgMapBackgroundImageUrl$: Subject<string>;\r\n    public get svgMapBackgroundImageUrl$() {\r\n      return this._svgMapBackgroundImageUrl$ as Observable<string>;\r\n    }\r\n  \r\n    private _selectedPin$: Subject<string>;\r\n    public get selectedPin$() {\r\n      return this._selectedPin$ as Observable<string>;\r\n    }\r\n  \r\n    private _hoveredPin$: Subject<string>;\r\n    public get hoveredPin$() {\r\n      return this._hoveredPin$ as Observable<string>;\r\n    }\r\n  \r\n    private _hoveredTimelineLabel$: Subject<string>;\r\n    public get hoveredTimelineLabel$() {\r\n      return this._hoveredTimelineLabel$ as Observable<string>;\r\n    }\r\n  \r\n    private _selectedRoomInfo$: Subject<roomInfoLookup>;\r\n    public get selectedRoomInfo$() {\r\n      return this._selectedRoomInfo$ as Observable<roomInfoLookup>;\r\n    }\r\n  \r\n    public setSelectedPin(pinName: string) {\r\n      this._selectedPin$.next(pinName);\r\n    }\r\n  \r\n    public setHoveredPin(pinName: string) {\r\n      this._hoveredPin$.next(pinName);\r\n    }\r\n  \r\n    public setHoveredTimelineLabel(label: string) {\r\n      this._hoveredTimelineLabel$.next(label);\r\n    }\r\n  \r\n    private _apfLimits$: BehaviorSubject<apfLimitsLookup>;\r\n    public get apfLimits$() {\r\n      return this._apfLimits$ as Observable<apfLimitsLookup>;\r\n    }\r\n  \r\n    private statusColor = (statusVal: number) => {\r\n      switch (statusVal) {\r\n        case 0:\r\n          return 'green';\r\n        case 1:\r\n          return 'gray';\r\n        case 2:\r\n          return 'yellow';\r\n        case 3:\r\n          return 'red';\r\n        default:\r\n          return 'lightgray';\r\n      }\r\n    };\r\n  \r\n    private chillerStatusLabel = (statusVal: number) => {\r\n      switch (statusVal) {\r\n        case 0:\r\n          return 'Within Spec';\r\n        case 1:\r\n          return 'Comm Loss';\r\n        case 2:\r\n          return 'Warning';\r\n        case 3:\r\n          return 'Alarm (out of Spec)';\r\n        default:\r\n          return '';\r\n      }\r\n    };\r\n  \r\n    public gsfGrowthByClassification$ = this.dataService\r\n      .gsfGrowthByClassification()\r\n      .pipe(\r\n        map((d: any) =>\r\n          d.map((x: any) => {\r\n            const goLiveDate = new Date(x.goLiveDate);\r\n            return [\r\n              goLiveDate,\r\n              x.cncRoomsArea + x.iso8RoomsArea + x.iso7RoomsArea,\r\n              x.criticalEnvironmentParametersCount\r\n            ];\r\n          })\r\n        )\r\n      );\r\n  \r\n    private _facilityFilterOptions$: BehaviorSubject<\r\n      { repName: string; sectionName: string; value: string }[]\r\n    >;\r\n    public get facilityFilterOptions$() {\r\n      return this._facilityFilterOptions$ as Observable<\r\n        { repName: string; sectionName: string; value: string }[]\r\n      >;\r\n    }\r\n  }\r\n  ",
            "properties": [
                {
                    "name": "locations",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 53
                },
                {
                    "name": "locationType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"room\" | \"facility\"",
                    "optional": false,
                    "description": "",
                    "line": 55
                },
                {
                    "name": "points",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TimelineChartDataPoint[]",
                    "optional": false,
                    "description": "",
                    "line": 52
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "TimelineChartDataPoint",
            "id": "interface-TimelineChartDataPoint-4096b764617cb8b2902ef9ff0d4bd9a525ffb24ac1e72f15ae26439e4171fb505835fb27ec2e456904c47a5a46f7d4b0ed7d87105bb234e634dc90efa7be5169",
            "file": "src/app/facility-timeline-dashboard/facility-timeline-dashboard.service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import {\r\n    BehaviorSubject,\r\n    Observable,\r\n    Subject,\r\n    combineLatest,\r\n    distinctUntilChanged,\r\n    filter,\r\n    map,\r\n    mergeMap,\r\n    of,\r\n    zip\r\n} from 'rxjs';\r\nimport {\r\n    LocationCurrentStatus,\r\n    Room,\r\n    SvgMap,\r\n} from 'src/app/api/models';\r\nimport { keyBy, reduce } from 'lodash';\r\n\r\nimport { DataService } from 'src/app/api/data.service';\r\nimport { Injectable } from '@angular/core';\r\nimport { PiWebApiService } from '../api/pi-webapi.service';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\nexport interface PiDataFilter {\r\n    facility: { repName?: string; sectionName: string; value: number };\r\n    //portfolioId: string;\r\n    //facilityOrPortfolio: 'facility' | 'portfolio'\r\n    status: string;\r\n    startDate: Date;\r\n    endDate: Date;\r\n    interval: number;\r\n  }\r\n  \r\n  export interface TimelineChartDataPoint {\r\n    locationName: string;\r\n    tag: string;\r\n    // statusValue:number,\r\n    chillerStatusLabel: string;\r\n    statusColor: string;\r\n    startDate: Date;\r\n    endDate: Date;\r\n  }\r\n  \r\n  export interface RoomDisplayField {\r\n    name: string;\r\n    value: string;\r\n    displayType?: string;\r\n  }\r\n  \r\n  export interface TimelineChartData {\r\n    points: TimelineChartDataPoint[];\r\n    locations: { [name: string]: any };\r\n    // locationCount: number;\r\n    locationType: 'room' | 'facility';\r\n  }\r\n  \r\n  export interface StatusPoint {\r\n    timeStamp: number;\r\n    numeric_value: number;\r\n  }\r\n  \r\n  export type locationStatusLookup = { [name: string]: string };\r\n  export type roomInfoLookup = { [name: string]: string };\r\n  export type apfLimitsLookup = { [facRoomKey: string]: any };\r\n  \r\n  @Injectable()\r\n  export class FacilityTimelineDashboardService {\r\n    constructor(private dataService: DataService, private piWebApiService:PiWebApiService) {\r\n      const defaultStartDate = new Date();\r\n      defaultStartDate.setDate(defaultStartDate.getDate() - 1);\r\n\r\n      this._piDataFilter$ = new Subject<PiDataFilter>()\r\n      // new BehaviorSubject<PiDataFilter>({\r\n      //   facility: { repName: '', sectionName: '', value: 0 },\r\n      //   portfolioId: '',\r\n      //   facilityOrPortfolio: 'facility',\r\n      //   status: '',\r\n      //   startDate: defaultStartDate,\r\n      //   endDate: defaultEndDate,\r\n      //   interval: 10\r\n      // });\r\n  \r\n      this._ic$ = new BehaviorSubject<string>('');\r\n      this._facilityFilterOptions$ = new BehaviorSubject<\r\n        { repName: string; sectionName: string; value: string }[]\r\n      >([]);\r\n      this._svgMap$ = new BehaviorSubject<SvgMap>({\r\n        name: 'apf_facility_all',\r\n        backgroundSvg: '',\r\n        id: 0,\r\n        svgMapPins: [],\r\n        svgMapArrows: [],\r\n        viewbox: '0 0 0 0',\r\n        defs: '',\r\n        facilityId: 0\r\n      });\r\n      this._svgMapBackgroundImageUrl$ = new BehaviorSubject<string>('');\r\n      this._currentStatusValues$ = new BehaviorSubject<LocationCurrentStatus[]>(\r\n        []\r\n      );\r\n      this._parameterValues$ = new BehaviorSubject<Room[]>([]);\r\n      this._timelineChartData$ = new BehaviorSubject<TimelineChartData>({\r\n        points: [],\r\n        locations: {},\r\n        //locationCount:0,\r\n        locationType: 'facility'\r\n      });\r\n      this._selectedPin$ = new BehaviorSubject<string>('');\r\n      this._selectedRoomInfo$ = new BehaviorSubject<roomInfoLookup>({});\r\n      this._hoveredPin$ = new BehaviorSubject<string>('');\r\n      this._hoveredTimelineLabel$ = new BehaviorSubject<string>('');\r\n      this._apfLimits$ = new BehaviorSubject<apfLimitsLookup>({});\r\n      this._pinStates = new BehaviorSubject<locationStatusLookup>({});\r\n    \r\n      // Setup APF Limits from PI for all facilities\r\n      //this.dataService.apfLimits().subscribe((limits: any[]) => {\r\n      this.piWebApiService.apfLimits().subscribe((limits: any[]) => {\r\n\r\n        const limitsLookup:{[key:string]:string} = {};\r\n\r\n        try {\r\n          for(const limit of limits) {\r\n            if(limit.Conn_Room) {\r\n              const name1 = limit.Conn_Room ? `${limit.Room}_${limit.Conn_Room}_DP` : limit.Room;\r\n              const name2 = limit.Conn_Room ? `${limit.Conn_Room}_${limit.Room}_DP` : limit.Room;\r\n              limitsLookup[`${limit.Facility.toLowerCase()}|${name1.toLowerCase()}`] = limit;\r\n              limitsLookup[`${limit.Facility.toLowerCase()}|${name2.toLowerCase()}`] = limit;\r\n            }\r\n            else {\r\n              limitsLookup[`${limit.Facility.toLowerCase()}|${limit.Room.toLowerCase()}`] = limit\r\n            }\r\n          }\r\n        }\r\n        catch(e){\r\n          console.log(e)\r\n        }\r\n  \r\n        this._apfLimits$.next(limitsLookup);\r\n      });\r\n  \r\n      // create an observable of the facility selected in the fillter control\r\n      const selectedFacility$ = this._piDataFilter$.pipe(\r\n        distinctUntilChanged(\r\n          (prev, curr) => prev.facility.value === curr.facility.value\r\n        ),\r\n        map((f) => f.facility)\r\n      );\r\n\r\n      const selectedStatus$ = this._piDataFilter$.pipe(\r\n        map((f) => (f.status.toLowerCase())),\r\n        distinctUntilChanged()\r\n      );\r\n      \r\n      // create an observable of the marker type to use with the map - 'pin' or 'arrow'\r\n      const svgMapMarker$ = this._piDataFilter$.pipe(\r\n        map((f) => (f.status.toLowerCase() === 'dp' ? 'arrow' : 'pin')),\r\n        distinctUntilChanged()\r\n      );\r\n  \r\n      // Update the floor plan and room parameter info needed by svg map when the facility changes\r\n      selectedFacility$\r\n        .pipe(\r\n          filter(facility=>Boolean(facility?.value)),\r\n          mergeMap((facility) =>\r\n            zip(\r\n              of(facility.value),\r\n              this.dataService.roomParameterInfo(facility.value) // parameter info from database for each room and attribute in facility\r\n            )\r\n          )\r\n        )\r\n        .subscribe(([facilityId, parameterValues]) => {\r\n          const backGroundImageUrl = `assets/images/orig-floor-plans/FID${facilityId}_FloorPlan.jpg`;\r\n          this._svgMapBackgroundImageUrl$.next(backGroundImageUrl);\r\n\r\n          this._parameterValues$.next(parameterValues);\r\n  \r\n          this._selectedPin$.next('');\r\n          this._selectedRoomInfo$.next({});\r\n        });\r\n      \r\n\r\n      // Update the room states when the facility or the selected status attribute changes\r\n      combineLatest([selectedFacility$, selectedStatus$])\r\n        .pipe(\r\n          mergeMap(([facility,status]) => {\r\n            return this.piWebApiService.facilityCurrentStatusData(facility.sectionName, status);\r\n          }),\r\n          map((statusData)=>{\r\n            const pinStatusLookup = reduce(\r\n              statusData,\r\n              (acc, x) => ({\r\n                ...acc,\r\n                [x.locationName]: this.statusColor(x.statusPoint.numeric_value)\r\n              }),\r\n              {}\r\n            );\r\n            return pinStatusLookup;\r\n          })\r\n        ).subscribe((pinStatusLookup)=>{\r\n          this._pinStates.next(pinStatusLookup);\r\n    \r\n        })\r\n        \r\n  \r\n      // Get the pins or arrows for the Svg Floor plan if the facility changes or attriibute changes between not dp and dp\r\n      combineLatest([selectedFacility$, svgMapMarker$])\r\n        .pipe(\r\n          mergeMap(([facility, marker]) => {\r\n            return this.dataService.svgMap(facility.value, marker);\r\n          })\r\n        )\r\n        .subscribe((svgMap) => {\r\n          this._svgMap$.next(svgMap);\r\n        });\r\n  \r\n      // when a map pin is selected, prepare room info display data using the apf limits query, current status values, and the room parameters\r\n      const roomCurrentAttributeData$ = \r\n        combineLatest([selectedFacility$, this._selectedPin$])\r\n          .pipe(\r\n            filter(([facility,pin])=>Boolean(pin)),\r\n            mergeMap(([facility,pin])=>zip(\r\n              of(facility),\r\n              of(pin),\r\n              //this.dataService.roomCurrentAttributeData(facility.value,pin)))\r\n              this.piWebApiService.roomCurrentAttributeData(facility.sectionName,pin)))\r\n          )\r\n\r\n      roomCurrentAttributeData$\r\n      .subscribe(([facility,pin,roomStatusValues]) => {\r\n        const sectionName = facility.sectionName.toLowerCase();\r\n        const key = `${sectionName}|${pin.toLowerCase()}`; // pin = room number\r\n        const apfLimits = this._apfLimits$.value[key];\r\n        const isDP = pin.indexOf('DP') > -1;\r\n        const room = isDP ? \r\n          this._parameterValues$.value.find(\r\n            (r) => (r.formattedName.toLowerCase() === pin.toLowerCase())\r\n          ) : \r\n          this._parameterValues$.value.find(\r\n            (r) => (r.roomNumber.toLowerCase() === pin.toLowerCase())\r\n          );\r\n  \r\n        const info = {\r\n          ...apfLimits,\r\n          gsf: room?.sq,\r\n          roomParameters: room?.roomParameters,\r\n          roomStatusValues,\r\n          compositeStatus: roomStatusValues.find(\r\n            (x) => x.attribute === 'Composite'\r\n          )?.statusPoint,\r\n          tempStatus: roomStatusValues.find((x) => x.attribute === 'Temp')\r\n            ?.statusPoint,\r\n          rhStatus: roomStatusValues.find((x) => x.attribute === 'Hum')\r\n            ?.statusPoint,\r\n          achStatus: roomStatusValues.find((x) => x.attribute === 'Airx')\r\n            ?.statusPoint,\r\n          dpStatus: roomStatusValues.find((x) => x.attribute === 'DP')\r\n            ?.statusPoint\r\n        };\r\n  \r\n        this._selectedRoomInfo$.next(info);\r\n      });\r\n  \r\n\r\n      // prepare data for specific facility timeline\r\n      this._piDataFilter$\r\n        .pipe(\r\n          mergeMap((filter: PiDataFilter) =>\r\n\r\n            this.piWebApiService.timelineData(\r\n              filter.facility.sectionName,\r\n              filter.status,\r\n              filter.startDate,\r\n              filter.endDate,\r\n              filter.interval\r\n            )\r\n              .pipe(\r\n                catchError((err) => {\r\n                  console.log(\r\n                    'Error from dataService.facilityRoomsTimelineDate:' +\r\n                      JSON.stringify(err)\r\n                  );\r\n                  return of([]);\r\n                }),\r\n                map((data) => ({ filter, data }))\r\n              )\r\n          )\r\n        )\r\n        .subscribe((dataAndFilter) => {\r\n          const chartDataPoints: TimelineChartDataPoint[] = [];\r\n          const rooms = dataAndFilter.data.map((d) => d.location);\r\n          const roomLookup = keyBy(rooms, (r) => r.roomNumber);\r\n          const timestamps = (dataAndFilter.data || [])\r\n            .filter((x) => x.points.some(Boolean))\r\n            .map((x) => x.points[0].timestamp);\r\n          const minTimestamp = timestamps.reduce(function (a, b) {\r\n            return a < b ? a : b;\r\n          },Number.MAX_VALUE);\r\n  \r\n          for (const x of dataAndFilter.data) {\r\n            if (!x.points.some(Boolean)) {\r\n              x.points = [\r\n                {\r\n                  timestamp: minTimestamp,\r\n                  numeric_value: 1\r\n                },\r\n                {\r\n                  timestamp: dataAndFilter.filter.endDate.getTime(),\r\n                  numeric_value: 1\r\n                }\r\n              ];\r\n            }\r\n  \r\n            x.points.sort((a, b) => a.timestamp - b.timestamp);\r\n            let startTime = x.points[0].timestamp;\r\n            for (const y of x.points) {\r\n              if (y.timestamp < dataAndFilter.filter.startDate.getTime()) {\r\n                console.log('error - timestamp before request time');\r\n              }\r\n              const point: TimelineChartDataPoint = {\r\n                locationName: x.location.roomNumber,\r\n                tag: x.tag,\r\n                startDate: new Date(startTime),\r\n                endDate: new Date(Math.max(y.timestamp, startTime)),\r\n                statusColor: this.statusColor(y.numeric_value),\r\n                chillerStatusLabel: this.chillerStatusLabel(y.numeric_value)\r\n              };\r\n  \r\n              startTime = y.timestamp;\r\n              chartDataPoints.push(point);\r\n            }\r\n          }\r\n\r\n          const locations:any = {};\r\n          for(const d of dataAndFilter.data) {\r\n            locations[d.location.roomNumber] =d.location\r\n          }\r\n\r\n          this._timelineChartData$.next({\r\n            points: chartDataPoints,\r\n            locations: roomLookup,\r\n            //locationCount:dataAndFilter.data.length,\r\n            locationType: 'room'\r\n          });\r\n        });\r\n    } // end contstructor\r\n  \r\n    private _ic$: Subject<string>;\r\n    public setIC(ic: string) {\r\n      this._ic$.next(ic);\r\n    }\r\n  \r\n    private _piDataFilter$: Subject<PiDataFilter>;\r\n    public filterPiData(filter: PiDataFilter) {\r\n      this._piDataFilter$.next(filter);\r\n    }\r\n    public get piDataFilter$() {\r\n      return this._piDataFilter$ as Observable<PiDataFilter>;\r\n    }\r\n  \r\n    public get isFacilityAll$() {\r\n      return this._piDataFilter$.pipe(\r\n        map((f) => {\r\n          return Number(f.facility) === 0;\r\n        })\r\n      );\r\n    }\r\n  \r\n    private _svgMap$: Subject<SvgMap>;\r\n    public get svgMap$() {\r\n      return this._svgMap$ as Observable<SvgMap>;\r\n    }\r\n  \r\n    private _currentStatusValues$: BehaviorSubject<LocationCurrentStatus[]>;\r\n    private _pinStates: BehaviorSubject<locationStatusLookup>;\r\n  \r\n    public get pinStates$() {\r\n      return this._pinStates as Observable<locationStatusLookup>;\r\n    }\r\n  \r\n    private _parameterValues$: BehaviorSubject<Room[]>;\r\n    public get parameterValues$() {\r\n      return this._parameterValues$ as Observable<Room[]>;\r\n    }\r\n  \r\n    private _timelineChartData$: Subject<TimelineChartData>;\r\n    public get timelineChartData$() {\r\n      return this._timelineChartData$ as Observable<TimelineChartData>;\r\n    }\r\n  \r\n    private _svgMapBackgroundImageUrl$: Subject<string>;\r\n    public get svgMapBackgroundImageUrl$() {\r\n      return this._svgMapBackgroundImageUrl$ as Observable<string>;\r\n    }\r\n  \r\n    private _selectedPin$: Subject<string>;\r\n    public get selectedPin$() {\r\n      return this._selectedPin$ as Observable<string>;\r\n    }\r\n  \r\n    private _hoveredPin$: Subject<string>;\r\n    public get hoveredPin$() {\r\n      return this._hoveredPin$ as Observable<string>;\r\n    }\r\n  \r\n    private _hoveredTimelineLabel$: Subject<string>;\r\n    public get hoveredTimelineLabel$() {\r\n      return this._hoveredTimelineLabel$ as Observable<string>;\r\n    }\r\n  \r\n    private _selectedRoomInfo$: Subject<roomInfoLookup>;\r\n    public get selectedRoomInfo$() {\r\n      return this._selectedRoomInfo$ as Observable<roomInfoLookup>;\r\n    }\r\n  \r\n    public setSelectedPin(pinName: string) {\r\n      this._selectedPin$.next(pinName);\r\n    }\r\n  \r\n    public setHoveredPin(pinName: string) {\r\n      this._hoveredPin$.next(pinName);\r\n    }\r\n  \r\n    public setHoveredTimelineLabel(label: string) {\r\n      this._hoveredTimelineLabel$.next(label);\r\n    }\r\n  \r\n    private _apfLimits$: BehaviorSubject<apfLimitsLookup>;\r\n    public get apfLimits$() {\r\n      return this._apfLimits$ as Observable<apfLimitsLookup>;\r\n    }\r\n  \r\n    private statusColor = (statusVal: number) => {\r\n      switch (statusVal) {\r\n        case 0:\r\n          return 'green';\r\n        case 1:\r\n          return 'gray';\r\n        case 2:\r\n          return 'yellow';\r\n        case 3:\r\n          return 'red';\r\n        default:\r\n          return 'lightgray';\r\n      }\r\n    };\r\n  \r\n    private chillerStatusLabel = (statusVal: number) => {\r\n      switch (statusVal) {\r\n        case 0:\r\n          return 'Within Spec';\r\n        case 1:\r\n          return 'Comm Loss';\r\n        case 2:\r\n          return 'Warning';\r\n        case 3:\r\n          return 'Alarm (out of Spec)';\r\n        default:\r\n          return '';\r\n      }\r\n    };\r\n  \r\n    public gsfGrowthByClassification$ = this.dataService\r\n      .gsfGrowthByClassification()\r\n      .pipe(\r\n        map((d: any) =>\r\n          d.map((x: any) => {\r\n            const goLiveDate = new Date(x.goLiveDate);\r\n            return [\r\n              goLiveDate,\r\n              x.cncRoomsArea + x.iso8RoomsArea + x.iso7RoomsArea,\r\n              x.criticalEnvironmentParametersCount\r\n            ];\r\n          })\r\n        )\r\n      );\r\n  \r\n    private _facilityFilterOptions$: BehaviorSubject<\r\n      { repName: string; sectionName: string; value: string }[]\r\n    >;\r\n    public get facilityFilterOptions$() {\r\n      return this._facilityFilterOptions$ as Observable<\r\n        { repName: string; sectionName: string; value: string }[]\r\n      >;\r\n    }\r\n  }\r\n  ",
            "properties": [
                {
                    "name": "chillerStatusLabel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 39
                },
                {
                    "name": "endDate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "optional": false,
                    "description": "",
                    "line": 42
                },
                {
                    "name": "locationName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 36
                },
                {
                    "name": "startDate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "optional": false,
                    "description": "",
                    "line": 41
                },
                {
                    "name": "statusColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 40
                },
                {
                    "name": "tag",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 37
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "TimeSeriesPoint",
            "id": "interface-TimeSeriesPoint-76c68cc294c66cc4dd47198bbb51f5890b9331191bd46f1d670a3c935a7e43caed002c589150456c62a9d1d275ba3151bcafb3c8382a661ce441d71f48e8f5b4",
            "file": "src/app/api/models/timeline.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Facility, Room } from '.';\r\n\r\nexport interface TimeSeriesPoint {\r\n  timestamp: number;\r\n  numeric_value: number;\r\n}\r\n\r\nexport interface LocationTimeSeriesData<T> {\r\n  location: T; //facility or room\r\n  tag: string; // piPath\r\n  points: TimeSeriesPoint[];\r\n}\r\n\r\nexport interface FacilityTimeSeriesData {\r\n  facility: Facility;\r\n  tag: string; // piPath\r\n  points: TimeSeriesPoint[];\r\n}\r\n\r\nexport interface RoomTimeSeriesData {\r\n  room: Room;\r\n  tag: string; // piPath\r\n  points: TimeSeriesPoint[];\r\n}\r\n\r\nexport interface LocationCurrentStatus {\r\n  locationName: string; //facility or room name\r\n  attribute: 'Composite' | 'Temp' | 'Hum' | 'Airx' | 'DP';\r\n  statusPoint: TimeSeriesPoint;\r\n}\r\n\r\nexport interface LocationQuery {\r\n  locationName: string;\r\n  tag: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "numeric_value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "timestamp",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "User",
            "id": "interface-User-9c7e5f1bbbab702cb032307d130876cb68969b0cd4eedef32a0c8cad8081a54e5f8f577ed6ad4539c1b99a1d246cb34031d198c2ea8eba440e64e91b14f01fdc",
            "file": "src/stories/User.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface User {}\n",
            "properties": [],
            "indexSignatures": [],
            "methods": []
        },
        {
            "name": "User",
            "id": "interface-User-589523cc4942f4e768d4e10df1f7e9ad41f18534b5766d101630e16e0ecf9989dc436161b18bbc26b930ce7daf772b8a481d0198427a9133ddd42e9e7378b4c8-1",
            "file": "src/app/shared/auth/user.service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { DataService } from 'src/app/api/data.service';\r\nimport { Injectable } from '@angular/core';\r\nimport {\r\n  Observable,\r\n  ReplaySubject,\r\n  Subject,\r\n  filter,\r\n  BehaviorSubject\r\n} from 'rxjs';\r\nimport { OAuthService } from 'angular-oauth2-oidc';\r\nimport { authCodeFlowConfig } from 'src/app/auth.config';\r\n\r\ninterface User {\r\n  userid: string;\r\n  email: string;\r\n  firstname: string;\r\n  lastname: string;\r\n  name: string;\r\n  isAdmin: boolean;\r\n  roles: string[];\r\n}\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n  constructor(\r\n    private oauthService: OAuthService,\r\n    private dataService: DataService\r\n  ) {\r\n    this._currentUser$ = new ReplaySubject(1);\r\n\r\n    if (this.oauthService.hasValidAccessToken()) {\r\n      const profile = JSON.parse(window.sessionStorage.id_token_claims_obj);\r\n      //this.oauthService.loadUserProfile().then((profile:any) => {\r\n        this.dataService.currentUserRoles().subscribe((roles) => {\r\n          this._currentUser$.next({\r\n            userid: profile.userid,\r\n            email: profile.email,\r\n            firstname: profile.first_name,\r\n            lastname: profile.last_name,\r\n            name: profile.name,\r\n\r\n            isAdmin: roles.some((r) => r === 'Admin'),\r\n            roles\r\n          });\r\n        });\r\n      // },(err)=>{\r\n      //   console.error(err);\r\n      // });\r\n    }\r\n  }\r\n\r\n  private _currentUser$: Subject<User>;\r\n\r\n  public Init(profile: any) {\r\n    this.dataService.currentUserRoles().subscribe((roles) => {\r\n      this._currentUser$.next({\r\n        userid: profile.info.userid,\r\n        email: profile.info.email,\r\n        firstname: profile.info.first_name,\r\n        lastname: profile.info.last_name,\r\n        name: profile.info.name,\r\n\r\n        isAdmin: roles.some((r) => r === 'Admin'),\r\n        roles\r\n      });\r\n    });\r\n  }\r\n\r\n  public Login() {\r\n    this.oauthService.configure(authCodeFlowConfig);\r\n    this.oauthService.loadDiscoveryDocumentAndLogin();\r\n\r\n    this.oauthService.events\r\n      .pipe(filter((e) => e.type === 'token_received'))\r\n      .subscribe((_) => {\r\n        // console.debug('state', this.oauthService.state);\r\n        this.oauthService.loadUserProfile().then((profile: any) => {\r\n          this.dataService.currentUserRoles().subscribe((roles) => {\r\n            this._currentUser$.next({\r\n              userid: profile.info.userid,\r\n              email: profile.info.email,\r\n              firstname: profile.info.first_name,\r\n              lastname: profile.info.last_name,\r\n              name: profile.info.name,\r\n\r\n              isAdmin: roles.some((r) => r === 'Admin'),\r\n              roles\r\n            });\r\n          });\r\n        });\r\n        // const scopes = this.oauthService.getGrantedScopes();\r\n        // console.debug('scopes', scopes);\r\n      });\r\n  }\r\n\r\n  public get currentUser$(): Observable<User> {\r\n    return this._currentUser$ as Observable<User>;\r\n  }\r\n}\r\n",
            "properties": [
                {
                    "name": "email",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "firstname",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "isAdmin",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "lastname",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "roles",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "userid",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "User-1"
        }
    ],
    "injectables": [
        {
            "name": "AlmPiService",
            "id": "injectable-AlmPiService-b04d329e8bf418669dee0551c1ca8683116d2a90113754b022908521a0d92f3932bed19146ceae861718513e031c8eadda491dc076c00c60ec5d8a682e2f4ccc",
            "file": "src/app/api/alm-pi.service.ts",
            "properties": [
                {
                    "name": "AF_SERVER",
                    "defaultValue": "environment.afServer",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "DATABASE",
                    "defaultValue": "'Database1'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "DB_WEBID",
                    "defaultValue": "environment.dbWebId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "HEADERS",
                    "defaultValue": "{withCredentials: true}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Object",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methods": [
                {
                    "name": "getAlarms",
                    "args": [
                        {
                            "name": "piName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 84,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRetrieves all alarm/warning/error Event Frames for the last 24\nhours from PI via PI Web API.\n",
                    "description": "<p>Retrieves all alarm/warning/error Event Frames for the last 24\nhours from PI via PI Web API.</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 2067,
                                "end": 2073,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "piName"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 2061,
                                "end": 2066,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>facility prefix used for CGMP items in PI</p>\n"
                        }
                    ]
                },
                {
                    "name": "getAllAttributes",
                    "args": [
                        {
                            "name": "webId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "webId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getAllChildElements",
                    "args": [
                        {
                            "name": "webId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "webId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getAllChildrenElements",
                    "args": [
                        {
                            "name": "path",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "count",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 60,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "path",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "count",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getAttributeByPath",
                    "args": [
                        {
                            "name": "path",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 69,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "path",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getCurrentValue",
                    "args": [
                        {
                            "name": "webId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 49,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "webId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getWebId",
                    "args": [
                        {
                            "name": "path",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "path",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from '../../environments/environment';\r\n\r\n@Injectable()\r\nexport class AlmPiService {\r\n\r\n  private DB_WEBID: string = environment.dbWebId;\r\n  private AF_SERVER: string = environment.afServer;\r\n  private DATABASE: string = 'Database1';\r\n  private HEADERS: Object = {withCredentials: true};\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getWebId(path: string): Observable<any> {\r\n    const url: string = [\r\n      this.AF_SERVER,\r\n      '/piwebapi/elements?path=',\r\n      // this.DATABASE,\r\n      path\r\n    ].join('');\r\n\r\n    return this.http.get<any>(url, this.HEADERS)\r\n  }\r\n\r\n  getAllChildElements(webId: string): Observable<any> {\r\n    const url: string = [\r\n      this.AF_SERVER,\r\n      '/piwebapi/elements/',\r\n      webId,\r\n      '/elements'\r\n    ].join('');\r\n\r\n    return this.http.get(url, this.HEADERS);\r\n  }\r\n\r\n  getAllAttributes(webId: string): Observable<any> {\r\n    const url: string = [\r\n      this.AF_SERVER,\r\n      '/piwebapi/elements/',\r\n      webId,\r\n      '/attributes'\r\n    ].join('');\r\n\r\n    return this.http.get(url, this.HEADERS);\r\n  }\r\n\r\n  getCurrentValue(webId: string): Observable<any> {\r\n    const url: string = [\r\n      this.AF_SERVER,\r\n      '/piwebapi/streams/',\r\n      webId,\r\n      '/end'\r\n    ].join('');\r\n\r\n    return this.http.get(url, this.HEADERS);\r\n  }\r\n\r\n  getAllChildrenElements(path: string, count:number): Observable<any> {\r\n    const url: string = [\r\n      this.AF_SERVER,\r\n      '/piwebapi/search/children?parent=',\r\n      path,'&count=',count\r\n    ].join('');\r\n    return this.http.get<any>(url, this.HEADERS);\r\n  }\r\n\r\n  getAttributeByPath(path: string): Observable<any> {\r\n    const url: string = [\r\n      this.AF_SERVER,\r\n      '/piwebapi/attributes?',\r\n      path\r\n    ].join('');\r\n\r\n    return this.http.get(url, this.HEADERS);\r\n  }\r\n\r\n  /**\r\n   * Retrieves all alarm/warning/error Event Frames for the last 24\r\n   * hours from PI via PI Web API.\r\n   * @param piName facility prefix used for CGMP items in PI\r\n   */\r\n  getAlarms(piName: string): Observable<any> {\r\n    const queries: string = [\r\n      `CategoryName=CGMP-${piName}`,\r\n      'startTime=*-24h',\r\n      'searchMode=ForwardFromStartTime',\r\n      'selectedFields=Items.Name;Items.CategoryNames;Items.Severity;Items.StartTime;Items.EndTime'\r\n    ].join('&');\r\n\r\n    const url: string = [\r\n      this.AF_SERVER,\r\n      '/piwebapi/assetdatabases/',\r\n      this.DB_WEBID,\r\n      '/eventframes?',\r\n      queries\r\n    ].join('');\r\n\r\n    return this.http.get<any>(url, this.HEADERS);\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "ApfPortfolioAllDashboardService",
            "id": "injectable-ApfPortfolioAllDashboardService-887e430752ea06177cef5d0614507dea4d0dc354bf5d0d92843c7cb92ce892b1dd36074b349318c1a0c76eb94c861263253461612bdadf464e4c9b740d4baed0",
            "file": "src/app/apf-portfolio-all-dashboard/apf-portfolio-all-dashboard.service.ts",
            "properties": [
                {
                    "name": "gsfByFacility$",
                    "defaultValue": "this.dataService\r\n    .gsfByFacility('APF')\r\n    .pipe(map((d: any) => d.map((x: any) => [x.facility, x.gsf])))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "gsfByIC$",
                    "defaultValue": "this.dataService\r\n    .gsfByIC()\r\n    .pipe(map((d: any) => d.map((x: any) => [x.ic, x.gsf])))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "gsfGrowthByClassification$",
                    "defaultValue": "this.dataService\r\n    .gsfGrowthByClassification()\r\n    .pipe(\r\n      map((d: any) =>\r\n        d.map((x: any) => {\r\n          const goLiveDate = new Date(x.goLiveDate);\r\n          return [goLiveDate, x.cncRoomsArea, x.iso8RoomsArea, x.iso7RoomsArea];\r\n        })\r\n      )\r\n    )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17
                }
            ],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { DataService } from 'src/app/api/data.service';\r\nimport { Injectable } from '@angular/core';\r\nimport { map } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class ApfPortfolioAllDashboardService {\r\n  constructor(private dataService: DataService) {}\r\n\r\n  gsfByFacility$ = this.dataService\r\n    .gsfByFacility('APF')\r\n    .pipe(map((d: any) => d.map((x: any) => [x.facility, x.gsf])));\r\n\r\n  gsfByIC$ = this.dataService\r\n    .gsfByIC()\r\n    .pipe(map((d: any) => d.map((x: any) => [x.ic, x.gsf])));\r\n\r\n  gsfGrowthByClassification$ = this.dataService\r\n    .gsfGrowthByClassification()\r\n    .pipe(\r\n      map((d: any) =>\r\n        d.map((x: any) => {\r\n          const goLiveDate = new Date(x.goLiveDate);\r\n          return [goLiveDate, x.cncRoomsArea, x.iso8RoomsArea, x.iso7RoomsArea];\r\n        })\r\n      )\r\n    );\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "dataService",
                        "type": "DataService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 6,
                "jsdoctags": [
                    {
                        "name": "dataService",
                        "type": "DataService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "DataService",
            "id": "injectable-DataService-ad2b7d87d326ee268b3f091966ee101ce82c87cdfb625f0be3d7aae604b62894b43b468c2d0fb30e708eb68df9078f31f77ceb37b7e92e6401270a38f52f7cf0",
            "file": "src/app/api/data.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "apfLimits",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 162,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "appSettings",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 170,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "contactUs",
                    "args": [
                        {
                            "name": "message",
                            "type": "ContactUsMessage",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 174,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "message",
                            "type": "ContactUsMessage",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "currentUserRoles",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 194,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "errors",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 166,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "facilities",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 50,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "facilitiesByIC",
                    "args": [
                        {
                            "name": "ic",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "ic",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "facilityAlltimelineData",
                    "args": [
                        {
                            "name": "portfolioId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "startDate",
                            "type": "Date",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "endDate",
                            "type": "Date",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "interval",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 112,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "portfolioId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "startDate",
                            "type": "Date",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "endDate",
                            "type": "Date",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "interval",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "facilityById",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "facilityCurrentStatusData",
                    "args": [
                        {
                            "name": "facilityId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 145,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "facilityId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "facilityDocuments",
                    "args": [
                        {
                            "name": "facilityId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 182,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "facilityId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "facilityPictures",
                    "args": [
                        {
                            "name": "facilityId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 178,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "facilityId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "facilityRoomsTimelineDate",
                    "args": [
                        {
                            "name": "facilityId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "attr",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "startDate",
                            "type": "Date",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "endDate",
                            "type": "Date",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "interval",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 129,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "facilityId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "attr",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "startDate",
                            "type": "Date",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "endDate",
                            "type": "Date",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "interval",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "get",
                    "args": [
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [
                        "T"
                    ],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "gsfByFacility",
                    "args": [
                        {
                            "name": "portfolioId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 58,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "portfolioId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "gsfByIC",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 62,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "gsfGrowthByClassification",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 66,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "post",
                    "args": [
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "body",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [
                        "T"
                    ],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "body",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "roomCurrentAttributeData",
                    "args": [
                        {
                            "name": "facilityId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "roomFormattedName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 156,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "facilityId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "roomFormattedName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "roomParameterInfo",
                    "args": [
                        {
                            "name": "facilityId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 78,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "facilityId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "sops",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 186,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "statusReports",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 190,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "svgMap",
                    "args": [
                        {
                            "name": "facId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "marker",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "'pin'"
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 70,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "facId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "marker",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "'pin'",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "svgMapBackgroundUrl",
                    "args": [
                        {
                            "name": "facId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 74,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "facId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "timelineData",
                    "args": [
                        {
                            "name": "facilityId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "attr",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "startDate",
                            "type": "Date",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "endDate",
                            "type": "Date",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "interval",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 82,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "facilityId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "attr",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "startDate",
                            "type": "Date",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "endDate",
                            "type": "Date",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "interval",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import {\r\n  Attachment,\r\n  AttachmentGroup,\r\n  ContactUsMessage,\r\n  ErrorLog,\r\n  Facility,\r\n  FacilityGsf,\r\n  FacilityTimeSeriesData,\r\n  GsfGrowth,\r\n  ICGsf,\r\n  LocationCurrentStatus,\r\n  LocationTimeSeriesData,\r\n  Room,\r\n  RoomTimeSeriesData,\r\n  SvgMap,\r\n} from './models';\r\n\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\nimport { OAuthService } from 'angular-oauth2-oidc';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DataService {\r\n\r\n  constructor(private http: HttpClient, private oauthService: OAuthService) {\r\n  }\r\n\r\n  private get headers() {\r\n    const headers = new HttpHeaders().set('Accept', 'application/json')\r\n    .set('Authorization', 'Bearer ' + this.oauthService.getAccessToken());\r\n\r\n    return headers;\r\n  }\r\n\r\n  private get<T>(url: string) {\r\n    return this.http.get<T>(`${environment.apiRootUrl}/${url}`, {headers:this.headers});\r\n  }\r\n\r\n  private post<T>(url: string, body: any) {\r\n    return this.http.post<T>(`${environment.apiRootUrl}/${url}`, body, {headers:this.headers});\r\n  }\r\n\r\n  facilityById(id: number) {\r\n    return this.get<Facility>(`Facilities/${id}`);\r\n  }\r\n\r\n  facilities() {\r\n    return this.get<Facility[]>(`Facilities`);\r\n  }\r\n\r\n  facilitiesByIC(ic: string) {\r\n    return this.get<Facility[]>(`Facilities/ic/${ic}`);\r\n  }\r\n\r\n  gsfByFacility(portfolioId:string) {\r\n    return this.get<FacilityGsf[]>(`GsfChart/GsfByFacility/${portfolioId}`);\r\n  }\r\n\r\n  gsfByIC() {\r\n    return this.get<ICGsf[]>(`GsfChart/GsfByIC`);\r\n  }\r\n\r\n  gsfGrowthByClassification() {\r\n    return this.get<GsfGrowth[]>(`GsfChart/GsfGrowthByClassification`);\r\n  }\r\n\r\n  svgMap(facId: number, marker: string = 'pin') {\r\n    return this.get<SvgMap>(`SvgMap/${facId}?marker=${marker}`);\r\n  }\r\n\r\n  svgMapBackgroundUrl(facId: number) {\r\n    return `${environment.apiRootUrl}/SvgMap/backgroundImage/${facId}`;\r\n  }\r\n\r\n  roomParameterInfo(facilityId: number) {\r\n    return this.get<Room[]>(`SvgMap/RoomParameterInfo/facility/${facilityId}`);\r\n  }\r\n\r\n  timelineData(\r\n    facilityId: number,\r\n    attr: string,\r\n    startDate: Date,\r\n    endDate: Date,\r\n    interval: number\r\n  ) {\r\n    if (facilityId == 0) {\r\n      return this.post<LocationTimeSeriesData<Facility>[]>(\r\n        `Timeline/AllFacilityTimelineData`,\r\n        {\r\n          startDate,\r\n          endDate,\r\n          interval\r\n        }\r\n      );\r\n    }\r\n\r\n    return this.post<LocationTimeSeriesData<Room>[]>(\r\n      `Timeline/FacilityTimelineData`,\r\n      {\r\n        facilityId,\r\n        attr,\r\n        startDate,\r\n        endDate,\r\n        interval\r\n      }\r\n    );\r\n  }\r\n\r\n  facilityAlltimelineData(\r\n    portfolioId: string,\r\n    startDate: Date,\r\n    endDate: Date,\r\n    interval: number\r\n  ) {\r\n    return this.post<FacilityTimeSeriesData[]>(\r\n      `Timeline/AllFacilityTimelineData`,\r\n      {\r\n        portfolioId,\r\n        startDate,\r\n        endDate,\r\n        interval\r\n      }\r\n    );\r\n  }\r\n\r\n  facilityRoomsTimelineDate(\r\n    facilityId: number,\r\n    attr: string,\r\n    startDate: Date,\r\n    endDate: Date,\r\n    interval: number\r\n  ) {\r\n    return this.post<RoomTimeSeriesData[]>(`Timeline/FacilityTimelineData`, {\r\n      facilityId,\r\n      attr,\r\n      startDate,\r\n      endDate,\r\n      interval\r\n    });\r\n  }\r\n\r\n  facilityCurrentStatusData(facilityId: number) {\r\n    if (facilityId == 0) {\r\n      return this.get<LocationCurrentStatus[]>(\r\n        `Timeline/AllFacilityCurrentData`\r\n      );\r\n    }\r\n    return this.get<LocationCurrentStatus[]>(\r\n      `Timeline/FacilityCurrentCompositeData/${facilityId}`\r\n    );\r\n  }\r\n\r\n  roomCurrentAttributeData(facilityId: number, roomFormattedName: string) {\r\n    return this.get<LocationCurrentStatus[]>(\r\n      `Timeline/RoomCurrentAttributeData/facility/${facilityId}/room/${roomFormattedName}`\r\n    );\r\n  }\r\n\r\n  apfLimits() {\r\n    return this.get<any[]>(`Timeline/ApfLimits`);\r\n  }\r\n\r\n  errors() {\r\n    return this.get<ErrorLog[]>(`ErrorLog`);\r\n  }\r\n  \r\n  appSettings() {\r\n    return this.get<any>('ErrorLog/appSettings')\r\n  }\r\n\r\n  contactUs(message:ContactUsMessage) {\r\n    return this.post('Message/ContactUs',message);\r\n  }\r\n\r\n  facilityPictures(facilityId:number) {\r\n    return this.get<Attachment[]>(`Attachment/pictures/facility/${facilityId}`);\r\n  }\r\n\r\n  facilityDocuments(facilityId:number) {\r\n    return this.get<AttachmentGroup[]>(`Attachment/documents/facility/${facilityId}`);\r\n  }\r\n\r\n  sops() {\r\n    return this.get<Attachment[]>(`Attachment/sops`);\r\n  }\r\n\r\n  statusReports() {\r\n    return this.get<Attachment[]>(`Attachment/statusReports`);\r\n  }\r\n\r\n  currentUserRoles() {\r\n    return this.get<string[]>(`Roles/currentUser`);\r\n  }\r\n\r\n  \r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "oauthService",
                        "type": "OAuthService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 26,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "oauthService",
                        "type": "OAuthService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "headers": {
                    "name": "headers",
                    "getSignature": {
                        "name": "headers",
                        "type": "",
                        "returnType": "",
                        "line": 31
                    }
                }
            },
            "type": "injectable"
        },
        {
            "name": "FacilityInfoPageService",
            "id": "injectable-FacilityInfoPageService-6fa99b97c134fa549153241817a126983b085a63ed5e4f678b7cce784adbffb1dce1fb1e892f4b80fee06f8c5c655322f72c820c021474ae5e0199bb0d1f6da9",
            "file": "src/app/facility-info-page/facility-info-page.service.ts",
            "properties": [
                {
                    "name": "_aboutPage$",
                    "defaultValue": "new BehaviorSubject<string>('')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_diagram$",
                    "defaultValue": "new BehaviorSubject<string>('')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_documents$",
                    "defaultValue": "new BehaviorSubject<AttachmentGroup[]>([])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_facility$",
                    "defaultValue": "new BehaviorSubject<Partial<Facility>>({})",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_pictures$",
                    "defaultValue": "new BehaviorSubject<Attachment[]>([])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_title$",
                    "defaultValue": "new BehaviorSubject<string>('')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "aboutPages",
                    "defaultValue": "{\r\n        \"CC\": \"CC-ALL.about.html\",\r\n        \"CCE\": \"CCE-ALL.about.html\",\r\n        \"CCPharmacy\": \"CCPharmacy-ALL.about.html\",\r\n        \"CCOther\": \"CCOther-ALL.about.html\",\r\n        \"NCI\": \"NCI-ALL.about.html\",\r\n        1: \"B1-PET.about.html\",\r\n        2: \"B3-PET.about.html\",\r\n        3: \"CC-CCE-2J.about.html\",\r\n        4: \"CC-CCE-12E.about.html\",\r\n        5: \"CC-CCE-NCI.about.html\",\r\n        6: \"CC-DLM-Lab.about.html\",\r\n        7: \"CC-NMD_RADIO.about.html\",\r\n        8: \"I-IVAU.about.html\",\r\n        9: \"P-IVAU.about.html\",\r\n        10: \"NCI-1B42.about.html\",\r\n        11: \"NCI_3W_TIL_LAB.about.html\",\r\n        12: \"NCI-Trailer1.about.html\",\r\n        13: \"NCI-Trailer2.about.html\",\r\n        16: \"CC-CCE-3T.about.html\",\r\n        17: \"I-IVAU_Ext.about.html\",\r\n        18: \"NIAID_Viral.about.html\",\r\n        19: \"NCY_Hyperpolarized.about.html\",\r\n        20: \"NIAID_29B_Bio_Facility.about.html\"\r\n    }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "diagrams",
                    "defaultValue": "{\r\n        1: \"CC_PET_Radiopharmacy.pdf\",\r\n        2: \"CC_PET_B3_Radiochemistry.pdf\",\r\n        3: \"CCE_2J_Cell_Therapy_Lab.pdf\",\r\n        4: \"CC_CCE_12E_Cell_Therapy_Lab.pdf\",\r\n        5: \"CC_CCE_East_Terrace_Modular.pdf\",\r\n        6:\"CC_DLM_Sterility_Lab.pdf\",\r\n        8:\"CC_PHARMACY_I-IVAU.pdf\",\r\n        9:\"P-IVAU_Diagram.pdf\",\r\n        10:\"NCI_SB_1B42.pdf\",\r\n        11:\"NCI_SB_TIL_Modular.pdf\",\r\n        12:\"NCI_Trailer1-10A.pdf\",\r\n        13:\"NCI_Trailer1-10B.pdf\",\r\n        19:\"HPP_Diagram.pdf\"\r\n    }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 59
                }
            ],
            "methods": [
                {
                    "name": "Load",
                    "args": [
                        {
                            "name": "facilityId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 75,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "facilityId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Attachment, AttachmentGroup } from '../api/models';\r\nimport {\r\n    BehaviorSubject,\r\n    Observable,\r\n    Subject,\r\n    combineLatest,\r\n    distinctUntilChanged,\r\n    filter,\r\n    map,\r\n    mergeMap,\r\n    of,\r\n    zip\r\n} from 'rxjs';\r\n\r\nimport { DataService } from 'src/app/api/data.service';\r\nimport { Facility } from '../api/models';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable()\r\nexport class FacilityInfoPageService {\r\n    private _pictures$ = new BehaviorSubject<Attachment[]>([]);\r\n    private _documents$ = new BehaviorSubject<AttachmentGroup[]>([]);\r\n    private _aboutPage$ = new BehaviorSubject<string>('');\r\n    private _diagram$ = new BehaviorSubject<string>('');\r\n    private _facility$ = new BehaviorSubject<Partial<Facility>>({})\r\n    private _title$ = new BehaviorSubject<string>('');\r\n\r\n    constructor(private dataService: DataService) {\r\n    }\r\n\r\n    aboutPages:{[key:number|string]:string} = {\r\n        \"CC\": \"CC-ALL.about.html\",\r\n        \"CCE\": \"CCE-ALL.about.html\",\r\n        \"CCPharmacy\": \"CCPharmacy-ALL.about.html\",\r\n        \"CCOther\": \"CCOther-ALL.about.html\",\r\n        \"NCI\": \"NCI-ALL.about.html\",\r\n        1: \"B1-PET.about.html\",\r\n        2: \"B3-PET.about.html\",\r\n        3: \"CC-CCE-2J.about.html\",\r\n        4: \"CC-CCE-12E.about.html\",\r\n        5: \"CC-CCE-NCI.about.html\",\r\n        6: \"CC-DLM-Lab.about.html\",\r\n        7: \"CC-NMD_RADIO.about.html\",\r\n        8: \"I-IVAU.about.html\",\r\n        9: \"P-IVAU.about.html\",\r\n        10: \"NCI-1B42.about.html\",\r\n        11: \"NCI_3W_TIL_LAB.about.html\",\r\n        12: \"NCI-Trailer1.about.html\",\r\n        13: \"NCI-Trailer2.about.html\",\r\n        16: \"CC-CCE-3T.about.html\",\r\n        17: \"I-IVAU_Ext.about.html\",\r\n        18: \"NIAID_Viral.about.html\",\r\n        19: \"NCY_Hyperpolarized.about.html\",\r\n        20: \"NIAID_29B_Bio_Facility.about.html\"\r\n    }\r\n\r\n\r\n    diagrams:{[key:number]:string} = {\r\n        1: \"CC_PET_Radiopharmacy.pdf\",\r\n        2: \"CC_PET_B3_Radiochemistry.pdf\",\r\n        3: \"CCE_2J_Cell_Therapy_Lab.pdf\",\r\n        4: \"CC_CCE_12E_Cell_Therapy_Lab.pdf\",\r\n        5: \"CC_CCE_East_Terrace_Modular.pdf\",\r\n        6:\"CC_DLM_Sterility_Lab.pdf\",\r\n        8:\"CC_PHARMACY_I-IVAU.pdf\",\r\n        9:\"P-IVAU_Diagram.pdf\",\r\n        10:\"NCI_SB_1B42.pdf\",\r\n        11:\"NCI_SB_TIL_Modular.pdf\",\r\n        12:\"NCI_Trailer1-10A.pdf\",\r\n        13:\"NCI_Trailer1-10B.pdf\",\r\n        19:\"HPP_Diagram.pdf\"\r\n    }\r\n      \r\n    Load(facilityId: number) {\r\n\r\n        this.dataService.facilityPictures(facilityId).subscribe((pictures: Attachment[]) => {\r\n            const picturesWithUrls = pictures.map(p => ({ ...p, url: `${environment.attachmentRootUrl}/${p.storedFileName}` }));\r\n            this._pictures$.next(picturesWithUrls);\r\n        });\r\n\r\n        this.dataService.facilityDocuments(facilityId).subscribe((documents: AttachmentGroup[]) => {\r\n            const docs = documents.map(d => ({\r\n                ...d,\r\n                attachments: d.attachments.map(a => ({ \r\n                    ...a, \r\n                    url: `${environment.attachmentRootUrl}/${a.storedFileName}` }))\r\n            }));\r\n            this._documents$.next(docs.filter(d=>d.description !== 'Facility Digram')); \r\n        });\r\n\r\n        this.dataService.facilityById(facilityId).subscribe(facility=>{\r\n            this._facility$.next(facility);\r\n            //this._title$.next(facility.facilityFullName || '');\r\n        });\r\n\r\n        const aboutPage = this.aboutPages[facilityId] ? 'about/'+this.aboutPages[facilityId] : '';\r\n        const diagram = this.diagrams[facilityId] ? 'assets/diagrams/'+this.diagrams[facilityId] : '';\r\n        this._aboutPage$.next(aboutPage);\r\n        this._diagram$.next(diagram);\r\n    }\r\n\r\n    public get pictures$() {\r\n        return this._pictures$ as Observable<Attachment[]>;\r\n    }\r\n\r\n    public get documents$() {\r\n        return this._documents$ as Observable<AttachmentGroup[]>;\r\n    }\r\n\r\n    public get aboutPage$() {\r\n        return this._aboutPage$ as Observable<string>;\r\n    }\r\n    \r\n    public get diagram$() {\r\n        return this._diagram$ as Observable<string>;\r\n    }\r\n    \r\n    public get title$() {\r\n        return this._facility$.pipe(map(x=>x.facilityFullName)) as Observable<string>;\r\n    }\r\n    \r\n    // public get facilitySection$() {\r\n    //     return this._facility$.pipe(map(x=>x.facilitySection)) as Observable<string>;\r\n    // }\r\n\r\n    public get facility$() {\r\n        return this._facility$ as Observable<Facility>;\r\n    }\r\n}",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "dataService",
                        "type": "DataService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 27,
                "jsdoctags": [
                    {
                        "name": "dataService",
                        "type": "DataService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "pictures$": {
                    "name": "pictures$",
                    "getSignature": {
                        "name": "pictures$",
                        "type": "",
                        "returnType": "",
                        "line": 103
                    }
                },
                "documents$": {
                    "name": "documents$",
                    "getSignature": {
                        "name": "documents$",
                        "type": "",
                        "returnType": "",
                        "line": 107
                    }
                },
                "aboutPage$": {
                    "name": "aboutPage$",
                    "getSignature": {
                        "name": "aboutPage$",
                        "type": "",
                        "returnType": "",
                        "line": 111
                    }
                },
                "diagram$": {
                    "name": "diagram$",
                    "getSignature": {
                        "name": "diagram$",
                        "type": "",
                        "returnType": "",
                        "line": 115
                    }
                },
                "title$": {
                    "name": "title$",
                    "getSignature": {
                        "name": "title$",
                        "type": "",
                        "returnType": "",
                        "line": 119
                    }
                },
                "facility$": {
                    "name": "facility$",
                    "getSignature": {
                        "name": "facility$",
                        "type": "",
                        "returnType": "",
                        "line": 127
                    }
                }
            },
            "type": "injectable"
        },
        {
            "name": "FacilityTimelineDashboardService",
            "id": "injectable-FacilityTimelineDashboardService-4096b764617cb8b2902ef9ff0d4bd9a525ffb24ac1e72f15ae26439e4171fb505835fb27ec2e456904c47a5a46f7d4b0ed7d87105bb234e634dc90efa7be5169",
            "file": "src/app/facility-timeline-dashboard/facility-timeline-dashboard.service.ts",
            "properties": [
                {
                    "name": "_apfLimits$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<apfLimitsLookup>",
                    "optional": false,
                    "description": "",
                    "line": 428,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_currentStatusValues$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<LocationCurrentStatus[]>",
                    "optional": false,
                    "description": "",
                    "line": 374,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_facilityFilterOptions$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<literal type[]>",
                    "optional": false,
                    "description": "",
                    "line": 478,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_hoveredPin$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subject<string>",
                    "optional": false,
                    "description": "",
                    "line": 401,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_hoveredTimelineLabel$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subject<string>",
                    "optional": false,
                    "description": "",
                    "line": 406,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_ic$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subject<string>",
                    "optional": false,
                    "description": "",
                    "line": 348,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_parameterValues$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<Room[]>",
                    "optional": false,
                    "description": "",
                    "line": 381,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_piDataFilter$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subject<PiDataFilter>",
                    "optional": false,
                    "description": "",
                    "line": 353,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_pinStates",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<locationStatusLookup>",
                    "optional": false,
                    "description": "",
                    "line": 375,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_selectedPin$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subject<string>",
                    "optional": false,
                    "description": "",
                    "line": 396,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_selectedRoomInfo$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subject<roomInfoLookup>",
                    "optional": false,
                    "description": "",
                    "line": 411,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_svgMap$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subject<SvgMap>",
                    "optional": false,
                    "description": "",
                    "line": 369,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_svgMapBackgroundImageUrl$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subject<string>",
                    "optional": false,
                    "description": "",
                    "line": 391,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_timelineChartData$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subject<TimelineChartData>",
                    "optional": false,
                    "description": "",
                    "line": 386,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "chillerStatusLabel",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 448,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "gsfGrowthByClassification$",
                    "defaultValue": "this.dataService\r\n      .gsfGrowthByClassification()\r\n      .pipe(\r\n        map((d: any) =>\r\n          d.map((x: any) => {\r\n            const goLiveDate = new Date(x.goLiveDate);\r\n            return [\r\n              goLiveDate,\r\n              x.cncRoomsArea + x.iso8RoomsArea + x.iso7RoomsArea,\r\n              x.criticalEnvironmentParametersCount\r\n            ];\r\n          })\r\n        )\r\n      )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 463,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "statusColor",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 433,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methods": [
                {
                    "name": "filterPiData",
                    "args": [
                        {
                            "name": "filter",
                            "type": "PiDataFilter",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 354,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "filter",
                            "type": "PiDataFilter",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setHoveredPin",
                    "args": [
                        {
                            "name": "pinName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 420,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "pinName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setHoveredTimelineLabel",
                    "args": [
                        {
                            "name": "label",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 424,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "label",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setIC",
                    "args": [
                        {
                            "name": "ic",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 349,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "ic",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setSelectedPin",
                    "args": [
                        {
                            "name": "pinName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 416,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "pinName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import {\r\n    BehaviorSubject,\r\n    Observable,\r\n    Subject,\r\n    combineLatest,\r\n    distinctUntilChanged,\r\n    filter,\r\n    map,\r\n    mergeMap,\r\n    of,\r\n    zip\r\n} from 'rxjs';\r\nimport {\r\n    LocationCurrentStatus,\r\n    Room,\r\n    SvgMap,\r\n} from 'src/app/api/models';\r\nimport { keyBy, reduce } from 'lodash';\r\n\r\nimport { DataService } from 'src/app/api/data.service';\r\nimport { Injectable } from '@angular/core';\r\nimport { PiWebApiService } from '../api/pi-webapi.service';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\nexport interface PiDataFilter {\r\n    facility: { repName?: string; sectionName: string; value: number };\r\n    //portfolioId: string;\r\n    //facilityOrPortfolio: 'facility' | 'portfolio'\r\n    status: string;\r\n    startDate: Date;\r\n    endDate: Date;\r\n    interval: number;\r\n  }\r\n  \r\n  export interface TimelineChartDataPoint {\r\n    locationName: string;\r\n    tag: string;\r\n    // statusValue:number,\r\n    chillerStatusLabel: string;\r\n    statusColor: string;\r\n    startDate: Date;\r\n    endDate: Date;\r\n  }\r\n  \r\n  export interface RoomDisplayField {\r\n    name: string;\r\n    value: string;\r\n    displayType?: string;\r\n  }\r\n  \r\n  export interface TimelineChartData {\r\n    points: TimelineChartDataPoint[];\r\n    locations: { [name: string]: any };\r\n    // locationCount: number;\r\n    locationType: 'room' | 'facility';\r\n  }\r\n  \r\n  export interface StatusPoint {\r\n    timeStamp: number;\r\n    numeric_value: number;\r\n  }\r\n  \r\n  export type locationStatusLookup = { [name: string]: string };\r\n  export type roomInfoLookup = { [name: string]: string };\r\n  export type apfLimitsLookup = { [facRoomKey: string]: any };\r\n  \r\n  @Injectable()\r\n  export class FacilityTimelineDashboardService {\r\n    constructor(private dataService: DataService, private piWebApiService:PiWebApiService) {\r\n      const defaultStartDate = new Date();\r\n      defaultStartDate.setDate(defaultStartDate.getDate() - 1);\r\n\r\n      this._piDataFilter$ = new Subject<PiDataFilter>()\r\n      // new BehaviorSubject<PiDataFilter>({\r\n      //   facility: { repName: '', sectionName: '', value: 0 },\r\n      //   portfolioId: '',\r\n      //   facilityOrPortfolio: 'facility',\r\n      //   status: '',\r\n      //   startDate: defaultStartDate,\r\n      //   endDate: defaultEndDate,\r\n      //   interval: 10\r\n      // });\r\n  \r\n      this._ic$ = new BehaviorSubject<string>('');\r\n      this._facilityFilterOptions$ = new BehaviorSubject<\r\n        { repName: string; sectionName: string; value: string }[]\r\n      >([]);\r\n      this._svgMap$ = new BehaviorSubject<SvgMap>({\r\n        name: 'apf_facility_all',\r\n        backgroundSvg: '',\r\n        id: 0,\r\n        svgMapPins: [],\r\n        svgMapArrows: [],\r\n        viewbox: '0 0 0 0',\r\n        defs: '',\r\n        facilityId: 0\r\n      });\r\n      this._svgMapBackgroundImageUrl$ = new BehaviorSubject<string>('');\r\n      this._currentStatusValues$ = new BehaviorSubject<LocationCurrentStatus[]>(\r\n        []\r\n      );\r\n      this._parameterValues$ = new BehaviorSubject<Room[]>([]);\r\n      this._timelineChartData$ = new BehaviorSubject<TimelineChartData>({\r\n        points: [],\r\n        locations: {},\r\n        //locationCount:0,\r\n        locationType: 'facility'\r\n      });\r\n      this._selectedPin$ = new BehaviorSubject<string>('');\r\n      this._selectedRoomInfo$ = new BehaviorSubject<roomInfoLookup>({});\r\n      this._hoveredPin$ = new BehaviorSubject<string>('');\r\n      this._hoveredTimelineLabel$ = new BehaviorSubject<string>('');\r\n      this._apfLimits$ = new BehaviorSubject<apfLimitsLookup>({});\r\n      this._pinStates = new BehaviorSubject<locationStatusLookup>({});\r\n    \r\n      // Setup APF Limits from PI for all facilities\r\n      //this.dataService.apfLimits().subscribe((limits: any[]) => {\r\n      this.piWebApiService.apfLimits().subscribe((limits: any[]) => {\r\n\r\n        const limitsLookup:{[key:string]:string} = {};\r\n\r\n        try {\r\n          for(const limit of limits) {\r\n            if(limit.Conn_Room) {\r\n              const name1 = limit.Conn_Room ? `${limit.Room}_${limit.Conn_Room}_DP` : limit.Room;\r\n              const name2 = limit.Conn_Room ? `${limit.Conn_Room}_${limit.Room}_DP` : limit.Room;\r\n              limitsLookup[`${limit.Facility.toLowerCase()}|${name1.toLowerCase()}`] = limit;\r\n              limitsLookup[`${limit.Facility.toLowerCase()}|${name2.toLowerCase()}`] = limit;\r\n            }\r\n            else {\r\n              limitsLookup[`${limit.Facility.toLowerCase()}|${limit.Room.toLowerCase()}`] = limit\r\n            }\r\n          }\r\n        }\r\n        catch(e){\r\n          console.log(e)\r\n        }\r\n  \r\n        this._apfLimits$.next(limitsLookup);\r\n      });\r\n  \r\n      // create an observable of the facility selected in the fillter control\r\n      const selectedFacility$ = this._piDataFilter$.pipe(\r\n        distinctUntilChanged(\r\n          (prev, curr) => prev.facility.value === curr.facility.value\r\n        ),\r\n        map((f) => f.facility)\r\n      );\r\n\r\n      const selectedStatus$ = this._piDataFilter$.pipe(\r\n        map((f) => (f.status.toLowerCase())),\r\n        distinctUntilChanged()\r\n      );\r\n      \r\n      // create an observable of the marker type to use with the map - 'pin' or 'arrow'\r\n      const svgMapMarker$ = this._piDataFilter$.pipe(\r\n        map((f) => (f.status.toLowerCase() === 'dp' ? 'arrow' : 'pin')),\r\n        distinctUntilChanged()\r\n      );\r\n  \r\n      // Update the floor plan and room parameter info needed by svg map when the facility changes\r\n      selectedFacility$\r\n        .pipe(\r\n          filter(facility=>Boolean(facility?.value)),\r\n          mergeMap((facility) =>\r\n            zip(\r\n              of(facility.value),\r\n              this.dataService.roomParameterInfo(facility.value) // parameter info from database for each room and attribute in facility\r\n            )\r\n          )\r\n        )\r\n        .subscribe(([facilityId, parameterValues]) => {\r\n          const backGroundImageUrl = `assets/images/orig-floor-plans/FID${facilityId}_FloorPlan.jpg`;\r\n          this._svgMapBackgroundImageUrl$.next(backGroundImageUrl);\r\n\r\n          this._parameterValues$.next(parameterValues);\r\n  \r\n          this._selectedPin$.next('');\r\n          this._selectedRoomInfo$.next({});\r\n        });\r\n      \r\n\r\n      // Update the room states when the facility or the selected status attribute changes\r\n      combineLatest([selectedFacility$, selectedStatus$])\r\n        .pipe(\r\n          mergeMap(([facility,status]) => {\r\n            return this.piWebApiService.facilityCurrentStatusData(facility.sectionName, status);\r\n          }),\r\n          map((statusData)=>{\r\n            const pinStatusLookup = reduce(\r\n              statusData,\r\n              (acc, x) => ({\r\n                ...acc,\r\n                [x.locationName]: this.statusColor(x.statusPoint.numeric_value)\r\n              }),\r\n              {}\r\n            );\r\n            return pinStatusLookup;\r\n          })\r\n        ).subscribe((pinStatusLookup)=>{\r\n          this._pinStates.next(pinStatusLookup);\r\n    \r\n        })\r\n        \r\n  \r\n      // Get the pins or arrows for the Svg Floor plan if the facility changes or attriibute changes between not dp and dp\r\n      combineLatest([selectedFacility$, svgMapMarker$])\r\n        .pipe(\r\n          mergeMap(([facility, marker]) => {\r\n            return this.dataService.svgMap(facility.value, marker);\r\n          })\r\n        )\r\n        .subscribe((svgMap) => {\r\n          this._svgMap$.next(svgMap);\r\n        });\r\n  \r\n      // when a map pin is selected, prepare room info display data using the apf limits query, current status values, and the room parameters\r\n      const roomCurrentAttributeData$ = \r\n        combineLatest([selectedFacility$, this._selectedPin$])\r\n          .pipe(\r\n            filter(([facility,pin])=>Boolean(pin)),\r\n            mergeMap(([facility,pin])=>zip(\r\n              of(facility),\r\n              of(pin),\r\n              //this.dataService.roomCurrentAttributeData(facility.value,pin)))\r\n              this.piWebApiService.roomCurrentAttributeData(facility.sectionName,pin)))\r\n          )\r\n\r\n      roomCurrentAttributeData$\r\n      .subscribe(([facility,pin,roomStatusValues]) => {\r\n        const sectionName = facility.sectionName.toLowerCase();\r\n        const key = `${sectionName}|${pin.toLowerCase()}`; // pin = room number\r\n        const apfLimits = this._apfLimits$.value[key];\r\n        const isDP = pin.indexOf('DP') > -1;\r\n        const room = isDP ? \r\n          this._parameterValues$.value.find(\r\n            (r) => (r.formattedName.toLowerCase() === pin.toLowerCase())\r\n          ) : \r\n          this._parameterValues$.value.find(\r\n            (r) => (r.roomNumber.toLowerCase() === pin.toLowerCase())\r\n          );\r\n  \r\n        const info = {\r\n          ...apfLimits,\r\n          gsf: room?.sq,\r\n          roomParameters: room?.roomParameters,\r\n          roomStatusValues,\r\n          compositeStatus: roomStatusValues.find(\r\n            (x) => x.attribute === 'Composite'\r\n          )?.statusPoint,\r\n          tempStatus: roomStatusValues.find((x) => x.attribute === 'Temp')\r\n            ?.statusPoint,\r\n          rhStatus: roomStatusValues.find((x) => x.attribute === 'Hum')\r\n            ?.statusPoint,\r\n          achStatus: roomStatusValues.find((x) => x.attribute === 'Airx')\r\n            ?.statusPoint,\r\n          dpStatus: roomStatusValues.find((x) => x.attribute === 'DP')\r\n            ?.statusPoint\r\n        };\r\n  \r\n        this._selectedRoomInfo$.next(info);\r\n      });\r\n  \r\n\r\n      // prepare data for specific facility timeline\r\n      this._piDataFilter$\r\n        .pipe(\r\n          mergeMap((filter: PiDataFilter) =>\r\n\r\n            this.piWebApiService.timelineData(\r\n              filter.facility.sectionName,\r\n              filter.status,\r\n              filter.startDate,\r\n              filter.endDate,\r\n              filter.interval\r\n            )\r\n              .pipe(\r\n                catchError((err) => {\r\n                  console.log(\r\n                    'Error from dataService.facilityRoomsTimelineDate:' +\r\n                      JSON.stringify(err)\r\n                  );\r\n                  return of([]);\r\n                }),\r\n                map((data) => ({ filter, data }))\r\n              )\r\n          )\r\n        )\r\n        .subscribe((dataAndFilter) => {\r\n          const chartDataPoints: TimelineChartDataPoint[] = [];\r\n          const rooms = dataAndFilter.data.map((d) => d.location);\r\n          const roomLookup = keyBy(rooms, (r) => r.roomNumber);\r\n          const timestamps = (dataAndFilter.data || [])\r\n            .filter((x) => x.points.some(Boolean))\r\n            .map((x) => x.points[0].timestamp);\r\n          const minTimestamp = timestamps.reduce(function (a, b) {\r\n            return a < b ? a : b;\r\n          },Number.MAX_VALUE);\r\n  \r\n          for (const x of dataAndFilter.data) {\r\n            if (!x.points.some(Boolean)) {\r\n              x.points = [\r\n                {\r\n                  timestamp: minTimestamp,\r\n                  numeric_value: 1\r\n                },\r\n                {\r\n                  timestamp: dataAndFilter.filter.endDate.getTime(),\r\n                  numeric_value: 1\r\n                }\r\n              ];\r\n            }\r\n  \r\n            x.points.sort((a, b) => a.timestamp - b.timestamp);\r\n            let startTime = x.points[0].timestamp;\r\n            for (const y of x.points) {\r\n              if (y.timestamp < dataAndFilter.filter.startDate.getTime()) {\r\n                console.log('error - timestamp before request time');\r\n              }\r\n              const point: TimelineChartDataPoint = {\r\n                locationName: x.location.roomNumber,\r\n                tag: x.tag,\r\n                startDate: new Date(startTime),\r\n                endDate: new Date(Math.max(y.timestamp, startTime)),\r\n                statusColor: this.statusColor(y.numeric_value),\r\n                chillerStatusLabel: this.chillerStatusLabel(y.numeric_value)\r\n              };\r\n  \r\n              startTime = y.timestamp;\r\n              chartDataPoints.push(point);\r\n            }\r\n          }\r\n\r\n          const locations:any = {};\r\n          for(const d of dataAndFilter.data) {\r\n            locations[d.location.roomNumber] =d.location\r\n          }\r\n\r\n          this._timelineChartData$.next({\r\n            points: chartDataPoints,\r\n            locations: roomLookup,\r\n            //locationCount:dataAndFilter.data.length,\r\n            locationType: 'room'\r\n          });\r\n        });\r\n    } // end contstructor\r\n  \r\n    private _ic$: Subject<string>;\r\n    public setIC(ic: string) {\r\n      this._ic$.next(ic);\r\n    }\r\n  \r\n    private _piDataFilter$: Subject<PiDataFilter>;\r\n    public filterPiData(filter: PiDataFilter) {\r\n      this._piDataFilter$.next(filter);\r\n    }\r\n    public get piDataFilter$() {\r\n      return this._piDataFilter$ as Observable<PiDataFilter>;\r\n    }\r\n  \r\n    public get isFacilityAll$() {\r\n      return this._piDataFilter$.pipe(\r\n        map((f) => {\r\n          return Number(f.facility) === 0;\r\n        })\r\n      );\r\n    }\r\n  \r\n    private _svgMap$: Subject<SvgMap>;\r\n    public get svgMap$() {\r\n      return this._svgMap$ as Observable<SvgMap>;\r\n    }\r\n  \r\n    private _currentStatusValues$: BehaviorSubject<LocationCurrentStatus[]>;\r\n    private _pinStates: BehaviorSubject<locationStatusLookup>;\r\n  \r\n    public get pinStates$() {\r\n      return this._pinStates as Observable<locationStatusLookup>;\r\n    }\r\n  \r\n    private _parameterValues$: BehaviorSubject<Room[]>;\r\n    public get parameterValues$() {\r\n      return this._parameterValues$ as Observable<Room[]>;\r\n    }\r\n  \r\n    private _timelineChartData$: Subject<TimelineChartData>;\r\n    public get timelineChartData$() {\r\n      return this._timelineChartData$ as Observable<TimelineChartData>;\r\n    }\r\n  \r\n    private _svgMapBackgroundImageUrl$: Subject<string>;\r\n    public get svgMapBackgroundImageUrl$() {\r\n      return this._svgMapBackgroundImageUrl$ as Observable<string>;\r\n    }\r\n  \r\n    private _selectedPin$: Subject<string>;\r\n    public get selectedPin$() {\r\n      return this._selectedPin$ as Observable<string>;\r\n    }\r\n  \r\n    private _hoveredPin$: Subject<string>;\r\n    public get hoveredPin$() {\r\n      return this._hoveredPin$ as Observable<string>;\r\n    }\r\n  \r\n    private _hoveredTimelineLabel$: Subject<string>;\r\n    public get hoveredTimelineLabel$() {\r\n      return this._hoveredTimelineLabel$ as Observable<string>;\r\n    }\r\n  \r\n    private _selectedRoomInfo$: Subject<roomInfoLookup>;\r\n    public get selectedRoomInfo$() {\r\n      return this._selectedRoomInfo$ as Observable<roomInfoLookup>;\r\n    }\r\n  \r\n    public setSelectedPin(pinName: string) {\r\n      this._selectedPin$.next(pinName);\r\n    }\r\n  \r\n    public setHoveredPin(pinName: string) {\r\n      this._hoveredPin$.next(pinName);\r\n    }\r\n  \r\n    public setHoveredTimelineLabel(label: string) {\r\n      this._hoveredTimelineLabel$.next(label);\r\n    }\r\n  \r\n    private _apfLimits$: BehaviorSubject<apfLimitsLookup>;\r\n    public get apfLimits$() {\r\n      return this._apfLimits$ as Observable<apfLimitsLookup>;\r\n    }\r\n  \r\n    private statusColor = (statusVal: number) => {\r\n      switch (statusVal) {\r\n        case 0:\r\n          return 'green';\r\n        case 1:\r\n          return 'gray';\r\n        case 2:\r\n          return 'yellow';\r\n        case 3:\r\n          return 'red';\r\n        default:\r\n          return 'lightgray';\r\n      }\r\n    };\r\n  \r\n    private chillerStatusLabel = (statusVal: number) => {\r\n      switch (statusVal) {\r\n        case 0:\r\n          return 'Within Spec';\r\n        case 1:\r\n          return 'Comm Loss';\r\n        case 2:\r\n          return 'Warning';\r\n        case 3:\r\n          return 'Alarm (out of Spec)';\r\n        default:\r\n          return '';\r\n      }\r\n    };\r\n  \r\n    public gsfGrowthByClassification$ = this.dataService\r\n      .gsfGrowthByClassification()\r\n      .pipe(\r\n        map((d: any) =>\r\n          d.map((x: any) => {\r\n            const goLiveDate = new Date(x.goLiveDate);\r\n            return [\r\n              goLiveDate,\r\n              x.cncRoomsArea + x.iso8RoomsArea + x.iso7RoomsArea,\r\n              x.criticalEnvironmentParametersCount\r\n            ];\r\n          })\r\n        )\r\n      );\r\n  \r\n    private _facilityFilterOptions$: BehaviorSubject<\r\n      { repName: string; sectionName: string; value: string }[]\r\n    >;\r\n    public get facilityFilterOptions$() {\r\n      return this._facilityFilterOptions$ as Observable<\r\n        { repName: string; sectionName: string; value: string }[]\r\n      >;\r\n    }\r\n  }\r\n  ",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "dataService",
                        "type": "DataService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "piWebApiService",
                        "type": "PiWebApiService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 68,
                "jsdoctags": [
                    {
                        "name": "dataService",
                        "type": "DataService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "piWebApiService",
                        "type": "PiWebApiService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "piDataFilter$": {
                    "name": "piDataFilter$",
                    "getSignature": {
                        "name": "piDataFilter$",
                        "type": "",
                        "returnType": "",
                        "line": 357
                    }
                },
                "isFacilityAll$": {
                    "name": "isFacilityAll$",
                    "getSignature": {
                        "name": "isFacilityAll$",
                        "type": "",
                        "returnType": "",
                        "line": 361
                    }
                },
                "svgMap$": {
                    "name": "svgMap$",
                    "getSignature": {
                        "name": "svgMap$",
                        "type": "",
                        "returnType": "",
                        "line": 370
                    }
                },
                "pinStates$": {
                    "name": "pinStates$",
                    "getSignature": {
                        "name": "pinStates$",
                        "type": "",
                        "returnType": "",
                        "line": 377
                    }
                },
                "parameterValues$": {
                    "name": "parameterValues$",
                    "getSignature": {
                        "name": "parameterValues$",
                        "type": "",
                        "returnType": "",
                        "line": 382
                    }
                },
                "timelineChartData$": {
                    "name": "timelineChartData$",
                    "getSignature": {
                        "name": "timelineChartData$",
                        "type": "",
                        "returnType": "",
                        "line": 387
                    }
                },
                "svgMapBackgroundImageUrl$": {
                    "name": "svgMapBackgroundImageUrl$",
                    "getSignature": {
                        "name": "svgMapBackgroundImageUrl$",
                        "type": "",
                        "returnType": "",
                        "line": 392
                    }
                },
                "selectedPin$": {
                    "name": "selectedPin$",
                    "getSignature": {
                        "name": "selectedPin$",
                        "type": "",
                        "returnType": "",
                        "line": 397
                    }
                },
                "hoveredPin$": {
                    "name": "hoveredPin$",
                    "getSignature": {
                        "name": "hoveredPin$",
                        "type": "",
                        "returnType": "",
                        "line": 402
                    }
                },
                "hoveredTimelineLabel$": {
                    "name": "hoveredTimelineLabel$",
                    "getSignature": {
                        "name": "hoveredTimelineLabel$",
                        "type": "",
                        "returnType": "",
                        "line": 407
                    }
                },
                "selectedRoomInfo$": {
                    "name": "selectedRoomInfo$",
                    "getSignature": {
                        "name": "selectedRoomInfo$",
                        "type": "",
                        "returnType": "",
                        "line": 412
                    }
                },
                "apfLimits$": {
                    "name": "apfLimits$",
                    "getSignature": {
                        "name": "apfLimits$",
                        "type": "",
                        "returnType": "",
                        "line": 429
                    }
                },
                "facilityFilterOptions$": {
                    "name": "facilityFilterOptions$",
                    "getSignature": {
                        "name": "facilityFilterOptions$",
                        "type": "",
                        "returnType": "",
                        "line": 481
                    }
                }
            },
            "type": "injectable"
        },
        {
            "name": "PiWebApiService",
            "id": "injectable-PiWebApiService-6e9fd99b4b668f15e9407395c92665e4e6c2f81e2cb8e0b0cd49bbb0b2945fe4a957fbbb4cac59dff89a37b22f20c0c6ecbdb6f1e4874c40a108b8fa9e40b6f7",
            "file": "src/app/api/pi-webapi.service.ts",
            "properties": [
                {
                    "name": "HEADERS",
                    "defaultValue": "{ withCredentials: true, accept: 'text/json' }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Object",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methods": [
                {
                    "name": "apfLimits",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<any[]>",
                    "typeParameters": [],
                    "line": 654,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "extractStatus",
                    "args": [
                        {
                            "name": "item",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "LocationCurrentStatus",
                    "typeParameters": [],
                    "line": 330,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "facilityAlltimelineData",
                    "args": [
                        {
                            "name": "portfolioId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "startDate",
                            "type": "Date",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "endDate",
                            "type": "Date",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "interval",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<FacilityTimeSeriesData[]>",
                    "typeParameters": [],
                    "line": 249,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "portfolioId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "startDate",
                            "type": "Date",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "endDate",
                            "type": "Date",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "interval",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "facilityCurrentCompositeData",
                    "args": [
                        {
                            "name": "facility",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<LocationCurrentStatus[]>",
                    "typeParameters": [],
                    "line": 352,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "facility",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "facilityCurrentDpData",
                    "args": [
                        {
                            "name": "facility",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<LocationCurrentStatus[]>",
                    "typeParameters": [],
                    "line": 400,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "facility",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "facilityCurrentSpecificAttributeData",
                    "args": [
                        {
                            "name": "facility",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "status",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<LocationCurrentStatus[]>",
                    "typeParameters": [],
                    "line": 471,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "facility",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "status",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "facilityCurrentStatusData",
                    "args": [
                        {
                            "name": "facility",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "status",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<LocationCurrentStatus[]>",
                    "typeParameters": [],
                    "line": 532,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "facility",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "status",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "get",
                    "args": [
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [
                        "T"
                    ],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "post",
                    "args": [
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "body",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [
                        "T"
                    ],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "body",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "roomCurrentAttributeData",
                    "args": [
                        {
                            "name": "facility",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "roomFormattedName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<LocationCurrentStatus[]>",
                    "typeParameters": [],
                    "line": 576,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "facility",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "roomFormattedName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "roomCurrentAttributeDataDP",
                    "args": [
                        {
                            "name": "facility",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "room",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "dpRoom",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 545,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "facility",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "room",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "dpRoom",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "timelineData",
                    "args": [
                        {
                            "name": "facility",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "attr",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "startDate",
                            "type": "Date",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "endDate",
                            "type": "Date",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "interval",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<LocationTimeSeriesData[]>",
                    "typeParameters": [],
                    "line": 234,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "facility",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "attr",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "startDate",
                            "type": "Date",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "endDate",
                            "type": "Date",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "interval",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "timelineDataComposite",
                    "args": [
                        {
                            "name": "facility",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "startDate",
                            "type": "Date",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "endDate",
                            "type": "Date",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "interval",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<{}>",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "facility",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "startDate",
                            "type": "Date",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "endDate",
                            "type": "Date",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "interval",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "timelineDataDp",
                    "args": [
                        {
                            "name": "facility",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "startDate",
                            "type": "Date",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "endDate",
                            "type": "Date",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "interval",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<LocationTimeSeriesData[]>",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "facility",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "startDate",
                            "type": "Date",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "endDate",
                            "type": "Date",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "interval",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "timelineDataNonDp",
                    "args": [
                        {
                            "name": "facility",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "attr",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "startDate",
                            "type": "Date",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "endDate",
                            "type": "Date",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "interval",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<LocationTimeSeriesData[]>",
                    "typeParameters": [],
                    "line": 169,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "facility",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "attr",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "startDate",
                            "type": "Date",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "endDate",
                            "type": "Date",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "interval",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import {\r\n  FacilityTimeSeriesData,\r\n  LocationCurrentStatus,\r\n  LocationTimeSeriesData,\r\n  Room,\r\n  RoomTimeSeriesData,\r\n} from './models';\r\nimport { Observable, map, of } from 'rxjs'\r\n\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PiWebApiService {\r\n  constructor(private http: HttpClient) { }\r\n\r\n  private HEADERS: Object = { withCredentials: true, accept: 'text/json' };\r\n\r\n  private get<T>(url: string) {\r\n    return this.http.get<T>(`${environment.piWebApi}/${url}`, this.HEADERS);\r\n  }\r\n\r\n  private post<T>(url: string, body: any) {\r\n    return this.http.post<T>(`${environment.piWebApi}/${url}`, body, this.HEADERS);\r\n  }\r\n\r\n  timelineDataComposite(\r\n    facility: string,\r\n    startDate: Date,\r\n    endDate: Date,\r\n    interval: number) {\r\n    const postBody = {\r\n      \"GetFacilityId\": {\r\n        \"Method\": \"GET\",\r\n        \"Resource\": `${environment.piWebApi}/elements?path=\\\\\\\\ORF-COGENAF\\\\cGMP\\\\cGMP\\\\${facility}`\r\n      },\r\n      \"GetRooms\": {\r\n        \"Method\": \"GET\",\r\n        \"Resource\": `${environment.piWebApi}/elements/{0}/elements`,\r\n\r\n        \"ParentIds\": [\r\n          \"GetFacilityId\"\r\n        ],\r\n        \"Parameters\": [\r\n          \"$.GetFacilityId.Content.WebId\"\r\n        ]\r\n      },\r\n\r\n      \"GetTimeline\": {\r\n        \"Method\": \"GET\",\r\n        \"ParentIds\": [\"GetRooms\"],\r\n        \"RequestTemplate\": {\r\n          \"Resource\": `${environment.piWebApi}/streamsets/{0}/interpolated?startTime=${startDate.toISOString()}&endTime=${endDate.toISOString()}&interval=${interval}m&nameFilter=Status`\r\n        },\r\n        \"Parameters\": [\r\n          \"$.GetRooms.Content.Items[*].WebId\"\r\n        ]\r\n\r\n      }\r\n    }\r\n    const roomTimelines = this.post<any>(\r\n      `batch`, postBody\r\n    ).pipe(map(x => {\r\n      const roomData = x.GetTimeline.Content.Items.map((d: any) => {\r\n        const data = d.Content.Items[0];\r\n        const roomNumber = data.Path.split('|')[0].split('\\\\').slice(-1)[0];\r\n        const room = { roomNumber, roomName: '', sq: 0 }  // TODO\r\n        return { location: room, tag: data.Path, points: data.Items.map((itm: any) => ({ timestamp: new Date(itm.Timestamp), numeric_value: itm.Value })) };\r\n      });\r\n      return roomData;\r\n    }));\r\n\r\n    return roomTimelines as Observable<LocationTimeSeriesData<Room>[]>;\r\n  }\r\n\r\n  timelineDataDp(\r\n    facility: string,\r\n    startDate: Date,\r\n    endDate: Date,\r\n    interval: number\r\n  ): Observable<LocationTimeSeriesData<Room>[]> {\r\n\r\n    const postBody = {\r\n      \"GetFacilityId\": {\r\n        \"Method\": \"GET\",\r\n        \"Resource\": `${environment.piWebApi}/elements?path=\\\\\\\\ORF-COGENAF\\\\cGMP\\\\cGMP\\\\${facility}`\r\n      },\r\n      \"GetRooms\": {\r\n        \"Method\": \"GET\",\r\n        \"Resource\": `${environment.piWebApi}/elements/{0}/elements`,\r\n\r\n        \"ParentIds\": [\r\n          \"GetFacilityId\"\r\n        ],\r\n        \"Parameters\": [\r\n          \"$.GetFacilityId.Content.WebId\"\r\n        ]\r\n      },\r\n\r\n      \"GetDPRooms\": {\r\n        \"Method\": \"GET\",\r\n        \"ParentIds\": [\"GetRooms\"],\r\n        \"RequestTemplate\": {\r\n          \"Resource\": `${environment.piWebApi}/elements/{0}/elements`\r\n        },\r\n        \"Parameters\": [\r\n          \"$.GetRooms.Content.Items[*].WebId\"\r\n        ]\r\n      },\r\n\r\n      \"GetDPRoomsDP\": {\r\n        \"Method\": \"GET\",\r\n        \"ParentIds\": [\"GetDPRooms\"],\r\n        \"RequestTemplate\": {\r\n          \"Resource\": \"https://orf-cogenaf.ors.nih.gov/piwebapi/elements/{0}/attributes?nameFilter=DP\"\r\n        },\r\n        \"Parameters\": [\r\n          \"$.GetDPRooms.Content.Items[*].Content.Items[*].WebId\"\r\n        ]\r\n      },\r\n\r\n      \"GetTimeline\": {\r\n        \"Method\": \"GET\",\r\n        \"ParentIds\": [\"GetDPRoomsDP\"],\r\n        \"RequestTemplate\": {\r\n          \"Resource\": `${environment.piWebApi}/streamsets/{0}/interpolated?startTime=${startDate.toISOString()}&endTime=${endDate.toISOString()}&interval=${interval}m&nameFilter=Status`\r\n        },\r\n        \"Parameters\": [\r\n          \"$.GetDPRoomsDP.Content.Items[*].Content.Items[0].WebId\"\r\n        ]\r\n\r\n      }\r\n\r\n    }\r\n\r\n    const roomTimelines = this.post<any>(\r\n      `batch`, postBody\r\n    ).pipe(map(x => {\r\n      const roomData = [];\r\n      const roomNumbers: { [roomNumber: string]: boolean } = {}\r\n      for (const itm of x.GetTimeline.Content.Items) {\r\n        const data = itm.Content.Items[0];\r\n        const roomNumber = data.Path.split('|')[0].split('\\\\').slice(-1)[0];\r\n        if (!roomNumbers[roomNumber]) {\r\n          roomNumbers[roomNumber] = true;\r\n          const room = { roomNumber, roomName: '', sq: 0 }  // TODO\r\n          roomData.push({\r\n            location: room,\r\n            tag: data.Path,\r\n            points: data.Items.map((itm: any) => ({ timestamp: new Date(itm.Timestamp), numeric_value: itm.Value }))\r\n          });\r\n        }\r\n      }\r\n      return roomData;\r\n      // const roomData = x.GetTimeline.Content.Items.map((d:any)=>{ \r\n      //   const data = d.Content.Items[0]; \r\n      //   const roomNumber = data.Path.split('|')[0].split('\\\\').slice(-1)[0]; \r\n      //   const room = { roomNumber, roomName:'', sq:0 }  // TODO\r\n      //   return {location:room, tag:data.Path, points:data.Items.map((itm:any)=>({timestamp:new Date(itm.Timestamp),numeric_value:itm.Value}))};});\r\n      // return roomData;\r\n    }));\r\n\r\n    return roomTimelines as Observable<LocationTimeSeriesData<Room>[]>;\r\n  }\r\n\r\n  timelineDataNonDp(\r\n    facility: string,\r\n    attr: string,\r\n    startDate: Date,\r\n    endDate: Date,\r\n    interval: number\r\n  ): Observable<LocationTimeSeriesData<Room>[]> {\r\n\r\n    const postBody = {\r\n      \"GetFacilityId\": {\r\n        \"Method\": \"GET\",\r\n        \"Resource\": `${environment.piWebApi}/elements?path=\\\\\\\\${environment.piServer}\\\\cGMP\\\\cGMP\\\\${facility}`\r\n      },\r\n      \"GetRooms\": {\r\n        \"Method\": \"GET\",\r\n        \"Resource\": `${environment.piWebApi}/elements/{0}/elements`,\r\n\r\n        \"ParentIds\": [\r\n          \"GetFacilityId\"\r\n        ],\r\n        \"Parameters\": [\r\n          \"$.GetFacilityId.Content.WebId\"\r\n        ]\r\n      },\r\n      \"GetStatus\": {\r\n        \"Method\": \"GET\",\r\n\r\n        \"ParentIds\": [\"GetRooms\"],\r\n\r\n        \"RequestTemplate\": {\r\n          \"Resource\": `${environment.piWebApi}/attributes?path=\\\\\\\\${environment.piServer}\\\\cGMP\\\\cGMP\\\\${facility}\\\\{0}|${attr}`\r\n        },\r\n\r\n        \"Parameters\": [\r\n          \"$.GetRooms.Content.Items[*].Name\"\r\n        ]\r\n      },\r\n      \"GetTimeline\": {\r\n        \"Method\": \"GET\",\r\n        \"ParentIds\": [\"GetStatus\"],\r\n        \"RequestTemplate\": {\r\n          \"Resource\": `${environment.piWebApi}/streamsets/{0}/interpolated?startTime=${startDate.toISOString()}&endTime=${endDate.toISOString()}&interval=${interval}m&nameFilter=Status`\r\n        },\r\n        \"Parameters\": [\r\n          \"$.GetStatus.Content.Items[*].Content.WebId\"\r\n        ]\r\n\r\n      }\r\n    };\r\n\r\n    const roomTimelines = this.post<any>(\r\n      `batch`, postBody\r\n    ).pipe(map(x => {\r\n      const roomData = x.GetTimeline.Content.Items.map((d: any) => {\r\n        const data = d.Content.Items[0];\r\n        const roomNumber = data.Path.split('|')[0].split('\\\\').slice(-1)[0];\r\n        const room = { roomNumber, roomName: '', sq: 0 }  // TODO\r\n        return { location: room, tag: data.Path, points: data.Items.map((itm: any) => ({ timestamp: new Date(itm.Timestamp), numeric_value: itm.Value })) };\r\n      });\r\n      return roomData;\r\n    }));\r\n\r\n    return roomTimelines as Observable<LocationTimeSeriesData<Room>[]>;\r\n  }\r\n\r\n  timelineData(\r\n    facility: string,\r\n    attr: string,\r\n    startDate: Date,\r\n    endDate: Date,\r\n    interval: number\r\n  ): Observable<LocationTimeSeriesData<Room>[]> {\r\n    const attrLower = attr.toLowerCase();\r\n    return attrLower === 'dp' ?\r\n      this.timelineDataDp(facility, startDate, endDate, interval) :\r\n      attrLower === 'sum all' ?\r\n        this.timelineDataComposite(facility, startDate, endDate, interval) :\r\n        this.timelineDataNonDp(facility, attr, startDate, endDate, interval);\r\n  }\r\n\r\n  facilityAlltimelineData(\r\n    portfolioId: string,\r\n    startDate: Date,\r\n    endDate: Date,\r\n    interval: number\r\n  ):Observable<FacilityTimeSeriesData[]> {\r\n\r\n    const postBody = {\r\n      \"cgmp\": {\r\n        \"Method\": \"GET\",\r\n        \"Resource\": \"https://orf-cogenaf.ors.nih.gov/piwebapi/elements?path=\\\\\\\\ORF-COGENAF\\\\cGMP\\\\cGMP\"\r\n      },\r\n      \"facilities\": {\r\n        \"Method\": \"GET\",\r\n        \"Resource\":\"https://orf-cogenaf.ors.nih.gov/piwebapi/elements/{0}/elements\",\r\n        \"ParentIds\":[\"cgmp\"],\r\n        \"Parameters\":[\"$.cgmp.Content.WebId\"]\r\n      },\r\n    \r\n      \"timelines\": {\r\n        \"Method\": \"GET\",\r\n        \"ParentIds\": [\"facilities\"],\r\n    \r\n        \"RequestTemplate\": {\r\n          \"Resource\":\"https://orf-cogenaf.ors.nih.gov/piwebapi/streamsets/{0}/interpolated?startTime=*-2d&endTime=*&interval=60m&nameFilter=facility_status_check\"\r\n        },\r\n        \"Parameters\":[\"$.facilities.Content.Items[*].WebId\"]\r\n      }\r\n    };\r\n\r\n    const portfolioFacilities:{[portfolioId:string]:string[]} = {\r\n      CC: ['PET_1','PET_3','2J','E_TER','DLM_SL','IIVAU'],\r\n      CCE: ['2J','E_TER'],\r\n      CCPharmacy: ['IIVAU','P_IVAU'],\r\n      CCOther: ['PET_1','PET_3','DLM_SL'],\r\n      NCI:['VVF','HPP','T30','Tr1','Tr2'],\r\n      NIAID:[]\r\n    }\r\n\r\n\r\n    const timelines = this.post<any>(\r\n      `batch`, postBody\r\n    ).pipe(map(x => {\r\n      const outerItems = x.timelines.Content.Items as any[];\r\n      const facilityChecks = outerItems.filter(y=>y.Content.Items.some(Boolean)).map((y:any)=>y.Content.Items[0]);\r\n      const timeSeriesData = facilityChecks.map((y:any)=>{\r\n        try {\r\n          const path = y.Path;   //'\\\\\\\\ORF-COGENAF\\\\cGMP\\\\cGMP\\\\2J|Facility_Status_Check'\r\n          const i = path.indexOf('|');\r\n          const elementPath = path.substring(0, i);\r\n          const facilityName = elementPath.split('\\\\').slice(-1)[0];\r\n          const points = (y.Items || []).map((z:any)=>{\r\n            return {\r\n              numeric_value:z.Value,\r\n              timestamp:new Date(z.Timestamp).valueOf()\r\n            }\r\n          })\r\n          return {\r\n            facility: {\r\n              facilityName\r\n            },\r\n            points,\r\n            tag:elementPath\r\n          }\r\n        }\r\n        catch(e){\r\n          console.log(e);\r\n          return {} as FacilityTimeSeriesData;\r\n        }\r\n\r\n      });\r\n      const chosenFacilities = portfolioFacilities[portfolioId];\r\n      const facilityTimeSeriesData = timeSeriesData.filter(y=>chosenFacilities.some(z=>z === y.facility.facilityName))\r\n      return facilityTimeSeriesData as FacilityTimeSeriesData[];\r\n    }));\r\n\r\n\r\n    return timelines;\r\n  }\r\n\r\n\r\n  private extractStatus(item: any): LocationCurrentStatus {\r\n    //const item = outItem.Content.Items[0];\r\n    const path = item.Path;\r\n    const valueObj = item.Value;\r\n    const i = path.indexOf('|');\r\n    const elementPath = path.substring(0, i);\r\n    const attrPath = path.substring(i + 1);\r\n    const room = elementPath.split('\\\\').slice(-1)[0];\r\n    const statusName = attrPath.split('|')[0];\r\n    const value = valueObj.Value;\r\n    const timestamp = new Date(valueObj.Timestamp).valueOf();\r\n    const attribute = statusName == 'Status' ? 'Composite' : statusName; // as ('Composite' | 'Temp' | 'Hum' | 'Airx' | 'DP')\r\n    return {\r\n      locationName: room,\r\n      attribute: attribute,\r\n      statusPoint: {\r\n        timestamp,\r\n        numeric_value: value\r\n      }\r\n    };\r\n  }\r\n\r\n  facilityCurrentCompositeData(facility:string): Observable<LocationCurrentStatus[]> {\r\n    const postBody = {\r\n      \"GetFacilityId\": {\r\n        \"Method\": \"GET\",\r\n        \"Resource\": `${environment.piWebApi}/elements?path=\\\\\\\\ORF-COGENAF\\\\cGMP\\\\cGMP\\\\${facility}`\r\n      },\r\n\r\n      \"GetRooms\": {\r\n        \"Method\": \"GET\",\r\n        \"Resource\": `${environment.piWebApi}/elements/{0}/elements`,\r\n\r\n        \"ParentIds\": [\r\n          \"GetFacilityId\"\r\n        ],\r\n        \"Parameters\": [\r\n          \"$.GetFacilityId.Content.WebId\"\r\n        ]\r\n      },\r\n\r\n      \"GetCompositeStatus\": {\r\n        \"Method\": \"GET\",\r\n\r\n        \"ParentIds\": [\"GetRooms\"],\r\n\r\n        \"RequestTemplate\": {\r\n          \"Resource\": `${environment.piWebApi}/streamsets/{0}/value?nameFilter=Status`\r\n        },\r\n\r\n        \"Parameters\": [\r\n          \"$.GetRooms.Content.Items[*].WebId\"\r\n        ]\r\n      }\r\n    }\r\n\r\n    const currentStatuses = this.post<any>(\r\n      `batch`, postBody\r\n    ).pipe(map(x => {\r\n\r\n      const outerCompositeItems = x.GetCompositeStatus.Content.Items;\r\n      const innerCompositeItems = outerCompositeItems.map((item: any) => this.extractStatus(item.Content.Items[0]));\r\n\r\n      return innerCompositeItems;\r\n\r\n    }));\r\n\r\n    return currentStatuses;\r\n  }\r\n\r\n  facilityCurrentDpData(facility:string): Observable<LocationCurrentStatus[]> {\r\n    const postBody = {\r\n      \"GetFacilityId\": {\r\n        \"Method\": \"GET\",\r\n        \"Resource\": `${environment.piWebApi}/elements?path=\\\\\\\\ORF-COGENAF\\\\cGMP\\\\cGMP\\\\${facility}`\r\n      },\r\n\r\n      \"GetRooms\": {\r\n        \"Method\": \"GET\",\r\n        \"Resource\": `${environment.piWebApi}/elements/{0}/elements`,\r\n\r\n        \"ParentIds\": [\r\n          \"GetFacilityId\"\r\n        ],\r\n        \"Parameters\": [\r\n          \"$.GetFacilityId.Content.WebId\"\r\n        ]\r\n      },\r\n\r\n      \"GetDPRooms\": {\r\n        \"Method\": \"GET\",\r\n        \"ParentIds\": [\"GetRooms\"],\r\n        \"RequestTemplate\": {\r\n          \"Resource\": \"https://orf-cogenaf.ors.nih.gov/piwebapi/elements/{0}/elements\"\r\n        },\r\n        \"Parameters\": [\r\n          \"$.GetRooms.Content.Items[*].WebId\"\r\n        ]\r\n      },\r\n\r\n      \"GetDPRoomsDP\": {\r\n        \"Method\": \"GET\",\r\n        \"ParentIds\": [\"GetDPRooms\"],\r\n        \"RequestTemplate\": {\r\n          \"Resource\": \"https://orf-cogenaf.ors.nih.gov/piwebapi/elements/{0}/attributes?nameFilter=DP\"\r\n        },\r\n        \"Parameters\": [\r\n          \"$.GetDPRooms.Content.Items[*].Content.Items[*].WebId\"\r\n        ]\r\n      },\r\n\r\n      \"GetDPStatus\": {\r\n        \"Method\": \"GET\",\r\n\r\n        \"ParentIds\": [\"GetDPRoomsDP\"],\r\n\r\n        \"RequestTemplate\": {\r\n          \"Resource\": \"https://orf-cogenaf.ors.nih.gov/piwebapi/streamsets/{0}/value?nameFilter=Status\"\r\n        },\r\n\r\n        \"Parameters\": [\r\n          \"$.GetDPRoomsDP.Content.Items[*].Content.Items[*].WebId\"\r\n        ]\r\n      }\r\n\r\n    }\r\n\r\n    const currentStatuses = this.post<any>(\r\n      `batch`, postBody\r\n    ).pipe(map(x => {\r\n\r\n      const outerDpItems = x.GetDPStatus.Content.Items || [];\r\n      const innerDpItems = outerDpItems.map((item: any) => this.extractStatus(item.Content.Items[0]));\r\n\r\n      return innerDpItems\r\n\r\n    }));\r\n\r\n    return currentStatuses;\r\n  }\r\n  \r\n  facilityCurrentSpecificAttributeData(facility:string, status:string): Observable<LocationCurrentStatus[]> {\r\n    const postBody = {\r\n      \"GetFacilityId\": {\r\n        \"Method\": \"GET\",\r\n        \"Resource\": `${environment.piWebApi}/elements?path=\\\\\\\\ORF-COGENAF\\\\cGMP\\\\cGMP\\\\${facility}`\r\n      },\r\n      \r\n      \"GetRooms\": {\r\n        \"Method\": \"GET\",\r\n        \"Resource\": `${environment.piWebApi}/elements/{0}/elements`,\r\n    \r\n        \"ParentIds\": [\r\n                     \"GetFacilityId\"\r\n            ],\r\n        \"Parameters\": [\r\n                     \"$.GetFacilityId.Content.WebId\"\r\n            ]\r\n      },\r\n      \r\n      \"GetAttributes\": {\r\n        \"Method\": \"GET\",\r\n    \r\n        \"ParentIds\":[\"GetRooms\"],\r\n        \r\n        \"RequestTemplate\":{\r\n          \"Resource\": `${environment.piWebApi}/elements/{0}/attributes?nameFilter=${status}`\r\n          },\r\n        \r\n        \"Parameters\":[\r\n          \"$.GetRooms.Content.Items[*].WebId\"\r\n          ]\r\n      },\r\n      \r\n      \"GetAttributeStatus\": {\r\n        \"Method\": \"GET\",\r\n        \"ParentIds\":[\"GetAttributes\"],\r\n        \"RequestTemplate\":{\r\n          \"Resource\": `${environment.piWebApi}/streamsets/{0}/value?nameFilter=Status`\r\n        },\r\n        \"Parameters\":[\r\n          \"$.GetAttributes.Content.Items[*].Content.Items[*].WebId\"\r\n        ]\r\n      }\r\n    }\r\n      \r\n      const currentStatuses = this.post<any>(\r\n        `batch`, postBody\r\n      ).pipe(map(x => {\r\n  \r\n        const outerItems = x.GetAttributeStatus.Content.Items || [];\r\n        const innerItems = outerItems.map((item: any) => this.extractStatus(item.Content.Items[0]));\r\n  \r\n        return innerItems\r\n  \r\n      }));\r\n\r\n      return currentStatuses;\r\n    \r\n  }\r\n  \r\n\r\n  facilityCurrentStatusData(facility: string, status:string): Observable<LocationCurrentStatus[]> {\r\n    const statusLower = status.toLowerCase();\r\n    \r\n    if(statusLower === 'composite' || statusLower === 'sum all') {\r\n      return this.facilityCurrentCompositeData(facility);\r\n    }\r\n    \r\n    if(statusLower === 'dp') {\r\n      return this.facilityCurrentDpData(facility); \r\n    }\r\n    return this.facilityCurrentSpecificAttributeData(facility, status);\r\n  }\r\n\r\n  roomCurrentAttributeDataDP(facility: string, room: string, dpRoom: string) {\r\n    const postBody =\r\n    {\r\n      \"GetRoomDP\": {\r\n        \"Method\": \"GET\",\r\n        \"Resource\": `${environment.piWebApi}/attributes?path=\\\\\\\\ORF-COGENAF\\\\cGMP\\\\cGMP\\\\${facility}\\\\${room}\\\\${dpRoom}|DP`\r\n      },\r\n\r\n      \"GetDPStatus\": {\r\n        \"Method\": \"GET\",\r\n        \"Resource\": `${environment.piWebApi}/streamsets/{0}/value?nameFilter=Status`,\r\n        \"ParentIds\": [\r\n          \"GetRoomDP\"\r\n        ],\r\n        \"Parameters\": [\r\n          \"$.GetRoomDP.Content.WebId\"\r\n        ]\r\n      }\r\n    }\r\n\r\n    const currentStatus = this.post<any>(\r\n      `batch`, postBody\r\n    ).pipe(map(x => {\r\n      const item = x.GetDPStatus.Content.Items[0];\r\n      const status = this.extractStatus(item);\r\n      return status;\r\n    }));\r\n\r\n    return currentStatus;\r\n  }\r\n\r\n  roomCurrentAttributeData(facility: string, roomFormattedName: string): Observable<LocationCurrentStatus[]> {\r\n\r\n    if(roomFormattedName.toLowerCase().indexOf('_dp')> 0){\r\n      return of([{\r\n          locationName: roomFormattedName,\r\n          attribute: 'DP',\r\n          statusPoint: {\r\n            timestamp:0,\r\n            numeric_value: 0\r\n          }\r\n      }]);\r\n    }\r\n    \r\n    const postBody = {\r\n      \"GetRoomId\": {\r\n        \"Method\": \"GET\",\r\n        \"Resource\": `${environment.piWebApi}/elements?path=\\\\\\\\ORF-COGENAF\\\\cGMP\\\\cGMP\\\\${facility}\\\\${roomFormattedName}`\r\n      },\r\n\r\n      \"GetCompositeStatus\": {\r\n        \"Method\": \"GET\",\r\n\r\n        \"ParentIds\": [\"GetRoomId\"],\r\n\r\n        \"Resource\": `${environment.piWebApi}/streamsets/{0}/value?nameFilter=Status`,\r\n\r\n        \"Parameters\": [\r\n          \"$.GetRoomId.Content.WebId\"\r\n        ]\r\n      },\r\n\r\n      \"GetAttributes\": {\r\n        \"Method\": \"GET\",\r\n\r\n        \"ParentIds\": [\"GetRoomId\"],\r\n\r\n\r\n        \"Resource\": `${environment.piWebApi}/elements/{0}/attributes`,\r\n\r\n        \"Parameters\": [\r\n          \"$.GetRoomId.Content.WebId\"\r\n        ]\r\n      },\r\n\r\n      \"GetAttributeStatus\": {\r\n        \"Method\": \"GET\",\r\n        \"ParentIds\": [\"GetAttributes\"],\r\n        \"RequestTemplate\": {\r\n          \"Resource\": `${environment.piWebApi}/streamsets/{0}/value?nameFilter=Status`\r\n        },\r\n        \"Parameters\": [\r\n          \"$.GetAttributes.Content.Items[*].WebId\"\r\n        ]\r\n      }\r\n\r\n    }\r\n\r\n    const currentStatuses = this.post<any>(\r\n      `batch`, postBody\r\n    ).pipe(map(x => {\r\n\r\n      const outerCompositeItems = x.GetCompositeStatus.Content.Items;\r\n      const innerCompositeItems = outerCompositeItems.map(this.extractStatus);\r\n\r\n      const outerAttributeItems = x.GetAttributeStatus.Content.Items;\r\n      const innerAttributeItems =\r\n        outerAttributeItems\r\n          .filter((y: any) => Boolean((y.Content.Items || []).length))\r\n          .map((item: any) => this.extractStatus(item.Content.Items[0]));\r\n\r\n      const allItems = innerCompositeItems.concat(innerAttributeItems);\r\n      return allItems;\r\n\r\n    }));\r\n\r\n    return currentStatuses;\r\n  }\r\n\r\n  apfLimits(): Observable<any[]> {\r\n    //return this.get<any[]>(`Timeline/ApfLimits`);\r\n    return this.get<any>('tables/F1BlL8A_6d2dm0SBrg5RJa_Z7Q01xA01cuhkmah-3rqOPBcgT1JGLUNPR0VOQUZcQ0dNUFxUQUJMRVNbQVBGX0xJTUlUU10/data')\r\n      .pipe(map(x => x.Rows));\r\n  }\r\n\r\n\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 17,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "UserService",
            "id": "injectable-UserService-589523cc4942f4e768d4e10df1f7e9ad41f18534b5766d101630e16e0ecf9989dc436161b18bbc26b930ce7daf772b8a481d0198427a9133ddd42e9e7378b4c8",
            "file": "src/app/shared/auth/user.service.ts",
            "properties": [
                {
                    "name": "_currentUser$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subject<User>",
                    "optional": false,
                    "description": "",
                    "line": 53,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methods": [
                {
                    "name": "Init",
                    "args": [
                        {
                            "name": "profile",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 55,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "profile",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "Login",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 70,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { DataService } from 'src/app/api/data.service';\r\nimport { Injectable } from '@angular/core';\r\nimport {\r\n  Observable,\r\n  ReplaySubject,\r\n  Subject,\r\n  filter,\r\n  BehaviorSubject\r\n} from 'rxjs';\r\nimport { OAuthService } from 'angular-oauth2-oidc';\r\nimport { authCodeFlowConfig } from 'src/app/auth.config';\r\n\r\ninterface User {\r\n  userid: string;\r\n  email: string;\r\n  firstname: string;\r\n  lastname: string;\r\n  name: string;\r\n  isAdmin: boolean;\r\n  roles: string[];\r\n}\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n  constructor(\r\n    private oauthService: OAuthService,\r\n    private dataService: DataService\r\n  ) {\r\n    this._currentUser$ = new ReplaySubject(1);\r\n\r\n    if (this.oauthService.hasValidAccessToken()) {\r\n      const profile = JSON.parse(window.sessionStorage.id_token_claims_obj);\r\n      //this.oauthService.loadUserProfile().then((profile:any) => {\r\n        this.dataService.currentUserRoles().subscribe((roles) => {\r\n          this._currentUser$.next({\r\n            userid: profile.userid,\r\n            email: profile.email,\r\n            firstname: profile.first_name,\r\n            lastname: profile.last_name,\r\n            name: profile.name,\r\n\r\n            isAdmin: roles.some((r) => r === 'Admin'),\r\n            roles\r\n          });\r\n        });\r\n      // },(err)=>{\r\n      //   console.error(err);\r\n      // });\r\n    }\r\n  }\r\n\r\n  private _currentUser$: Subject<User>;\r\n\r\n  public Init(profile: any) {\r\n    this.dataService.currentUserRoles().subscribe((roles) => {\r\n      this._currentUser$.next({\r\n        userid: profile.info.userid,\r\n        email: profile.info.email,\r\n        firstname: profile.info.first_name,\r\n        lastname: profile.info.last_name,\r\n        name: profile.info.name,\r\n\r\n        isAdmin: roles.some((r) => r === 'Admin'),\r\n        roles\r\n      });\r\n    });\r\n  }\r\n\r\n  public Login() {\r\n    this.oauthService.configure(authCodeFlowConfig);\r\n    this.oauthService.loadDiscoveryDocumentAndLogin();\r\n\r\n    this.oauthService.events\r\n      .pipe(filter((e) => e.type === 'token_received'))\r\n      .subscribe((_) => {\r\n        // console.debug('state', this.oauthService.state);\r\n        this.oauthService.loadUserProfile().then((profile: any) => {\r\n          this.dataService.currentUserRoles().subscribe((roles) => {\r\n            this._currentUser$.next({\r\n              userid: profile.info.userid,\r\n              email: profile.info.email,\r\n              firstname: profile.info.first_name,\r\n              lastname: profile.info.last_name,\r\n              name: profile.info.name,\r\n\r\n              isAdmin: roles.some((r) => r === 'Admin'),\r\n              roles\r\n            });\r\n          });\r\n        });\r\n        // const scopes = this.oauthService.getGrantedScopes();\r\n        // console.debug('scopes', scopes);\r\n      });\r\n  }\r\n\r\n  public get currentUser$(): Observable<User> {\r\n    return this._currentUser$ as Observable<User>;\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "oauthService",
                        "type": "OAuthService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "dataService",
                        "type": "DataService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 25,
                "jsdoctags": [
                    {
                        "name": "oauthService",
                        "type": "OAuthService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "dataService",
                        "type": "DataService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "currentUser$": {
                    "name": "currentUser$",
                    "getSignature": {
                        "name": "currentUser$",
                        "type": "",
                        "returnType": "Observable<User>",
                        "line": 97
                    }
                }
            },
            "type": "injectable"
        }
    ],
    "guards": [
        {
            "name": "AuthGuard",
            "id": "injectable-AuthGuard-5ef43b1a7ae6a12b8b435f261a18aa0df67ae2484815187061b57bffaa7e64aa28800d38d2d36d0de991033bb764787e928220017e3ddd0314b2f417c0642d30",
            "file": "src/app/shared/auth/auth.guard.ts",
            "properties": [],
            "methods": [
                {
                    "name": "canActivate",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 9,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { CanActivate, Router } from '@angular/router';\r\nimport { OAuthService } from 'angular-oauth2-oidc';\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(private router: Router, private oauthService: OAuthService) {}\r\n\r\n  canActivate() {\r\n    if (\r\n      this.oauthService.hasValidAccessToken() &&\r\n      this.oauthService.hasValidIdToken()\r\n    ) {\r\n      return true;\r\n    } else {\r\n      this.router.navigate(['/home', { login: true }]);\r\n      return false;\r\n    }\r\n  }\r\n}",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "oauthService",
                        "type": "OAuthService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 6,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "oauthService",
                        "type": "OAuthService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "guard"
        }
    ],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "ApfMonitoredRoomsChartComponent",
            "id": "component-ApfMonitoredRoomsChartComponent-ebcc06cd39af7229b3294e0d8a7d304b42a7b83224df8f0c4f19271d535a33e5deee49cae47fcba21835cc6a738f46b364481cca255006dc00b8737fa6d7f835",
            "file": "src/app/apf-monitored-rooms-chart/apf-monitored-rooms-chart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-apf-monitored-rooms-chart",
            "styleUrls": [
                "./apf-monitored-rooms-chart.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./apf-monitored-rooms-chart.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "chartData",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "any[]",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_chartData",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "chartType",
                    "defaultValue": "ChartType.AreaChart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "columnNames",
                    "defaultValue": "['Go Live Date', 'Area', 'Critical Environmental Parameters']",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "data",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 28
                }
            ],
            "methodsClass": [
                {
                    "name": "chartOptions",
                    "args": [
                        {
                            "name": "data",
                            "type": "any[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "{ isStacked: string; height: number; legend: { position: string; maxLines: number; }; seriesType: string; series: { 1: { type: string; }; }; vAxis: { minValue: number; }; hAxis: { format: string; ticks: {}; }; }",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "any[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\nimport { ChartType } from 'angular-google-charts';\r\n\r\n@Component({\r\n  selector: 'app-apf-monitored-rooms-chart',\r\n  templateUrl: './apf-monitored-rooms-chart.component.html',\r\n  styleUrls: ['./apf-monitored-rooms-chart.component.scss']\r\n})\r\nexport class ApfMonitoredRoomsChartComponent {\r\n  constructor() {}\r\n\r\n  private _chartData: any[] = [];\r\n\r\n  @Input()\r\n  get chartData(): any[] {\r\n    return this._chartData;\r\n  }\r\n  set chartData(v: any[]) {\r\n    if (v.some(Boolean)) {\r\n      this._chartData = v;\r\n      this.options = this.chartOptions(this._chartData);\r\n    }\r\n  }\r\n\r\n  chartType = ChartType.AreaChart;\r\n  columnNames = ['Go Live Date', 'Area', 'Critical Environmental Parameters'];\r\n  data: any[] = [];\r\n  options: any;\r\n\r\n  chartOptions(data: any[]) {\r\n    const ystart = new Date(data[0][0]).getFullYear();\r\n    const yend = new Date(data[data.length - 1][0]).getFullYear();\r\n    const ycount = yend - ystart + 1;\r\n    const hAxisTicks: any[] = [...Array(ycount).keys()].map(\r\n      (y) => new Date(y + ystart, 1, 1)\r\n    );\r\n\r\n    const options = {\r\n      //fullStacked\r\n      isStacked: 'absolute',\r\n      height: 300,\r\n      legend: { position: 'top', maxLines: 3 },\r\n      seriesType: 'area',\r\n      series: { 1: { type: 'line' } },\r\n      vAxis: {\r\n        minValue: 0\r\n      },\r\n      hAxis: {\r\n        format: 'yyyy',\r\n        ticks: hAxisTicks\r\n      }\r\n    };\r\n    return options;\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./apf-monitored-rooms-chart.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 9
            },
            "accessors": {
                "chartData": {
                    "name": "chartData",
                    "setSignature": {
                        "name": "chartData",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "v",
                                "type": "any[]",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 18,
                        "jsdoctags": [
                            {
                                "name": "v",
                                "type": "any[]",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "chartData",
                        "type": "[]",
                        "returnType": "any[]",
                        "line": 15
                    }
                }
            },
            "templateData": "<google-chart\r\n  style=\"width: 100%\"\r\n  [type]=\"chartType\"\r\n  [data]=\"chartData\"\r\n  [columns]=\"columnNames\"\r\n  [options]=\"options\"\r\n>\r\n</google-chart>\r\n"
        },
        {
            "name": "ApfPortfolioAllDashboardComponent",
            "id": "component-ApfPortfolioAllDashboardComponent-2c32f07342c90389479f44b0b7f732f4757c752817e88f5a1e1eb675027a68b32884d0b37fff3b308d312649bbe3cb7d74af1fa4ec0c46b90c605d320860b1ec",
            "file": "src/app/apf-portfolio-all-dashboard/apf-portfolio-all-dashboard.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "ApfPortfolioAllDashboardService"
                }
            ],
            "selector": "app-apf-portfolio-all-dashboard",
            "styleUrls": [
                "./apf-portfolio-all-dashboard.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./apf-portfolio-all-dashboard.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "chartByFacilityOptions",
                    "defaultValue": "{\r\n    pieHole: 0.5,\r\n    pieSliceText: 'none',\r\n    colors: [\r\n      // CCE\r\n      '#94762d',  // 2J\r\n      'sandybrown', // E_TER\r\n      \r\n      //CC Pharmacy\r\n      '#b5fd19', // IIVAU\r\n      \r\n      // CC Other\r\n      '#fb09bf', // Pet_1\r\n      'darkviolet', // Pet_B3\r\n      'darkmagenta', // DLM_SL\r\n      \r\n      // NCI\r\n      '#00ffff', // T30\r\n      'deepskyblue', // Tr1\r\n      'lightblue', // Tr2\r\n      'blue', // VVF\r\n      'darkblue', // Hpp\r\n      \r\n      //NIAID\r\n      '#c9363c'\r\n\r\n    ],\r\n\r\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "chartByIcOptions",
                    "defaultValue": "{\r\n    pieHole: 0.5,\r\n    pieSliceText: 'none',\r\n    colors: [\r\n      '#94762d', // CCE\r\n      '#b5fd19', // CC Pharmacy\r\n      '#fb09bf', // CC Other\r\n      '#00ffff', // NCI\r\n      '#c9363c' // NIAID \r\n    ],\r\n\r\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "service",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ApfPortfolioAllDashboardService",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ApfPortfolioAllDashboardService } from './apf-portfolio-all-dashboard.service';\r\nimport { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-apf-portfolio-all-dashboard',\r\n  templateUrl: './apf-portfolio-all-dashboard.component.html',\r\n  styleUrls: ['./apf-portfolio-all-dashboard.component.scss'],\r\n  providers: [ApfPortfolioAllDashboardService]\r\n})\r\nexport class ApfPortfolioAllDashboardComponent {\r\n  constructor(public service: ApfPortfolioAllDashboardService) { }\r\n\r\n  chartByIcOptions = {\r\n    pieHole: 0.5,\r\n    pieSliceText: 'none',\r\n    colors: [\r\n      '#94762d', // CCE\r\n      '#b5fd19', // CC Pharmacy\r\n      '#fb09bf', // CC Other\r\n      '#00ffff', // NCI\r\n      '#c9363c' // NIAID \r\n    ],\r\n\r\n  }\r\n\r\n  chartByFacilityOptions = {\r\n    pieHole: 0.5,\r\n    pieSliceText: 'none',\r\n    colors: [\r\n      // CCE\r\n      '#94762d',  // 2J\r\n      'sandybrown', // E_TER\r\n      \r\n      //CC Pharmacy\r\n      '#b5fd19', // IIVAU\r\n      \r\n      // CC Other\r\n      '#fb09bf', // Pet_1\r\n      'darkviolet', // Pet_B3\r\n      'darkmagenta', // DLM_SL\r\n      \r\n      // NCI\r\n      '#00ffff', // T30\r\n      'deepskyblue', // Tr1\r\n      'lightblue', // Tr2\r\n      'blue', // VVF\r\n      'darkblue', // Hpp\r\n      \r\n      //NIAID\r\n      '#c9363c'\r\n\r\n    ],\r\n\r\n  }\r\n}\r\n\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "// * {\r\n//     border:0px solid blue;\r\n// }\r\n\r\n.chart-label {\r\n  margin-top: -4px;\r\n  text-align: left;\r\n  font-weight: bold;\r\n  font-size: smaller;\r\n}\r\n",
                    "styleUrl": "./apf-portfolio-all-dashboard.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "service",
                        "type": "ApfPortfolioAllDashboardService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "service",
                        "type": "ApfPortfolioAllDashboardService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<div class=\"card\">\r\n  <div class=\"card-body\">\r\n    <div class=\"row\" id=\"rowTest\" style=\"border: 0px solid red\">\r\n      <div class=\"col-md-3\">\r\n        <app-apf-portfolio-all-map></app-apf-portfolio-all-map>\r\n      </div>\r\n\r\n      <div class=\"panel-center col-md-9\" style=\"border: 0px solid black\">\r\n        <div class=\"row\">\r\n          <div class=\"panel-center col-md-12\" style=\"border: 0px solid black\">\r\n            <h4 style=\"color: #b3172c\">\r\n              Aseptic Production Facilities (APF) Portfolio Web Portal\r\n            </h4>\r\n            <p>\r\n              The National Institutes of Health (NIH) APF Portfolio consists of\r\n              12 facilites, including pharmacies, radiopharmacies ...\r\n            </p>\r\n            <app-gsf-growth-by-classification-chart\r\n              [chartData]=\"(service.gsfGrowthByClassification$ | async) || []\"\r\n            >\r\n            </app-gsf-growth-by-classification-chart>\r\n            <div class=\"chart-label\">\r\n              APF Portfolio Growth Square Feet (GSF) by Area of Classification Type\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <br>\r\n\r\n        <div class=\"row\">\r\n          <div class=\"panel-center col-md-6\" style=\"border: 0px solid black\">\r\n            <app-gsf-pie-chart [chartData]=\"(service.gsfByIC$ | async) || []\" [chartOptions]=\"chartByIcOptions\">\r\n              <!-- gsfByIcData -->\r\n            </app-gsf-pie-chart>\r\n            <div class=\"chart-label\">APF Portfolio GSF by IC</div>\r\n          </div>\r\n\r\n          <div class=\"panel-center col-md-6\" style=\"border: 0px solid black\">\r\n            <app-gsf-pie-chart\r\n              [chartData]=\"(service.gsfByFacility$ | async) || []\" [chartOptions]=\"chartByFacilityOptions\"\r\n            ></app-gsf-pie-chart>\r\n            <div class=\"chart-label\">APF Portfolio GSF by Facility</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "ApfPortfolioMapComponent",
            "id": "component-ApfPortfolioMapComponent-1b862cfc1505566a298d3d0779dd5bc16ab06a3f437b7f0f65f43a9829dadc64edf2f8f02fc34e41e6ca0433ba01c6a1f566b2909636afd19ececb39632d56ac",
            "file": "src/app/apf-portfolio-all-map/apf-portfolio-all-map.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-apf-portfolio-all-map",
            "styleUrls": [
                "./apf-portfolio-all-map.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./apf-portfolio-all-map.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "tooltips",
                    "defaultValue": "{}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 28
                }
            ],
            "methodsClass": [
                {
                    "name": "mouseout",
                    "args": [
                        {
                            "name": "facilityId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 62,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "facilityId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "mouseover",
                    "args": [
                        {
                            "name": "facilityId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 58,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "facilityId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "pinClick",
                    "args": [
                        {
                            "name": "facilityId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 48,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "facilityId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\r\n  AfterViewInit,\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  OnChanges,\r\n  OnInit,\r\n  Output\r\n} from '@angular/core';\r\n\r\nimport { Router } from '@angular/router';\r\n\r\ndeclare const bootstrap: any;\r\ndeclare const $: any;\r\n\r\n@Component({\r\n  selector: 'app-apf-portfolio-all-map',\r\n  templateUrl: './apf-portfolio-all-map.component.html',\r\n  styleUrls: ['./apf-portfolio-all-map.component.scss']\r\n})\r\nexport class ApfPortfolioMapComponent implements OnInit, AfterViewInit {\r\n  constructor(private router: Router) {}\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n\r\n  tooltips: {[title: string]: any} = {};\r\n\r\n  ngAfterViewInit(): void {\r\n    const pinElems = document.querySelectorAll('#Pins_Ownership a');\r\n    pinElems.forEach((elem) => {\r\n      const title = elem.getAttribute('data-title')!;\r\n      // (elem as any).tooltip({\r\n      //   placement: 'right',\r\n      //   html: true,\r\n      //   title: '<div>' + title + '</div>'\r\n      // });\r\n      this.tooltips[title] = new bootstrap.Tooltip(elem, {\r\n        placement: 'right',\r\n        trigger:'hover',\r\n        html: true,\r\n        title: '<div>' + title + '</div>'\r\n      });\r\n    });\r\n  }\r\n  \r\n  pinClick(facilityId:number) {\r\n    console.log(\"facility: \" + facilityId);\r\n    const elem = document.getElementById(`pin_${facilityId}`)!;\r\n    const title = elem.getAttribute('data-title')!;\r\n    this.tooltips[title].hide();\r\n    // new bootstrap.Tooltip(elem).hide()\r\n    //$('#pin_' + facilityId).tooltip('hide')\r\n    this.router.navigate(['home','facility',facilityId])\r\n  }\r\n\r\n  mouseover(facilityId:number) {\r\n    \r\n  }\r\n\r\n  mouseout(facilityId:number) {\r\n    \r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "svg {\r\n  background-image: url(../../assets/images/APF-Portfolio_RevisedvMM.svg);\r\n  background-size: 100% 100%;\r\n  background-repeat: no-repeat;\r\n  max-width: 900px;\r\n  width: 90%;\r\n}\r\n\r\npath {\r\n  fill: transparent;\r\n  cursor: pointer;\r\n  transition: fill 0.2s;\r\n}\r\na:hover {\r\n  cursor: pointer;\r\n}\r\n/*test with new svg*/\r\n/*CCE Facility = brown*/\r\nsvg #Pin_Facility_2J a:hover path {\r\n  fill: rgb(180, 107, 23);\r\n}\r\n\r\nsvg #Pin_Facility_2E a:hover path {\r\n  fill: rgb(180, 107, 23);\r\n}\r\n\r\nsvg #Pin_Facility_3E a:hover path {\r\n  fill: rgb(180, 107, 23);\r\n}\r\n\r\nsvg #Pin_Facility_East_Terrace a:hover path {\r\n  fill: rgb(180, 107, 23);\r\n}\r\n\r\n/*CC Pharmacy Facility = green*/\r\nsvg #Pin_Facility_I-IVAU a:hover path {\r\n  fill: #b5fd19;\r\n}\r\n\r\nsvg #Pin_Facility_P-IVAU a:hover path {\r\n  fill: #b5fd19;\r\n}\r\n\r\n/*CC Other Facilities = fuchsia*/\r\nsvg #Pin_Facility_DLM_Image a:hover path {\r\n  fill: #fb09bf;\r\n}\r\n\r\nsvg #Pin_Facility_NMD a:hover path {\r\n  fill: #fb09bf;\r\n}\r\n\r\nsvg #Pin_Facility_PET_B3 a:hover path {\r\n  fill: #fb09bf;\r\n}\r\n\r\nsvg #Pin_Facility_PET_Radiopharm a:hover path {\r\n  fill: #fb09bf;\r\n}\r\n\r\n/*NCI Facility = blue*/\r\nsvg #Ownership_Facility_Other a:hover path {\r\n  fill: #0ff;\r\n}\r\n\r\nsvg #Pin_Facility_HPC13 a:hover path {\r\n  /*lab 7*/\r\n  fill: #0ff;\r\n}\r\n\r\nsvg #Pin_Facility_1B42 a:hover path {\r\n  fill: #0ff;\r\n}\r\n\r\nsvg #Pin_Facility_10A a:hover path {\r\n  fill: #0ff;\r\n}\r\n\r\nsvg #Pin_Facility_10B a:hover path {\r\n  fill: #0ff;\r\n}\r\n\r\n/*NIAID Facility = red*/\r\nsvg #Ownership_Facility_NIAID a:hover path {\r\n  /*lab 2*/\r\n  fill: #c9363c;\r\n}\r\n\r\n.st1 {\r\n  fill: #e1e1e1;\r\n}\r\n\r\n.st2 {\r\n  fill: #fbb03b;\r\n}\r\n\r\n.st3 {\r\n  fill-opacity: 0.25;\r\n  stroke: #000;\r\n  stroke-linecap: round;\r\n  stroke-linejoin: round;\r\n}\r\n\r\n.st4 {\r\n  fill: #94762d;\r\n}\r\n\r\n.st5 {\r\n  fill: #0ff;\r\n}\r\n\r\n.st6 {\r\n  fill: #fb09bf;\r\n}\r\n\r\n.st7 {\r\n  fill: #b5fd19;\r\n}\r\n\r\n.st9 {\r\n  fill: none;\r\n}\r\n\r\n.st10 {\r\n  fill: #676767;\r\n}\r\n\r\n.st11 {\r\n  font-family: Calibri;\r\n}\r\n\r\n.st12 {\r\n  font-size: 320.8324px;\r\n}\r\n\r\n.st14 {\r\n  font-size: 213.8883px;\r\n}\r\n",
                    "styleUrl": "./apf-portfolio-all-map.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 21,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "AfterViewInit"
            ],
            "templateData": "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 7613 11828.29\">\r\n  <g id=\"Pins_Ownership\">\r\n    <g id=\"Pin_Facility_2J\">\r\n      <a\r\n        class=\"far fa-lab3\"\r\n        data-toggle=\"tooltip\"\r\n        id=\"pin_3\"\r\n        data-title=\"CC CCE 2J Cell Therapy Lab\"\r\n        data-title=\"CC CCE 2J Cell Therapy Lab\"\r\n        (click)=\"pinClick(3)\"\r\n      >\r\n        <path\r\n          class=\"st3\"\r\n          d=\"M2551.84 3649.85c-95 95-114.25 236.99-57.93 351.13l-221.41 359.26L2633 4139.9c114.09 56.13 255.89 36.82 350.8-58.09 119.28-119.28 119.28-312.68 0-431.96-119.28-119.28-312.68-119.28-431.96 0zm353.51 353.52c-75.96 75.96-199.11 75.96-275.06 0s-75.96-199.11 0-275.06 199.11-75.96 275.06 0 75.96 199.1 0 275.06z\"\r\n        />\r\n        <circle\r\n          id=\"CC_Pharmacy_2J\"\r\n          class=\"st4\"\r\n          cx=\"2767.82\"\r\n          cy=\"3865.84\"\r\n          r=\"194.5\"\r\n        />\r\n      </a>\r\n    </g>\r\n\r\n    <g id=\"Pin_Facility_3E\">\r\n      <a id=\"pin_16\"\r\n        class=\"far fa-lab4\"\r\n        data-toggle=\"tooltip\"\r\n        data-title=\"CC CCE 3T Cell Therapy Lab\"\r\n        (click)=\"pinClick(16)\"\r\n      >\r\n        <path\r\n          class=\"st3\"\r\n          d=\"M1677.88 3589.51c-95 95-114.25 236.99-57.93 351.13l-221.41 359.26 360.5-220.34c114.09 56.13 255.89 36.82 350.8-58.09 119.28-119.28 119.28-312.68 0-431.96-119.28-119.28-312.68-119.28-431.96 0zm353.51 353.52c-75.96 75.96-199.11 75.96-275.06 0-75.96-75.96-75.96-199.11 0-275.06 75.96-75.96 199.11-75.96 275.06 0s75.96 199.1 0 275.06z\"\r\n        />\r\n        <circle\r\n          id=\"CC_Pharmacy_3E\"\r\n          class=\"st4\"\r\n          cx=\"1893.86\"\r\n          cy=\"3805.5\"\r\n          r=\"194.5\"\r\n        />\r\n      </a>\r\n    </g>\r\n\r\n    <g id=\"Pin_Facility_10A\">\r\n      <a id=\"pin_13\" class=\"far fa-lab6\" data-title=\"NCI Trailer 10A\" (click)=\"pinClick(13)\">\r\n        <path\r\n          class=\"st3\"\r\n          d=\"M1568.89 3340.55c95-95 114.25-236.99 57.93-351.13l221.41-359.26-360.5 220.34c-114.09-56.13-255.89-36.82-350.8 58.09-119.28 119.28-119.28 312.68 0 431.96 119.28 119.28 312.68 119.28 431.96 0zm-353.51-353.52c75.96-75.96 199.11-75.96 275.06 0 75.96 75.96 75.96 199.11 0 275.06-75.96 75.96-199.11 75.96-275.06 0-75.96-75.95-75.96-199.1 0-275.06z\"\r\n        />\r\n        <circle\r\n          id=\"CC_Other_10A\"\r\n          class=\"st5\"\r\n          cx=\"1352.91\"\r\n          cy=\"3124.57\"\r\n          r=\"194.5\"\r\n        />\r\n      </a>\r\n    </g>\r\n\r\n    <g id=\"Pin_Facility_10B\">\r\n      <a\r\n        id=\"pin_12\"\r\n        class=\"far fa-lab5\"\r\n        data-title=\"NCI Trailer 10B\"\r\n        (click)=\"pinClick(12)\"\r\n      >\r\n        <path\r\n          class=\"st3\"\r\n          d=\"M1132.54 2073.69c95 95 236.99 114.25 351.13 57.93l359.26 221.41-220.34-360.5c56.13-114.09 36.82-255.89-58.09-350.8-119.28-119.28-312.68-119.28-431.96 0-119.28 119.28-119.28 312.68 0 431.96zm353.52-353.52c75.96 75.96 75.96 199.11 0 275.06-75.96 75.96-199.11 75.96-275.06 0-75.96-75.96-75.96-199.11 0-275.06 75.95-75.95 199.1-75.95 275.06 0z\"\r\n        />\r\n        <circle\r\n          id=\"CC_Other_10B\"\r\n          class=\"st5\"\r\n          cx=\"1348.52\"\r\n          cy=\"1857.71\"\r\n          r=\"194.5\"\r\n        />\r\n      </a>\r\n    </g>\r\n\r\n    <g id=\"Pin_Facility_PET_B3\">\r\n      <a id=\"pin_2\"\r\n        class=\"far fa-lab8\"\r\n        data-title=\"CC PET B3 Radiochemistry\"\r\n        (click)=\"pinClick(2)\"\r\n      >\r\n        <path\r\n          class=\"st3\"\r\n          d=\"M3349.62 1581.68c-95 95-114.25 236.99-57.93 351.13l-221.41 359.26 360.5-220.34c114.09 56.13 255.89 36.82 350.8-58.09 119.28-119.28 119.28-312.68 0-431.96-119.28-119.28-312.67-119.28-431.96 0zm353.52 353.52c-75.96 75.96-199.11 75.96-275.06 0-75.96-75.96-75.96-199.11 0-275.06 75.96-75.96 199.11-75.96 275.06 0 75.95 75.95 75.95 199.1 0 275.06z\"\r\n        />\r\n        <circle\r\n          id=\"NCI_Facility_PET_B3\"\r\n          class=\"st6\"\r\n          cx=\"3565.61\"\r\n          cy=\"1797.67\"\r\n          r=\"194.5\"\r\n        />\r\n      </a>\r\n    </g>\r\n\r\n    <g id=\"Pin_Facility_NMD\">\r\n      <a id=\"pin_7\"\r\n        class=\"far fa-labten\"\r\n        data-title=\"CC NMD Radiopharmacy\"\r\n        (click)=\"pinClick(7)\"\r\n      >\r\n        <path\r\n          class=\"st3\"\r\n          d=\"M3556.34 3388.81c0-134.35-86.79-248.37-207.33-289.25l-97.48-410.6-99.11 410.72c-120.36 40.98-206.98 154.9-206.98 289.13 0 168.69 136.75 305.45 305.45 305.45 168.7-.01 305.45-136.76 305.45-305.45zm-499.94 0c0-107.42 87.08-194.5 194.5-194.5s194.5 87.08 194.5 194.5-87.08 194.5-194.5 194.5-194.5-87.08-194.5-194.5z\"\r\n        />\r\n        <circle\r\n          id=\"NCI_Facility_NMD\"\r\n          class=\"st6\"\r\n          cx=\"3250.9\"\r\n          cy=\"3388.81\"\r\n          r=\"194.5\"\r\n        />\r\n      </a>\r\n    </g>\r\n\r\n    <g id=\"Pin_Facility_P-IVAU\">\r\n      <a id=\"pin_9\"\r\n        class=\"far fa-lab15\"\r\n        data-title=\"CC Pharmacy P-IVAU\"\r\n        (click)=\"pinClick(9)\" >\r\n        <path\r\n          class=\"st3\"\r\n          d=\"M6028.59 1181.75c-95 95-114.25 236.99-57.93 351.13l-221.41 359.26 360.5-220.34c114.09 56.13 255.89 36.82 350.8-58.09 119.28-119.28 119.28-312.68 0-431.96-119.28-119.28-312.67-119.28-431.96 0zm353.52 353.52c-75.96 75.96-199.11 75.96-275.06 0-75.96-75.96-75.96-199.11 0-275.06 75.96-75.96 199.11-75.96 275.06 0s75.95 199.1 0 275.06z\"\r\n        />\r\n        <circle\r\n          id=\"CCE_Facility_P-IVAU\"\r\n          class=\"st7\"\r\n          cx=\"6244.57\"\r\n          cy=\"1397.74\"\r\n          r=\"194.5\"\r\n        />\r\n      </a>\r\n    </g>\r\n\r\n    <g id=\"Pin_Facility_East_Terrace\">\r\n      <a id=\"pin_5\"\r\n        class=\"far fa-lab16\"\r\n        data-title=\"CC CCE East Terrace Modular\"\r\n        (click)=\"pinClick(5)\"\r\n      >\r\n        <path\r\n          class=\"st3\"\r\n          d=\"M5879.99 3036.92c134.35 0 248.37-86.78 289.25-207.33l410.6-97.48-410.72-99.11c-40.98-120.36-154.9-206.98-289.13-206.98-168.69 0-305.44 136.75-305.45 305.44 0 168.71 136.75 305.46 305.45 305.46zm0-499.95c107.42 0 194.5 87.08 194.5 194.5s-87.08 194.5-194.5 194.5-194.5-87.08-194.5-194.5 87.08-194.5 194.5-194.5z\"\r\n        />\r\n        <circle\r\n          id=\"CC_Pharmacy_East_Terrace\"\r\n          class=\"st4\"\r\n          cx=\"5879.99\"\r\n          cy=\"2731.47\"\r\n          r=\"194.5\"\r\n        />\r\n      </a>\r\n    </g>\r\n\r\n    <g id=\"Pin_Facility_I-IVAU\">\r\n      <a id=\"pin_8\"\r\n        class=\"far fa-ivau\"\r\n        data-toggle=\"tooltip\"\r\n        data-title=\"CC Pharmacy I-IVAU\"\r\n        (click)=\"pinClick(8)\"\r\n      >\r\n        <path\r\n          class=\"st3\"\r\n          d=\"M6046.3 3552.46c-134.36 0-248.37 86.78-289.25 207.32l-410.6 97.48 410.72 99.11c40.98 120.36 154.9 206.98 289.13 206.98 168.69 0 305.45-136.75 305.45-305.45 0-168.68-136.76-305.44-305.45-305.44zm0 499.95c-107.42 0-194.5-87.08-194.5-194.5s87.08-194.5 194.5-194.5 194.5 87.08 194.5 194.5-87.08 194.5-194.5 194.5z\"\r\n        />\r\n        <circle\r\n          id=\"CCE_Facility_I-VAU\"\r\n          class=\"st7\"\r\n          cx=\"6046.3\"\r\n          cy=\"3857.91\"\r\n          r=\"194.5\"\r\n        />\r\n      </a>\r\n    </g>\r\n\r\n    <g id=\"Pin_Facility_2E\">\r\n      <a id=\"pin_4\"\r\n        class=\"far fa-lab13\"\r\n        data-title=\"CC CCE 12 East Cell Therapy\"\r\n        (click)=\"pinClick(4)\"\r\n      >\r\n        <path\r\n          class=\"st3\"\r\n          d=\"M6124.81 4647.94c-95-95-236.99-114.25-351.13-57.93l-359.26-221.41 220.34 360.5c-56.13 114.09-36.82 255.89 58.09 350.8 119.28 119.28 312.68 119.28 431.96 0 119.29-119.28 119.29-312.68 0-431.96zm-353.51 353.51c-75.96-75.96-75.96-199.11 0-275.06 75.96-75.96 199.11-75.96 275.06 0 75.96 75.96 75.96 199.11 0 275.06-75.95 75.96-199.1 75.96-275.06 0z\"\r\n        />\r\n        <circle\r\n          id=\"CC_Pharmacy_2E\"\r\n          class=\"st4\"\r\n          cx=\"5908.83\"\r\n          cy=\"4863.92\"\r\n          r=\"194.5\"\r\n        />\r\n      </a>\r\n    </g>\r\n\r\n    <g id=\"Pin_Facility_HPC13\">\r\n      <a id=\"pin_19\"\r\n        class=\"far fa-lab7\"\r\n        data-title=\"NCI Hyperpolarized Cell Labeling Lab\"\r\n        (click)=\"pinClick(19)\"\r\n      >\r\n        <path\r\n          class=\"st3\"\r\n          d=\"M6568.1 6441.99c-95-95-236.99-114.25-351.13-57.93l-359.26-221.41 220.34 360.5c-56.13 114.09-36.82 255.89 58.09 350.8 119.28 119.28 312.68 119.28 431.96 0s119.28-312.67 0-431.96zm-353.52 353.52c-75.96-75.96-75.96-199.11 0-275.06 75.96-75.96 199.11-75.96 275.06 0s75.96 199.11 0 275.06-199.1 75.95-275.06 0z\"\r\n        />\r\n        <circle\r\n          id=\"CC_Other_HP13\"\r\n          class=\"st5\"\r\n          cx=\"6351.75\"\r\n          cy=\"6657.98\"\r\n          r=\"194.5\"\r\n        />\r\n      </a>\r\n    </g>\r\n\r\n    <g id=\"Ownership_Facility_Other\">\r\n      <a id=\"pin_11\"\r\n        class=\"far fa-labOne\"\r\n        data-title=\"NCI Surgery Branch TIL Modular\"\r\n        (click)=\"pinClick(11)\"\r\n      >\r\n        <path\r\n          class=\"st3\"\r\n          d=\"M3639.09 8304.34c-95-95-236.99-114.25-351.13-57.93L2928.7 8025l220.34 360.5c-56.13 114.09-36.82 255.89 58.09 350.8 119.28 119.28 312.68 119.28 431.96 0 119.28-119.28 119.28-312.67 0-431.96zm-353.51 353.52c-75.96-75.96-75.96-199.11 0-275.07s199.11-75.96 275.06 0c75.96 75.96 75.96 199.11 0 275.06s-199.11 75.96-275.06.01z\"\r\n        />\r\n        <circle\r\n          id=\"CC_Other_T_30\"\r\n          class=\"st5\"\r\n          cx=\"3423.11\"\r\n          cy=\"8520.32\"\r\n          r=\"194.5\"\r\n        />\r\n      </a>\r\n    </g>\r\n\r\n    <g id=\"Ownership_Facility_NIAID\">\r\n      <a id=\"pin_20\"\r\n        class=\"far fa-lab2\"\r\n        data-title=\"NIAID 29B Bioreactor Pilot Plant\"\r\n        (click)=\"pinClick(20)\"\r\n      >\r\n        <path\r\n          class=\"st3\"\r\n          d=\"M1180.85 10244.69c-95 95-114.25 236.99-57.93 351.13l-221.41 359.26 360.5-220.34c114.09 56.13 255.89 36.82 350.8-58.09 119.28-119.28 119.28-312.68 0-431.96-119.28-119.28-312.68-119.28-431.96 0zm353.51 353.51c-75.96 75.96-199.11 75.96-275.06 0-75.96-75.96-75.96-199.11 0-275.06 75.96-75.96 199.11-75.96 275.06 0 75.96 75.96 75.96 199.11 0 275.06z\"\r\n        />\r\n        <circle\r\n          cx=\"1396.83\"\r\n          cy=\"10460.67\"\r\n          r=\"194.5\"\r\n          fill=\"#c9363c\"\r\n          stroke=\"#000\"\r\n          stroke-miterlimit=\"10\"\r\n        />\r\n      </a>\r\n    </g>\r\n\r\n    <g id=\"Pin_Facility_1B42\">\r\n      <a id=\"pin_10\"\r\n        class=\"far fa-lab11\"\r\n        data-title=\"NCI Surgery Branch 1B42\"\r\n        (click)=\"pinClick(10)\"\r\n      >\r\n        <path\r\n          class=\"st3\"\r\n          d=\"M5071.5 5836.78c95-95 114.25-236.99 57.93-351.13l221.41-359.26-360.5 220.34c-114.09-56.13-255.89-36.82-350.8 58.09-119.28 119.28-119.28 312.68 0 431.96 119.28 119.28 312.68 119.28 431.96 0zm-353.51-353.52c75.96-75.96 199.11-75.96 275.06 0 75.96 75.96 75.96 199.11 0 275.06-75.96 75.96-199.11 75.96-275.06 0s-75.96-199.1 0-275.06z\"\r\n        />\r\n        <circle\r\n          id=\"CC_Other_HP13_1b42\"\r\n          class=\"st5\"\r\n          cx=\"4855.52\"\r\n          cy=\"5620.79\"\r\n          r=\"194.5\"\r\n        />\r\n      </a>\r\n    </g>\r\n\r\n    <g id=\"Pin_Facility_DLM_Image\">\r\n      <a id=\"pin_6\"\r\n        class=\"far fa-lab14\"\r\n        data-title=\"CC DLM Sterility Lab\"\r\n        (click)=\"pinClick(6)\"\r\n      >\r\n        <path\r\n          class=\"st3\"\r\n          d=\"M3738.65 4701.06c95-95 114.25-236.99 57.93-351.13l221.41-359.26-360.5 220.34c-114.09-56.13-255.89-36.82-350.8 58.09-119.28 119.28-119.28 312.68 0 431.96 119.28 119.29 312.68 119.29 431.96 0zm-353.51-353.51c75.96-75.96 199.11-75.96 275.06 0 75.96 75.96 75.96 199.11 0 275.06-75.96 75.96-199.11 75.96-275.06 0-75.96-75.95-75.96-199.11 0-275.06z\"\r\n        />\r\n        <circle\r\n          id=\"NCI_Facility_DLM_Image\"\r\n          class=\"st6\"\r\n          cx=\"3522.67\"\r\n          cy=\"4485.08\"\r\n          r=\"194.5\"\r\n        />\r\n      </a>\r\n    </g>\r\n\r\n    <g id=\"Pin_Facility_PET_Radiopharm\">\r\n      <a id=\"pin_1\"\r\n        class=\"far fa-lab9\"\r\n        data-title=\"CC PET Radiopharmacy\"\r\n        (click)=\"pinClick(1)\"\r\n      >\r\n        <path\r\n          class=\"st3\"\r\n          d=\"M2262.85 2113.21c95 95 236.99 114.25 351.13 57.93l359.26 221.41-220.34-360.5c56.13-114.09 36.82-255.89-58.09-350.8-119.28-119.28-312.68-119.28-431.96 0-119.28 119.28-119.28 312.68 0 431.96zm353.52-353.51c75.96 75.96 75.96 199.11 0 275.06s-199.11 75.96-275.06 0c-75.96-75.96-75.96-199.11 0-275.06 75.95-75.96 199.1-75.96 275.06 0z\"\r\n        />\r\n        <circle\r\n          id=\"NCI_Facility_PET_Radiopharm\"\r\n          class=\"st6\"\r\n          cx=\"2478.84\"\r\n          cy=\"1897.23\"\r\n          r=\"194.5\"\r\n        />\r\n      </a>\r\n    </g>\r\n  </g>\r\n</svg>\r\n"
        },
        {
            "name": "ApfTimelineChartComponent",
            "id": "component-ApfTimelineChartComponent-02054742f44be7a03e7e14fa5f83b2ecf2fcd524e4269b280abfd14af02c13a4f22e35f885a6358e38e4b5a6add31bf2eeaba92a98178211e5e9f722958bd191",
            "file": "src/app/apf-timeline-chart/apf-timeline-chart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-apf-timeline-chart",
            "styleUrls": [
                "./apf-timeline-chart.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./apf-timeline-chart.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "chartData",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "TimelineChartData",
                    "decorators": []
                },
                {
                    "name": "highlightedLabel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 70,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "isLoading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 86,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "chartLabelClick",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 89,
                    "type": "EventEmitter"
                },
                {
                    "name": "chartLabelMouseOut",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 95,
                    "type": "EventEmitter"
                },
                {
                    "name": "chartLabelMouseOver",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 92,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "_highlightedLabel",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 68,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_timelineChartData",
                    "defaultValue": "{\r\n    points: [],\r\n    locations: {},\r\n\r\n    locationType: 'facility'\r\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TimelineChartData",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "chartType",
                    "defaultValue": "ChartType.Timeline",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 97
                },
                {
                    "name": "columnNames",
                    "defaultValue": "[\r\n    { type: 'string', id: 'ChillerName' },\r\n    {\r\n      type: 'string',\r\n      id: 'ChillerNameTooltip',\r\n      role: 'tooltip',\r\n      p: { html: true }\r\n    },\r\n    { type: 'string', id: 'ChillerStatus' },\r\n    { type: 'string', role: 'style' },\r\n    { type: 'date', id: 'StartTime' },\r\n    { type: 'date', id: 'EndTime' }\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 99
                },
                {
                    "name": "options",
                    "defaultValue": "{\r\n    timeline: { showBarLabels: false, colorByRowLabel: true },\r\n    backgroundColor: '#ebe9e6',\r\n    tooltip: { isHtml: true },\r\n    focusTarget: 'category',\r\n    height: '600px'\r\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 113
                },
                {
                    "name": "timelineData",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": false,
                    "description": "",
                    "line": 16
                }
            ],
            "methodsClass": [
                {
                    "name": "chartReady",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 168,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "handleLabelMouseOut",
                    "args": [
                        {
                            "name": "locationId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 247,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "locationId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleLabelMouseOver",
                    "args": [
                        {
                            "name": "locationId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 234,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "locationId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "roomLabelTooltip",
                    "args": [
                        {
                            "name": "room",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 132,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "room",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "roomLabelTooltipDP",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 121,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "scrollIntoView",
                    "args": [
                        {
                            "name": "locationId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 230,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "locationId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, Output } from '@angular/core';\r\n\r\nimport { ChartType } from 'angular-google-charts';\r\nimport { TimelineChartData } from '../facility-timeline-dashboard/facility-timeline-dashboard.service';\r\n\r\ndeclare const bootstrap: any;\r\n\r\n@Component({\r\n  selector: 'app-apf-timeline-chart',\r\n  templateUrl: './apf-timeline-chart.component.html',\r\n  styleUrls: ['./apf-timeline-chart.component.scss']\r\n})\r\nexport class ApfTimelineChartComponent {\r\n  constructor() {}\r\n\r\n  timelineData: any[] = [];\r\n  //locationLookup: { [key: string]: any } = {};\r\n\r\n  private _timelineChartData: TimelineChartData = {\r\n    points: [],\r\n    locations: {},\r\n\r\n    locationType: 'facility'\r\n  };\r\n  @Input()\r\n  get chartData(): TimelineChartData {\r\n    return this._timelineChartData;\r\n  }\r\n  set chartData(v) {\r\n    this._timelineChartData = v;\r\n\r\n    // set a padding value to cover the height of title and axis values\r\n    const paddingHeight = 50;\r\n    // set the height to be covered by the rows\r\n    const rowHeight = Object.keys(v.locations).length * 42; //data.getNumberOfRows() * 15;\r\n    // set the total chart height\r\n    const chartHeight = Math.min(rowHeight + paddingHeight, 375);\r\n\r\n    this.options = {\r\n      timeline: { showBarLabels: false, colorByRowLabel: true },\r\n      backgroundColor: '#ebe9e6',\r\n      tooltip: { isHtml: true },\r\n      focusTarget: 'category',\r\n      height: chartHeight\r\n    };\r\n\r\n    // body > div > app-home > div > app-apf-portfolio-ic-dashboard > div > div > div > div.col-md-9 > div:nth-child(2) > div > div.timeline-chart-container > app-apf-timeline-chart > google-chart > div > div:nth-child(1) > div > div:nth-child(2)\r\n\r\n    this.timelineData = this.chartData.points.map((x: any) => {\r\n      return [\r\n        {\r\n          v: x.locationName,\r\n          p: {\r\n            link: `https://orfd-cogen.ors.nih.gov/data-quality/plotcgmp?path=${x.tag}`\r\n          }\r\n        },\r\n        '',\r\n        x.chillerStatusLabel,\r\n        x.statusColor,\r\n        x.startDate,\r\n        x.endDate\r\n      ];\r\n    });\r\n\r\n    //this.locationLookup = this.chartData.locations;\r\n  }\r\n\r\n  private _highlightedLabel: string = '';\r\n  @Input()\r\n  get highlightedLabel() {\r\n    return this._highlightedLabel;\r\n  }\r\n  set highlightedLabel(v: string) {\r\n    this._highlightedLabel = v;\r\n    document.querySelectorAll('text[data-locationId]')?.forEach((elem) => {\r\n      elem.setAttribute('fill', 'black');\r\n    });\r\n    document\r\n      .querySelector('text[data-locationId=\"' + v + '\"]')\r\n      ?.setAttribute('fill', 'red');\r\n\r\n    this.scrollIntoView(v);\r\n  }\r\n  \r\n  @Input()\r\n  isLoading:boolean = false;\r\n\r\n  @Output()\r\n  chartLabelClick = new EventEmitter<any>();\r\n\r\n  @Output()\r\n  chartLabelMouseOver = new EventEmitter<any>();\r\n\r\n  @Output()\r\n  chartLabelMouseOut = new EventEmitter<any>();\r\n\r\n  chartType = ChartType.Timeline;\r\n\r\n  columnNames = [\r\n    { type: 'string', id: 'ChillerName' },\r\n    {\r\n      type: 'string',\r\n      id: 'ChillerNameTooltip',\r\n      role: 'tooltip',\r\n      p: { html: true }\r\n    },\r\n    { type: 'string', id: 'ChillerStatus' },\r\n    { type: 'string', role: 'style' },\r\n    { type: 'date', id: 'StartTime' },\r\n    { type: 'date', id: 'EndTime' }\r\n  ];\r\n\r\n  options: any = {\r\n    timeline: { showBarLabels: false, colorByRowLabel: true },\r\n    backgroundColor: '#ebe9e6',\r\n    tooltip: { isHtml: true },\r\n    focusTarget: 'category',\r\n    height: '600px'\r\n  };\r\n\r\n  roomLabelTooltipDP(name: string) {\r\n    const tooltipHtml = `\r\n    <div align=\"left\" class=\"label-tooltip\"> \r\n      <table>\r\n       <tr><th> Name: ${name} </th></tr>\r\n       </table>\r\n    </div>\r\n  `;\r\n    return tooltipHtml;\r\n  }\r\n\r\n  roomLabelTooltip(room: any) {\r\n    const toolTipParts = [];\r\n    if (room.roomName) {\r\n      toolTipParts.push(`${room.roomName}`);\r\n    }\r\n    if (room.roomNumber) {\r\n      toolTipParts.push(`${room.roomNumber}`);\r\n    }\r\n    if (room.iso) {\r\n      toolTipParts.push(`Class: ${room.iso}`);\r\n    }\r\n    if (room.sq) {\r\n      toolTipParts.push(`GSF: ${room.sq}`);\r\n    }\r\n    const tooltipHtml = `\r\n    <div class=\"label-tooltip\">\r\n      ${toolTipParts.join('<br>')}\r\n    </div>`;\r\n\r\n    // Room: ${room.roomName} <br>\r\n    // Room #: ${room.roomNumber} <br>\r\n    // Class: ${room.iso} <br>\r\n    // GSF: ${room.sq}\r\n    // const tooltipHtml = `\r\n    //   <div align=\"left\" class=\"label-tooltip\">\r\n    //     <table>\r\n    //      <tr><td> Room: ${room.roomName} </td></tr>\r\n    //      <tr><td><b> Room #: ${room.roomNumber} </b></td></tr>\r\n    //      <tr><td><b> Class: ${room.iso} </b></td></tr>\r\n    //      <tr><td><b> GSF: ${room.sq} </b></td></tr>\r\n    //      </table>\r\n    //   </div>\r\n    // `;\r\n    return tooltipHtml;\r\n  }\r\n\r\n  chartReady() {\r\n    console.log('Chart Ready');\r\n    const chartLabels = document.querySelectorAll(\r\n      'app-apf-timeline-chart text[text-anchor=\"end\"]'\r\n    );\r\n    const me = this;\r\n    chartLabels.forEach((label) => {\r\n      label.setAttribute(\r\n        'style',\r\n        `cursor: pointer; text-decoration: underline;`\r\n      );\r\n\r\n      const locationName = label.innerHTML;\r\n      if (this.chartData.locationType === 'room') {\r\n        const roomData = this.chartData.locations[locationName];\r\n        if (roomData) {\r\n          const roomTooltip = this.roomLabelTooltip(roomData);\r\n          const tooltip = new bootstrap.Tooltip(label, {\r\n            placement: 'right',\r\n            html: true,\r\n            title: roomTooltip\r\n          });\r\n        } else {\r\n          const tooltip = new bootstrap.Tooltip(label, {\r\n            placement: 'right',\r\n            title: locationName\r\n          });\r\n        }\r\n      } else {\r\n        const tooltip = new bootstrap.Tooltip(label, {\r\n          placement: 'right',\r\n          title: locationName\r\n        });\r\n      }\r\n\r\n      label.setAttribute('data-locationId', label.innerHTML);\r\n\r\n      // console.log(this.chartData);\r\n      // label.setAttribute('data-toggle', 'tooltip');\r\n      // label.setAttribute('data-placement', 'right');\r\n      // label.setAttribute('title', 'Hello ' + label.innerHTML);\r\n\r\n      label.addEventListener('click', function (sender) {\r\n        const text = (sender.currentTarget as Element).innerHTML;\r\n        me.chartLabelClick.emit(text);\r\n      });\r\n      label.addEventListener('mouseover', function (sender) {\r\n        const text = (sender.currentTarget as Element).innerHTML;\r\n        me.handleLabelMouseOver(text);\r\n      });\r\n      label.addEventListener('mouseout', function (sender) {\r\n        const text = (sender.currentTarget as Element).innerHTML;\r\n        me.handleLabelMouseOut(text);\r\n      });\r\n\r\n      \r\n\r\n      // document.querySelectorAll()\r\n      // data-toggle=\"tooltip\" data-placement=\"right\" title=\"Tooltip on right\"\r\n    });\r\n  }\r\n\r\n  scrollIntoView(locationId: string) {\r\n    document.querySelector(`google-chart [data-locationId=\"${locationId}\"]`)?.scrollIntoView();\r\n  }\r\n\r\n  handleLabelMouseOver(locationId: string) {\r\n    const label = document.querySelector(\r\n      'text[data-locationId=\"' + locationId + '\"]'\r\n    );\r\n    if (label) {\r\n      label.setAttribute('fill', 'red');\r\n\r\n      // tooltip.show();\r\n    }\r\n\r\n    this.chartLabelMouseOver.emit(locationId);\r\n  }\r\n\r\n  handleLabelMouseOut(locationId: string) {\r\n    document\r\n      .querySelector('text[data-locationId=\"' + locationId + '\"]')\r\n      ?.setAttribute('fill', 'black');\r\n    this.chartLabelMouseOut.emit(locationId);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "text[locationId] {\r\n  :hover {\r\n    fill: red;\r\n  }\r\n}\r\n\r\n.label-tooltip {\r\n  width: 300px;\r\n  padding: 5px 5px 5px 5px;\r\n  text-align: left;\r\n\r\n  .row {\r\n    display: flex;\r\n  }\r\n}\r\n",
                    "styleUrl": "./apf-timeline-chart.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 13
            },
            "accessors": {
                "chartData": {
                    "name": "chartData",
                    "setSignature": {
                        "name": "chartData",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "v",
                                "type": "",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 29,
                        "jsdoctags": [
                            {
                                "name": "v",
                                "type": "",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "chartData",
                        "type": "",
                        "returnType": "TimelineChartData",
                        "line": 26
                    }
                },
                "highlightedLabel": {
                    "name": "highlightedLabel",
                    "setSignature": {
                        "name": "highlightedLabel",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "v",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 73,
                        "jsdoctags": [
                            {
                                "name": "v",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "highlightedLabel",
                        "type": "",
                        "returnType": "",
                        "line": 70
                    }
                }
            },
            "templateData": "<google-chart\r\n  *ngIf=\"timelineData.length > 0 && !isLoading\"\r\n  style=\"width: 100%; height: 100%\"\r\n  [type]=\"chartType\"\r\n  [data]=\"timelineData\"\r\n  [columns]=\"columnNames\"\r\n  [options]=\"options\"\r\n  (ready)=\"chartReady()\"\r\n>\r\n</google-chart>\r\n\r\n<p-progressSpinner *ngIf=\"isLoading\" [style]=\"{width: '50px', height: '50px'}\" styleClass=\"custom-spinner\" strokeWidth=\"4\" fill=\"#EEEEEE\" animationDuration=\"2s\"></p-progressSpinner>\r\n"
        },
        {
            "name": "AppComponent",
            "id": "component-AppComponent-0750c614018fcc7bcc7551685cc89af5c86bc642ba94bbf4076ae5dad3a92c480929c51b3a9145fc41bc7737e2d8fb7fec1fb226aaf6b35fef0e0f84abc759a1",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "'app'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methodsClass": [
                {
                    "name": "refresh",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { JwksValidationHandler } from 'angular-oauth2-oidc-jwks';\r\nimport { OAuthService } from 'angular-oauth2-oidc';\r\nimport { authCodeFlowConfig } from './auth.config';\r\nimport { filter } from 'rxjs/operators';\r\nimport { DataService } from 'src/app/api/data.service';\r\nimport { UserService } from './shared/auth/user.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html'\r\n})\r\nexport class AppComponent {\r\n  title = 'app';\r\n\r\n  constructor(private oauthService: OAuthService, private userService: UserService) \r\n  {\r\n    this.userService.Login();\r\n    this.userService.currentUser$.subscribe(u=>{\r\n      console.log(u)\r\n    });\r\n  }\r\n\r\n  get userId(): string {\r\n\r\n    const claims = this.oauthService.getIdentityClaims();\r\n    if (!claims) return '';\r\n    return claims['userid'];\r\n  }\r\n\r\n  get email(): string {\r\n\r\n    const claims = this.oauthService.getIdentityClaims();\r\n    if (!claims) return '';\r\n    return claims['email'];\r\n  }\r\n\r\n  get idToken(): string {\r\n    return this.oauthService.getIdToken();\r\n  }\r\n\r\n  get accessToken(): string {\r\n    return this.oauthService.getAccessToken();\r\n  }\r\n\r\n  refresh() {\r\n    this.oauthService.refreshToken();\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "oauthService",
                        "type": "OAuthService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "userService",
                        "type": "UserService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "oauthService",
                        "type": "OAuthService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "userService",
                        "type": "UserService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "userId": {
                    "name": "userId",
                    "getSignature": {
                        "name": "userId",
                        "type": "string",
                        "returnType": "string",
                        "line": 24
                    }
                },
                "email": {
                    "name": "email",
                    "getSignature": {
                        "name": "email",
                        "type": "string",
                        "returnType": "string",
                        "line": 31
                    }
                },
                "idToken": {
                    "name": "idToken",
                    "getSignature": {
                        "name": "idToken",
                        "type": "string",
                        "returnType": "string",
                        "line": 38
                    }
                },
                "accessToken": {
                    "name": "accessToken",
                    "getSignature": {
                        "name": "accessToken",
                        "type": "string",
                        "returnType": "string",
                        "line": 42
                    }
                }
            },
            "templateData": "<body>\r\n  <!-- <div *ngIf=\"idToken\">\r\n    <div style=\"text-align:center\">\r\n      <h1>Welcome to {{ title }}!</h1>\r\n    </div>\r\n  \r\n    <h2>UserId</h2>\r\n    <p>{{ userId }}</p>\r\n\r\n    <h2>Email</h2>\r\n    <p>{{ email }}</p>\r\n  \r\n    <h2>Id-Token</h2>\r\n    <p>{{ idToken }}</p>\r\n  \r\n    <h2>Access Token</h2>\r\n    <p>{{ accessToken }}</p>\r\n  \r\n    <p>\r\n      <button (click)=\"refresh()\">Refresh</button>\r\n    </p>\r\n  </div> -->\r\n  <div>\r\n    <router-outlet></router-outlet>\r\n  </div>\r\n</body>\r\n"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-f98dbe6d4207904095817adcdb079196880739b5a82124e9bce3bd7ad62e7fa64b2d718ac2a3f4b8aedb551284d136a1556d787cc8639e4ca9f90a3d791ab102",
            "file": "src/stories/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-button",
            "styleUrls": [
                "./button.css"
            ],
            "styles": [],
            "template": "<button   type=\"button\"\n   (click)=\"onClick.emit($event)\"\n   [ngClass]=\"classes\"\n   [ngStyle]=\"{ 'background-color': backgroundColor }\"\n >\n   {{ label }}\n </button>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nWhat background color to use\n",
                    "description": "<p>What background color to use</p>\n",
                    "line": 26,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "'Button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "pos": 746,
                            "end": 760,
                            "flags": 4227072,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 325,
                            "tagName": {
                                "pos": 747,
                                "end": 755,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "required"
                            },
                            "comment": ""
                        }
                    ],
                    "rawdescription": "\n\nButton contents\n\n",
                    "description": "<p>Button contents</p>\n",
                    "line": 40,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "primary",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIs this the principal call to action on the page?\n",
                    "description": "<p>Is this the principal call to action on the page?</p>\n",
                    "line": 20,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nHow large should the button be?\n",
                    "description": "<p>How large should the button be?</p>\n",
                    "line": 32,
                    "type": "\"small\" | \"medium\" | \"large\"",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptional click handler\n",
                    "description": "<p>Optional click handler</p>\n",
                    "line": 46,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'storybook-button',\r\n  template: ` <button\r\n    type=\"button\"\r\n    (click)=\"onClick.emit($event)\"\r\n    [ngClass]=\"classes\"\r\n    [ngStyle]=\"{ 'background-color': backgroundColor }\"\r\n  >\r\n    {{ label }}\r\n  </button>`,\r\n  styleUrls: ['./button.css']\r\n})\r\nexport default class ButtonComponent {\r\n  /**\r\n   * Is this the principal call to action on the page?\r\n   */\r\n  @Input()\r\n  primary = false;\r\n\r\n  /**\r\n   * What background color to use\r\n   */\r\n  @Input()\r\n  backgroundColor?: string;\r\n\r\n  /**\r\n   * How large should the button be?\r\n   */\r\n  @Input()\r\n  size: 'small' | 'medium' | 'large' = 'medium';\r\n\r\n  /**\r\n   * Button contents\r\n   *\r\n   * @required\r\n   */\r\n  @Input()\r\n  label = 'Button';\r\n\r\n  /**\r\n   * Optional click handler\r\n   */\r\n  @Output()\r\n  onClick = new EventEmitter<Event>();\r\n\r\n  public get classes(): string[] {\r\n    const mode = this.primary\r\n      ? 'storybook-button--primary'\r\n      : 'storybook-button--secondary';\r\n\r\n    return ['storybook-button', `storybook-button--${this.size}`, mode];\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-button {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  font-weight: 700;\n  border: 0;\n  border-radius: 3em;\n  cursor: pointer;\n  display: inline-block;\n  line-height: 1;\n}\n.storybook-button--primary {\n  color: white;\n  background-color: #1ea7fd;\n}\n.storybook-button--secondary {\n  color: #333;\n  background-color: transparent;\n  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 0px 1px inset;\n}\n.storybook-button--small {\n  font-size: 12px;\n  padding: 10px 16px;\n}\n.storybook-button--medium {\n  font-size: 14px;\n  padding: 11px 20px;\n}\n.storybook-button--large {\n  font-size: 16px;\n  padding: 12px 24px;\n}\n",
                    "styleUrl": "./button.css"
                }
            ],
            "stylesData": "",
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 48
                    }
                }
            }
        },
        {
            "name": "ChartDemoComponent",
            "id": "component-ChartDemoComponent-8dcb3bbc03fa217249650116c500f6cb052281d10907ffebe82c950ac71b02d5c396981c7b911bd3859c4d3813b82fd5a1136c6a1a960778d84e400b0bb896d8",
            "file": "src/app/chart-demo/chart-demo.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-chart-demo",
            "styleUrls": [
                "./chart-demo.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./chart-demo.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "changingChart",
                    "defaultValue": "{\r\n    title: 'Changing Chart',\r\n    type: ChartType.BarChart,\r\n    data: [\r\n      ['Copper', 8.94],\r\n      ['Silver', 10.49],\r\n      ['Gold', 19.3],\r\n      ['Platinum', 21.45]\r\n    ],\r\n    columns: ['Element', 'Density'],\r\n    options: {\r\n      animation: {\r\n        duration: 250,\r\n        easing: 'ease-in-out',\r\n        startup: true\r\n      }\r\n    }\r\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "chart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "GoogleChartComponent",
                    "optional": false,
                    "description": "",
                    "line": 48,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'chart', {static: true}"
                        }
                    ],
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "charts",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type[]",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "changeChart",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 314,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "navigateToTest",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 323,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 310,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "onError",
                    "args": [
                        {
                            "name": "error",
                            "type": "ChartErrorEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 293,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "error",
                            "type": "ChartErrorEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onMouseEnter",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 301,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onMouseLeave",
                    "args": [
                        {
                            "name": "event",
                            "type": "ChartMouseLeaveEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 306,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "ChartMouseLeaveEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onReady",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 289,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "onSelect",
                    "args": [
                        {
                            "name": "event",
                            "type": "ChartSelectionChangedEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 297,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "ChartSelectionChangedEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport {\r\n  ChartErrorEvent,\r\n  ChartMouseLeaveEvent,\r\n  ChartMouseOverEvent,\r\n  ChartSelectionChangedEvent,\r\n  ChartType,\r\n  Column,\r\n  GoogleChartComponent\r\n} from 'angular-google-charts';\r\n\r\n@Component({\r\n  selector: 'app-chart-demo',\r\n  templateUrl: './chart-demo.component.html',\r\n  styleUrls: ['./chart-demo.component.css']\r\n})\r\nexport class ChartDemoComponent implements OnInit {\r\n  public charts: {\r\n    title: string;\r\n    type: ChartType;\r\n    data: any[][];\r\n    columns?: Column[];\r\n    options?: {};\r\n  }[] = [];\r\n\r\n  public changingChart = {\r\n    title: 'Changing Chart',\r\n    type: ChartType.BarChart,\r\n    data: [\r\n      ['Copper', 8.94],\r\n      ['Silver', 10.49],\r\n      ['Gold', 19.3],\r\n      ['Platinum', 21.45]\r\n    ],\r\n    columns: ['Element', 'Density'],\r\n    options: {\r\n      animation: {\r\n        duration: 250,\r\n        easing: 'ease-in-out',\r\n        startup: true\r\n      }\r\n    }\r\n  };\r\n\r\n  @ViewChild('chart', { static: true })\r\n  public chart!: GoogleChartComponent;\r\n\r\n  constructor(private router: Router) {\r\n    this.charts.push({\r\n      title: 'Pie Chart',\r\n      type: ChartType.PieChart,\r\n      columns: ['Task', 'Hours per Day'],\r\n      data: [\r\n        ['Work', 11],\r\n        ['Eat', 2],\r\n        ['Commute', 2],\r\n        ['Watch TV', 2],\r\n        ['Sleep', 7]\r\n      ]\r\n    });\r\n\r\n    this.charts.push({\r\n      title: 'Bar Chart',\r\n      type: ChartType.BarChart,\r\n      columns: ['Element', 'Density', { role: 'style', type: 'string' }],\r\n      data: [\r\n        ['Copper', 8.94, '#b87333'],\r\n        ['Silver', 10.49, 'silver'],\r\n        ['Gold', 19.3, 'gold'],\r\n        ['Platinum', 21.45, 'color: #e5e4e2']\r\n      ]\r\n    });\r\n\r\n    this.charts.push({\r\n      title: 'Bar Chart',\r\n      type: ChartType.BarChart,\r\n      columns: [\r\n        'City',\r\n        '2010 Population',\r\n        { role: 'annotation', type: 'string' },\r\n        '2000 Population',\r\n        { role: 'annotation', type: 'string' }\r\n      ],\r\n      data: [\r\n        ['New York City, NY', 8175000, '8.1M', 8008000, '8M'],\r\n        ['Los Angeles, CA', 3792000, '3.8M', 3694000, '3.7M'],\r\n        ['Chicago, IL', 2695000, '2.7M', 2896000, '2.9M'],\r\n        ['Houston, TX', 2099000, '2.1M', 1953000, '2.0M'],\r\n        ['Philadelphia, PA', 1526000, '1.5M', 1517000, '1.5M']\r\n      ],\r\n      options: {\r\n        annotations: {\r\n          alwaysOutside: true,\r\n          textStyle: {\r\n            fontSize: 12,\r\n            auraColor: 'none',\r\n            color: '#555'\r\n          },\r\n          boxStyle: {\r\n            stroke: '#ccc',\r\n            strokeWidth: 1,\r\n            gradient: {\r\n              color1: '#f3e5f5',\r\n              color2: '#f3e5f5',\r\n              x1: '0%',\r\n              y1: '0%',\r\n              x2: '100%',\r\n              y2: '100%'\r\n            }\r\n          }\r\n        },\r\n        hAxis: {\r\n          title: 'Total Population',\r\n          minValue: 0\r\n        },\r\n        vAxis: {\r\n          title: 'City'\r\n        }\r\n      }\r\n    });\r\n\r\n    this.charts.push({\r\n      title: 'Styled Line Chart',\r\n      type: ChartType.LineChart,\r\n      columns: [\r\n        'Element',\r\n        'Density',\r\n        { type: 'number', role: 'interval' },\r\n        { type: 'number', role: 'interval' },\r\n        { type: 'string', role: 'annotation' },\r\n        { type: 'string', role: 'annotationText' },\r\n        { type: 'boolean', role: 'certainty' }\r\n      ],\r\n      data: [\r\n        ['April', 1000, 900, 1100, 'A', 'Stolen data', true],\r\n        ['May', 1170, 1000, 1200, 'B', 'Coffee spill', true],\r\n        ['June', 660, 550, 800, 'C', 'Wumpus attack', true],\r\n        ['July', 1030, null, null, null, null, false]\r\n      ]\r\n    });\r\n\r\n    this.charts.push({\r\n      title: 'Material Bar Chart',\r\n      type: ChartType.Bar,\r\n      columns: ['Year', 'Sales', 'Expenses', 'Profit'],\r\n      data: [\r\n        ['2014', 1000, 400, 200],\r\n        ['2015', 1170, 460, 250],\r\n        ['2016', 660, 1120, 300],\r\n        ['2017', 1030, 540, 350]\r\n      ],\r\n      options: {\r\n        chart: {\r\n          title: 'Material Bar Chart',\r\n          subtitle: 'Sales, Expenses, and Profit: 2014-2017'\r\n        },\r\n        bars: 'horizontal' // Required for Material Bar Charts.\r\n      }\r\n    });\r\n\r\n    this.charts.push({\r\n      title: 'Area Chart',\r\n      type: ChartType.AreaChart,\r\n      columns: ['Year', 'Sales', 'Expenses'],\r\n      data: [\r\n        ['2013', 1000, 400],\r\n        ['2014', 1170, 460],\r\n        ['2015', 660, 1120],\r\n        ['2016', 1030, 540]\r\n      ]\r\n    });\r\n\r\n    this.charts.push({\r\n      title: 'Bubble Chart',\r\n      type: ChartType.BubbleChart,\r\n      columns: ['ID', 'X', 'Y'],\r\n      data: [\r\n        ['Hallo', 80, 167],\r\n        ['', 79, 136],\r\n        ['', 78, 184],\r\n        ['', 72, 278],\r\n        ['', 81, 200],\r\n        ['', 72, 170],\r\n        ['', 68, 477]\r\n      ]\r\n    });\r\n\r\n    this.charts.push({\r\n      title: 'Candlestick Chart',\r\n      type: ChartType.CandlestickChart,\r\n      columns: undefined,\r\n      data: [\r\n        ['Mon', 20, 28, 38, 45],\r\n        ['Tue', 31, 38, 55, 66],\r\n        ['Wed', 50, 55, 77, 80],\r\n        ['Thu', 77, 77, 66, 50],\r\n        ['Fri', 68, 66, 22, 15]\r\n      ]\r\n    });\r\n\r\n    this.charts.push({\r\n      title: 'Combo Chart',\r\n      type: ChartType.ComboChart,\r\n      columns: [\r\n        'Month',\r\n        'Bolivia',\r\n        'Ecuador',\r\n        'Madagascar',\r\n        'Papua New Guinea',\r\n        'Rwanda',\r\n        'Average'\r\n      ],\r\n      data: [\r\n        ['2004/05', 165, 938, 522, 998, 450, 614.6],\r\n        ['2005/06', 135, 1120, 599, 1268, 288, 682],\r\n        ['2006/07', 157, 1167, 587, 807, 397, 623],\r\n        ['2007/08', 139, 1110, 615, 968, 215, 609.4],\r\n        ['2008/09', 136, 691, 629, 1026, 366, 569.6]\r\n      ],\r\n      options: {\r\n        vAxis: { title: 'Cups' },\r\n        hAxis: { title: 'Month' },\r\n        seriesType: 'bars',\r\n        series: { 5: { type: 'line' } }\r\n      }\r\n    });\r\n\r\n    this.charts.push({\r\n      title: 'Histogram',\r\n      type: ChartType.Histogram,\r\n      columns: ['Dinosaur', 'Length'],\r\n      data: [\r\n        ['Acrocanthosaurus (top-spined lizard)', 12.2],\r\n        ['Albertosaurus (Alberta lizard)', 9.1],\r\n        ['Allosaurus (other lizard)', 12.2],\r\n        ['Apatosaurus (deceptive lizard)', 22.9],\r\n        ['Archaeopteryx (ancient wing)', 0.9],\r\n        ['Argentinosaurus (Argentina lizard)', 36.6],\r\n        ['Baryonyx (heavy claws)', 9.1],\r\n        ['Brachiosaurus (arm lizard)', 30.5],\r\n        ['Ceratosaurus (horned lizard)', 6.1],\r\n        ['Coelophysis (hollow form)', 2.7],\r\n        ['Compsognathus (elegant jaw)', 0.9],\r\n        ['Deinonychus (terrible claw)', 2.7],\r\n        ['Diplodocus (double beam)', 27.1],\r\n        ['Dromicelomimus (emu mimic)', 3.4],\r\n        ['Gallimimus (fowl mimic)', 5.5],\r\n        ['Mamenchisaurus (Mamenchi lizard)', 21.0],\r\n        ['Megalosaurus (big lizard)', 7.9],\r\n        ['Microvenator (small hunter)', 1.2],\r\n        ['Ornithomimus (bird mimic)', 4.6],\r\n        ['Oviraptor (egg robber)', 1.5],\r\n        ['Plateosaurus (flat lizard)', 7.9],\r\n        ['Sauronithoides (narrow-clawed lizard)', 2.0],\r\n        ['Seismosaurus (tremor lizard)', 45.7],\r\n        ['Spinosaurus (spiny lizard)', 12.2],\r\n        ['Supersaurus (super lizard)', 30.5],\r\n        ['Tyrannosaurus (tyrant lizard)', 15.2],\r\n        ['Ultrasaurus (ultra lizard)', 30.5],\r\n        ['Velociraptor (swift robber)', 1.8]\r\n      ]\r\n    });\r\n\r\n    this.charts.push({\r\n      title: 'Scatter Chart',\r\n      type: ChartType.ScatterChart,\r\n      columns: ['Age', 'Weight'],\r\n      data: [\r\n        [8, 12],\r\n        [4, 5.5],\r\n        [11, 14],\r\n        [4, 5],\r\n        [3, 3.5],\r\n        [6.5, 7]\r\n      ],\r\n      options: {\r\n        explorer: {\r\n          actions: ['dragToZoom', 'rightClickToReset'],\r\n          keepInBounds: true,\r\n          maxZoomIn: 4,\r\n          zoomDelta: 1\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  public onReady() {\r\n    console.log('Chart ready');\r\n  }\r\n\r\n  public onError(error: ChartErrorEvent) {\r\n    console.error('Error: ' + error.message.toString());\r\n  }\r\n\r\n  public onSelect(event: ChartSelectionChangedEvent) {\r\n    console.log('Selected: ' + event.toString());\r\n  }\r\n\r\n  public onMouseEnter(event: any) {\r\n    //ChartMouseOverEvent\r\n    console.log('Hovering ' + event.toString());\r\n  }\r\n\r\n  public onMouseLeave(event: ChartMouseLeaveEvent) {\r\n    console.log('No longer hovering ' + event.toString());\r\n  }\r\n\r\n  public ngOnInit() {\r\n    console.log(this.chart);\r\n  }\r\n\r\n  public changeChart() {\r\n    this.changingChart.data = [\r\n      ['Copper', Math.random() * 20.0],\r\n      ['Silver', Math.random() * 20.0],\r\n      ['Gold', Math.random() * 20.0],\r\n      ['Platinum', Math.random() * 20.0]\r\n    ];\r\n  }\r\n\r\n  public navigateToTest() {\r\n    this.router.navigateByUrl('/test');\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./chart-demo.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 48,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<h1 style=\"font-family: Arial, Helvetica, sans-serif\">\r\n  Angular Google-Charts Demo\r\n</h1>\r\n<div *ngFor=\"let chart of charts\">\r\n  <google-chart\r\n    [width]=\"600\"\r\n    [title]=\"chart.title\"\r\n    [type]=\"chart.type\"\r\n    [data]=\"chart.data\"\r\n    [columns]=\"chart.columns\"\r\n    [options]=\"chart.options!\"\r\n    (ready)=\"onReady()\"\r\n    (select)=\"onSelect($event)\"\r\n    (error)=\"onError($event)\"\r\n    (mouseenter)=\"onMouseEnter($event)\"\r\n    (mouseleave)=\"onMouseLeave($event)\"\r\n  >\r\n  </google-chart>\r\n</div>\r\n\r\n<google-chart\r\n  #chart\r\n  [width]=\"600\"\r\n  [title]=\"changingChart.title\"\r\n  [type]=\"changingChart.type\"\r\n  [data]=\"changingChart.data\"\r\n  [columns]=\"changingChart.columns\"\r\n  [options]=\"changingChart.options\"\r\n>\r\n</google-chart>\r\n\r\n<button (click)=\"changeChart()\">Change Data</button>\r\n<button (click)=\"navigateToTest()\">Navigate</button>\r\n"
        },
        {
            "name": "ContactUsDialogComponent",
            "id": "component-ContactUsDialogComponent-952e08ce0375cae3dd301c0bbdec186bb202ebe2d3ff089595df23c6acb50b944fb843184c0fe360a21995ce9d8a410b2045dc414c7fa5edd89aae3e8b634e13",
            "file": "src/app/contact-us-dialog/contact-us-dialog.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "DialogService"
                }
            ],
            "selector": "app-contact-us-dialog",
            "styleUrls": [
                "./contact-us-dialog.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./contact-us-dialog.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "emailForm",
                    "defaultValue": "new FormGroup({\n    name: new FormControl('', [Validators.required]),\n    fromAddress: new FormControl('', [Validators.required, Validators.email]),\n    subjectLine: new FormControl('', [Validators.required]),\n    messageBody: new FormControl('', [Validators.required])\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "ref",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DynamicDialogRef",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "sendEmail",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, OnDestroy, Output } from '@angular/core';\nimport { DialogService, DynamicDialogRef } from 'primeng/dynamicdialog';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\n\nimport { DataService } from '../api/data.service';\n\n@Component({\n  selector: 'app-contact-us-dialog',\n  templateUrl: './contact-us-dialog.component.html',\n  styleUrls: ['./contact-us-dialog.component.scss'],\n  providers: [DialogService]\n})\nexport class ContactUsDialogComponent implements OnDestroy {\n\n  constructor(public ref: DynamicDialogRef) {}\n  \n  emailForm = new FormGroup({\n    name: new FormControl('', [Validators.required]),\n    fromAddress: new FormControl('', [Validators.required, Validators.email]),\n    subjectLine: new FormControl('', [Validators.required]),\n    messageBody: new FormControl('', [Validators.required])\n  });\n\n  get name() {\n    return this.emailForm.get('name');\n  }\n\n  get fromAddress() {\n    return this.emailForm.get('fromAddress');\n  }\n\n  get subjectLine() {\n    return this.emailForm.get('subjectLine');\n  }\n\n  get messageBody() {\n    return this.emailForm.get('messageBody');\n  }\n\n  sendEmail() {\n    if (this.emailForm.valid) {\n      this.ref.close(this.emailForm.value);\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.ref) {\n        this.ref.close();\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".contact-form {\r\n    width:500px;\r\n    .field-group {\r\n        margin-bottom:20px;\r\n    }\r\n    .alert {\r\n        color: red;\r\n    }\r\n    label {\r\n        display:block;\r\n        font-weight:500;\r\n    }\r\n    input, textarea {\r\n        width:400px;\r\n    }\r\n}",
                    "styleUrl": "./contact-us-dialog.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "ref",
                        "type": "DynamicDialogRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "ref",
                        "type": "DynamicDialogRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnDestroy"
            ],
            "accessors": {
                "name": {
                    "name": "name",
                    "getSignature": {
                        "name": "name",
                        "type": "",
                        "returnType": "",
                        "line": 24
                    }
                },
                "fromAddress": {
                    "name": "fromAddress",
                    "getSignature": {
                        "name": "fromAddress",
                        "type": "",
                        "returnType": "",
                        "line": 28
                    }
                },
                "subjectLine": {
                    "name": "subjectLine",
                    "getSignature": {
                        "name": "subjectLine",
                        "type": "",
                        "returnType": "",
                        "line": 32
                    }
                },
                "messageBody": {
                    "name": "messageBody",
                    "getSignature": {
                        "name": "messageBody",
                        "type": "",
                        "returnType": "",
                        "line": 36
                    }
                }
            },
            "templateData": "\n  <div class=\"contact-form\" [formGroup]=\"emailForm\">\n\n      <div class=\"field-group\">\n        <label for=\"name\">Name</label>\n        <input id=\"name\" type=\"text\" formControlName=\"name\">\n        <div class=\"alert\" *ngIf=\"name?.invalid && (name?.dirty || name?.touched)\">\n          <div *ngIf=\"name?.errors?.required\">\n            Name is required.\n          </div>\n        </div>\n      </div>\n\n      <div class=\"field-group\">\n        <label for=\"from-address\">Email:</label>\n        <input type=\"email\" id=\"from-address\" name=\"from-address\" formControlName=\"fromAddress\">\n        <div class=\"alert\" *ngIf=\"fromAddress?.invalid && (fromAddress?.dirty || fromAddress?.touched)\">\n          <div *ngIf=\"fromAddress?.errors?.required\">\n            From address is required.\n          </div>\n          <div *ngIf=\"fromAddress?.errors?.email\">\n            This is not a valid email address.\n          </div>\n        </div>\n      </div>\n\n      <div class=\"field-group\">\n        <label for=\"subject-line\">Subject:</label>\n        <input type=\"text\" id=\"subject-line\" name=\"subject-line\" formControlName=\"subjectLine\">\n        <div class=\"alert\" *ngIf=\"subjectLine?.invalid && (subjectLine?.dirty || subjectLine?.touched)\">\n          <div *ngIf=\"subjectLine?.errors?.required\">\n            Subject line is required.\n          </div>\n        </div>\n      </div>\n\n      <div class=\"field-group\">\n        <label for=\"message-body\">Message</label>\n        <textarea id=\"message-body\" formControlName=\"messageBody\"></textarea>\n        <div class=\"alert\" *ngIf=\"messageBody?.invalid && (messageBody?.dirty || messageBody?.touched)\">\n          <div *ngIf=\"messageBody?.errors?.required\">\n            Message body is required.\n          </div>\n        </div>\n      </div>\n\n      <button pButton label=\"Send\" class=\"p-button-sm\" [disabled]=\"emailForm.invalid\" (click)=\"sendEmail()\"></button>\n\n  </div>"
        },
        {
            "name": "ErrorLogDashboardComponent",
            "id": "component-ErrorLogDashboardComponent-d06fb002c47a46949f887a058395bc875c12ad5d5efe1198d018d73a6ebb06733a1a8644e0bdfac1c5c93ffde789fe016c12585369be3a7285835cfbb6bdb4a7",
            "file": "src/app/error-log-dashboard/error-log-dashboard.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-error-log-dashboard",
            "styleUrls": [
                "./error-log-dashboard.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./error-log-dashboard.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "appSettings",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "errors",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "errorsJSON",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 16
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\nimport { DataService } from 'src/app/api/data.service';\nimport { ErrorLog } from '../api/models';\n\n@Component({\n  selector: 'app-error-log-dashboard',\n  templateUrl: './error-log-dashboard.component.html',\n  styleUrls: ['./error-log-dashboard.component.scss']\n})\nexport class ErrorLogDashboardComponent implements OnInit {\n\n  constructor(private dataService: DataService) { }\n\n  errors:  any[] = [] //ErrorLog[] = []\n  errorsJSON = \"\"\n  appSettings = \"\"\n\n  ngOnInit(): void {\n    this.dataService.errors().subscribe(errors=>{\n      this.errors = errors\n      this.errorsJSON = JSON.stringify(errors);\n    });\n\n    this.dataService.appSettings().subscribe(settings=>{\n    this.appSettings = JSON.stringify(settings);\n    })\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "table.error-log {\r\n    width:100%;\r\n\r\n    td {\r\n        \r\n        padding:2px;\r\n    }\r\n}\r\n",
                    "styleUrl": "./error-log-dashboard.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "dataService",
                        "type": "DataService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "dataService",
                        "type": "DataService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<h2>Error Log</h2>\n\n<p-table [value]=\"errors\">\n    <ng-template pTemplate=\"header\">\n        <tr>\n            <th pSortableColumn=\"errorlogid\">Id</th>\n            <th pSortableColumn=\"errordate\">Date</th>\n            <th pSortableColumn=\"errormessage\">Message</th>\n            <th pSortableColumn=\"errortrace\">Trace</th>\n        </tr>\n    </ng-template>\n    <ng-template pTemplate=\"body\" let-error>\n        <tr>\n            <td>{{error.errorlogid}}</td>\n            <td [width]=\"180\">{{error.errordate | date:'short'}}</td>\n            <td>{{error.errormessage}}</td>\n            <td [title]=\"error.errortrace\"> {{error.errortrace.substring(0,138)}}...</td>\n        </tr>\n    </ng-template>\n</p-table>\n\n<h2>App Settings</h2>\n<div>\n    {{appSettings}}\n</div>\n \n"
        },
        {
            "name": "FacilityAllMapComponent",
            "id": "component-FacilityAllMapComponent-53560c82f443eb86c0eb69d23b431087ff81bd0c72697c976c2d16b31009c8441ab1179a4280d6ad10610d04a31e661d0bda623f959d274695aa43d81dcf4077",
            "file": "src/app/facility-all-map/facility-all-map.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-facility-all-map",
            "styleUrls": [
                "./facility-all-map.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./facility-all-map.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "facilityId",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "number",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setCircleColors",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnChanges, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-facility-all-map',\r\n  templateUrl: './facility-all-map.component.html',\r\n  styleUrls: ['./facility-all-map.component.css']\r\n})\r\nexport class FacilityAllMapComponent implements OnInit, OnChanges {\r\n\r\n  @Input()\r\n  facilityId = 0;\r\n  \r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  ngOnChanges() {\r\n      this.setCircleColors();\r\n  }\r\n\r\n  setCircleColors() {\r\n    const circles = document.querySelectorAll(`circle`);\r\n    circles.forEach(circle => {\r\n      const fid = Number.parseInt(circle.getAttribute(\"data-fid\") || \"0\")\r\n      const circleColor = (this.facilityId === fid) ? \"yellow\" : \"gray\";\r\n      circle.style.fill=circleColor;\r\n    });   \r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./facility-all-map.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 11
            },
            "implements": [
                "OnInit",
                "OnChanges"
            ],
            "templateData": "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 7613 7328.29\">\r\n    <style>\r\n      .st1{fill:#e1e1e1}.st2{fill:#fbb03b}.st3{fill-opacity:.25;stroke:#000;stroke-linecap:round;stroke-linejoin:round}.st4{fill:#94762d}.st5{fill:#0ff}.st6{fill:#fb09bf}.st7{fill:#b5fd19}.st9{fill:none}.st10{fill:#676767}.st11{font-family:&apos;Calibri&apos;}.st12{font-size:320.8324px}.st14{font-size:213.8883px}\r\n    </style>\r\n    <g id=\"Background\">\r\n      <path id=\"Background_Area\" fill=\"#fff\" d=\"M0 0h7613v7328.29H0z\"/>\r\n    </g>\r\n    <g id=\"CampusBuidings\">\r\n      <!-- <path id=\"MLP09\" class=\"st1\" d=\"M1346.51 6531.84l67.66 1.71 1.9-120.96-65-1.95 28.74-1685.37-1269.8-26.32-2.23 127.92 63.38.84-28.06 1575.02-62.59.41-2.68 122.57 268.18 4.63-1.03 73.08 420.23 133.36 576.77 6.98 4.46-211.05z\"/>\r\n      <path id=\"Building49\" class=\"st1\" d=\"M1699.89 8583.35l243.43-1.8-6.31-856.17-245.74 1.81 1.1 147.93-19.22-.17 1.03-118.57-3.02-.03.16-17.35-523.35-4.49-902.81-7.74-.1 10.9-143.91-1.24-.08 8.93-3.95 135.69-29.83-.25-3.02 352.91-62.67-.54-.72 83.37L0 8420.45l19.43.16-1.19 138.6 49.3.41-.93 107.37 104.9.91-.71 82.71 639.36 5.49.78 16.86 4.68 16.18 8.33 14.65 11.51 12.33 14.06 9.31 15.87 5.77 16.75 1.92 16.75-2.02 15.83-5.85 14.03-9.37 11.45-12.39 8.25-14.71 4.59-16.22.68-16.91 637.62-1.6-.23-93.45 108.96-.25z\"/>\r\n       -->\r\n      <!-- <path id=\"Building30\" class=\"st1\" d=\"M2891.43 9309.02l-9.37.03-.25-164.82 28.23-.41-4.98-283.01-212.71 3.09-.65-36.6-143.42 2.08-.47-311.05-335.22.49.8 534.54-25.35.05.15 95.71-53.35.07.38 251.96 53.29-.09.15 96.2 26.86-.06.8 531.66.5.01 332.77-.52-.78-519.67 72.42-.1.14 104.93 270.53-.42z\"/>\r\n      <path id=\"Building29-B\" class=\"st1\" d=\"M2147.02 10514.43l-1164.43 2.66.1 40-195.27.45-.12-43.04 23.28-.05-.51-215.17-91.1.2-.02-11.43-348 .8.03 12.92-91.91.22.48 213.95 25.42-.07 2.29 997.71 64.22-.14.15 64.89 354.24-.82-.14-65.18 63.27-.15-.33-148.06 196.03-.46.21 88.52 295.26-.68.11 41.82-15.81.03.13 50.99-12.27 58.56.12 53.58.13 53.81 12.5 52.11.1 50.29 17.1-.03.04 15.63 213.29-.49-.72-309.23 20.44-4.91 20.78-4.98 10.73-13.61 14.46-18.38-.05-26.1 586.31-1.34-.57-219.62 503.78-1.28 17.14-.03.02 22.53-34.8.03.18 142.36 96.98-.12-.04-24.68 531.66-.69.1 67.89 186.18-.25.26 198.65 196.2-.25-.35-266.95 593.66-.78-.23-130.39 57.98-.11-.25-147.01-57.68.1-.09-57.1-1510.9 2.57.1 59.37-59.2.1.13 83-4.12.09-515.16 1.26z\"/>\r\n       -->\r\n      <g id=\"Building10\">\r\n        <path class=\"st1\" d=\"M7482.08 2045.55l130.92-.57-1.2-271.97-129.36.57-.65-149.18-79.81.34-.1-25.6-1261.83 5.51-.83-193.34 36.56-.15-.82-185.53-35.95.16-.77-172.91 187.32-.81-.1-23.1 34.75-.16-2.11-484.08-68.71.3-.58-133.24-678.51 2.97-1160.61 5.07-1.09-128.38.48-.03 112.95-17.12 111.18-26.28 108.66-35.27L4784.3 0l-107.33 39.05-110.31 29.63-112.45 19.95-113.76 10.16-130.42-1.78-129.33-16.85-126.53-31.66-122.01-46.08-3.23 212.52 122.79 39.73 126.12 27.45 33.68 3.92 1.15 135.27-1754.04 7.67.57 128.2-97 .43.29 68.49 36.39-.16.91 210.05-45.52.2.21 48.26-80.52.37.99 212.94 49.77-.24 255.67 3.14.63 135.19-32.87.15.87 185.4 32.82-.15.91 197.2-250.67 1.17-.12-26.1-45 .2-967.62 4.51.21 44.54-81.5.38.67 143.49-140.71.67.33 70.66 34.77-.16.98 211.1 106.94-.5.91 194.79 81.67-.37.22 45.89 1175.11-5.46.09 100.22.25 281.32-18.41.09-.27-55.13-205.21 1 1.03 210.34 205.21-1-.27-55.12 18.01-.09.21 233.73-1395.4 1.26.85 942.54-57.11.04.18 204.84 59.24-.06.25 272.51 620.86-.55-.03-43.81 178.6-.16-.01-5.12 70.3-.06.14 140.75 836.21-.76.06 64.91-3.64 74.02-345.77 200.08-31.07-23.28-33.61-19.44-35.67-15.36-37.24-11.03-38.29-6.57-38.81-2.02-38.77 2.57-38.2 7.12-37.14 11.57-35.49 15.84-33.4 19.93-30.82 23.71-27.83 27.15-24.42 30.26-20.69 32.89-16.67 35.12-12.41 36.81-7.98 38.02-3.46 38.69 1.13 38.81-80.67 47.75 31.85 53.82-25.74 15.24 78.7 132.96 29.27-17.33 29.62 50.02 72.67-43.02 33.19 21.19 35.52 17.08 37.28 12.69 38.55 8.18 39.26 3.49 39.4-1.23 38.97-5.89 37.99-10.54 36.48-14.97 34.43-19.22 31.88-23.19 28.88-26.86 25.47-30.08 21.7-32.91 17.62-35.27 13.28-37.1 8.73-38.44 1.6-15.35 2.48-23.84-.64-39.37-5.32-39.03 232-133.95.07 138.2-23.84.02v-3.61l-130.19.06.09 155.58 129.64-.07-.02-51.4H2708.56l.09 174.87-247.31.13.21 382.84-638.49.36.3 527.87 54.73-.04.02 54.58 69.84-.04.12 211.69-103.42.05.28 480.26 177.19-.1.05 107.88 459.94-.26-.1-170.6 163.99-.08 40.92 7.68 197.22-.1.14 264.71 368.13-.21-.14-267.17 68.06-.03-.2-372.88 237.59-.14-.21-385.82 183.21-.11-.15-249.44 193.46-.11.09 149.48 134.35-.09.08 149.19 42.82-.02.03 26.62-40.59.02.25 455.41 501.84-.29-.35-631.62 103.61-.06-.14-264.29 559.96-.32.04 74.06 389.67-.22-.1-163.66 100-.05.09 165.04-64.93.04.24 434.99 120.01-.06-.02-42.73 132.93-.07-.18-314.58 3.62-80.61-122.64.07-.08-159h1.27l136.1-.08-.42-769.93-.78-477.46 789.5-1.28.93 575.13 116.16-.2.1 54.42 115.07-.19-.06-39.5-.1-62.68 285.35-.47-.98-594.72-1.21-738.8-27.3.06-.56-349.13-192.7-.37v-376.02l179.16-1.62-1.41-323.45-177.75.78V2294.1l383.68-1.68-.2-44.23 84.45-.36-.85-202.28zm-4911.42-428.86l-.56-189.54 32.86-.11-.58-195.34-41.77.11-.51-170.8 1456.48-4.35.25 82.35-161.16.47 1.12 374.09 217.24-.66.29 99.29-1503.66 4.49zm3492.24-6.3l-494.53-.51-962.15-.98.56-555.93 981.08 1 472.05.47-.19 173.91-33.31-.02-.2 186 36.88.04-.19 196.02z\"/>\r\n        <path transform=\"rotate(45 5307.42686316 6708.21930672)\" class=\"st1\" d=\"M5248.72 6646.24h117.2v124.02h-117.2z\"/>\r\n      </g>\r\n    </g>\r\n    <g id=\"Facilitiy_Footprints\">\r\n      <path id=\"Facility_3E\" class=\"st2\" d=\"M1676.11 4296.57h-22.36v-.97h-532.78v129.3h532.78v-38.89h22.36z\"/>\r\n      <path id=\"Facility_I-IVAU\" class=\"st2\" d=\"M4950.46 4036.84l.37-130.35 52.58-45.86-16.4-.04.52-182.68 338.44.96-1.02 359.04z\"/>\r\n      <path id=\"Facility_NMD\" transform=\"matrix(1 .00284 -.00284 1 7.4498 -9.2599)\" class=\"st2\" d=\"M3080.35 2521.32h362.74v190.4h-362.74z\"/>\r\n      <path id=\"Facility_PET_Radiopharm\" transform=\"matrix(1 .00284 -.00284 1 6.8518 -8.551)\" class=\"st2\" d=\"M2926.21 2362.59h171.6v87.7h-171.6z\"/>\r\n      <path id=\"Facility_PET_B3\" transform=\"matrix(1 .00284 -.00284 1 6.4949 -8.7447)\" class=\"st2\" d=\"M3013.12 2145.22h133.74v271.14h-133.74z\"/>\r\n      <path id=\"Facility_2J\" class=\"st2\" d=\"M2549.52 4390.35h-112.55l.12-43.57c-62.99-.24-191.3-.49-253.79-.39v44.33h-187.54c.07 22.47-.22 109-.28 133.01l553.79 1.57.25-134.95z\"/>\r\n      <a>\r\n        <path id=\"Facility_East_Terrace\" transform=\"matrix(.00284 -1 1 .00284 3996.9556 9549.7793)\" class=\"st2\" d=\"M6679.57 2541.82h214.77v457.81h-214.77z\"/>\r\n      </a>\r\n      <a>\r\n        <path id=\"Facility_DLM\" transform=\"matrix(.00284 -1 1 .00284 75.2741 7960.1108)\" class=\"st2\" d=\"M3986.96 3845.81h84.12v193h-84.12z\"/>\r\n      </a>\r\n  <!--     \r\n      <path id=\"Facility_T_30\" transform=\"matrix(.00284 -1 1 .00284 -5432.0088 10602.5391)\" class=\"st2\" d=\"M2428.25 7697.15h344.21v655.71h-344.21z\"/>\r\n      <path id=\"Facility_29\" transform=\"matrix(.00284 -1 1 .00284 -10139.4639 11794.8525)\" class=\"st2\" d=\"M734.43 10924.89h220.12v113.41H734.43z\"/> -->\r\n      \r\n      <a>\r\n        <path id=\"Facility_P-IVAU\" transform=\"matrix(.00284 -1 1 .00284 3704.6169 7771.771)\" class=\"st2\" d=\"M5578.56 1700.85h341.4v654.9h-341.4z\"/>\r\n      </a>\r\n      <path id=\"Facility_1B42\" transform=\"matrix(.00284 -1 1 .00284 243.5148 10496.9736)\" class=\"st2\" d=\"M5268.5 5067.98h233.36v116.8H5268.5z\"/>\r\n      <path id=\"Facility_HPC13\" transform=\"matrix(.00284 -1 1 .00284 -344.698 11923.8535)\" class=\"st2\" d=\"M5718.39 6092.46h176.31v84.61h-176.31z\"/>\r\n      <path id=\"Facility_10B\" transform=\"matrix(.00284 -1 1 .00284 -563.16 4227.5049)\" class=\"st2\" d=\"M1784.3 2220.96h107.78v350.35H1784.3z\"/>\r\n      <path id=\"Facility_10A\" transform=\"matrix(.00284 -1 1 .00284 -743.3014 4406.1167)\" class=\"st2\" d=\"M1783.79 2400.59h107.78v350.35h-107.78z\"/>\r\n      <path id=\"Facility_2E\" class=\"st2\" d=\"M4576.24 4263.6h867.67v210h-867.67z\"/>\r\n    </g>\r\n    <g id=\"Pins_Ownership\">\r\n      <g id=\"Pin_Facility_2J\">\r\n        <path class=\"st3\" d=\"M2551.84 3649.85c-95 95-114.25 236.99-57.93 351.13l-221.41 359.26L2633 4139.9c114.09 56.13 255.89 36.82 350.8-58.09 119.28-119.28 119.28-312.68 0-431.96-119.28-119.28-312.68-119.28-431.96 0zm353.51 353.52c-75.96 75.96-199.11 75.96-275.06 0s-75.96-199.11 0-275.06 199.11-75.96 275.06 0 75.96 199.1 0 275.06z\"/>\r\n        <circle id=\"CC_Pharmacy_2J\" data-fid=\"3\" cx=\"2767.82\" cy=\"3865.84\" r=\"194.5\"/>\r\n      </g>\r\n      <g id=\"Pin_Facility_3E\">\r\n        <path class=\"st3\" d=\"M1677.88 3589.51c-95 95-114.25 236.99-57.93 351.13l-221.41 359.26 360.5-220.34c114.09 56.13 255.89 36.82 350.8-58.09 119.28-119.28 119.28-312.68 0-431.96-119.28-119.28-312.68-119.28-431.96 0zm353.51 353.52c-75.96 75.96-199.11 75.96-275.06 0-75.96-75.96-75.96-199.11 0-275.06 75.96-75.96 199.11-75.96 275.06 0s75.96 199.1 0 275.06z\"/>\r\n        <circle id=\"CC_Pharmacy_3E\" data-fid=\"16\" cx=\"1893.86\" cy=\"3805.5\" r=\"194.5\"/>\r\n      </g>\r\n      <g id=\"Pin_Facility_10A\">\r\n        <path class=\"st3\" d=\"M1568.89 3340.55c95-95 114.25-236.99 57.93-351.13l221.41-359.26-360.5 220.34c-114.09-56.13-255.89-36.82-350.8 58.09-119.28 119.28-119.28 312.68 0 431.96 119.28 119.28 312.68 119.28 431.96 0zm-353.51-353.52c75.96-75.96 199.11-75.96 275.06 0 75.96 75.96 75.96 199.11 0 275.06-75.96 75.96-199.11 75.96-275.06 0-75.96-75.95-75.96-199.1 0-275.06z\"/>\r\n        <circle id=\"CC_Other_10A\" data-fid=\"13\"  cx=\"1352.91\" cy=\"3124.57\" r=\"194.5\"/>\r\n      </g>\r\n      <g id=\"Pin_Facility_10B\">\r\n        <path class=\"st3\" d=\"M1132.54 2073.69c95 95 236.99 114.25 351.13 57.93l359.26 221.41-220.34-360.5c56.13-114.09 36.82-255.89-58.09-350.8-119.28-119.28-312.68-119.28-431.96 0-119.28 119.28-119.28 312.68 0 431.96zm353.52-353.52c75.96 75.96 75.96 199.11 0 275.06-75.96 75.96-199.11 75.96-275.06 0-75.96-75.96-75.96-199.11 0-275.06 75.95-75.95 199.1-75.95 275.06 0z\"/>\r\n        <circle id=\"CC_Other_10B\" data-fid=\"12\" cx=\"1348.52\" cy=\"1857.71\" r=\"194.5\"/>\r\n      </g>\r\n      <g id=\"Pin_Facility_PET_B3\">\r\n        <path class=\"st3\" d=\"M3349.62 1581.68c-95 95-114.25 236.99-57.93 351.13l-221.41 359.26 360.5-220.34c114.09 56.13 255.89 36.82 350.8-58.09 119.28-119.28 119.28-312.68 0-431.96-119.28-119.28-312.67-119.28-431.96 0zm353.52 353.52c-75.96 75.96-199.11 75.96-275.06 0-75.96-75.96-75.96-199.11 0-275.06 75.96-75.96 199.11-75.96 275.06 0 75.95 75.95 75.95 199.1 0 275.06z\"/>\r\n        <circle id=\"NCI_Facility_PET_B3\" data-fid=\"2\" cx=\"3565.61\" cy=\"1797.67\" r=\"194.5\"/>\r\n      </g>\r\n      <g id=\"Pin_Facility_NMD\">\r\n        <path class=\"st3\" d=\"M3556.34 3388.81c0-134.35-86.79-248.37-207.33-289.25l-97.48-410.6-99.11 410.72c-120.36 40.98-206.98 154.9-206.98 289.13 0 168.69 136.75 305.45 305.45 305.45 168.7-.01 305.45-136.76 305.45-305.45zm-499.94 0c0-107.42 87.08-194.5 194.5-194.5s194.5 87.08 194.5 194.5-87.08 194.5-194.5 194.5-194.5-87.08-194.5-194.5z\"/>\r\n        <circle id=\"NCI_Facility_NMD\" data-fid=\"7\" cx=\"3250.9\" cy=\"3388.81\" r=\"194.5\"/>\r\n      </g>\r\n      <g id=\"Pin_Facility_P-IVAU\">\r\n        <path class=\"st3\" d=\"M6028.59 1181.75c-95 95-114.25 236.99-57.93 351.13l-221.41 359.26 360.5-220.34c114.09 56.13 255.89 36.82 350.8-58.09 119.28-119.28 119.28-312.68 0-431.96-119.28-119.28-312.67-119.28-431.96 0zm353.52 353.52c-75.96 75.96-199.11 75.96-275.06 0-75.96-75.96-75.96-199.11 0-275.06 75.96-75.96 199.11-75.96 275.06 0s75.95 199.1 0 275.06z\"/>\r\n        <circle id=\"CCE_Facility_P-IVAU\" data-fid=\"9\" cx=\"6244.57\" cy=\"1397.74\" r=\"194.5\"/>\r\n      </g>\r\n      <g id=\"Pin_Facility_East_Terrace\">\r\n        <path class=\"st3\" d=\"M5879.99 3036.92c134.35 0 248.37-86.78 289.25-207.33l410.6-97.48-410.72-99.11c-40.98-120.36-154.9-206.98-289.13-206.98-168.69 0-305.44 136.75-305.45 305.44 0 168.71 136.75 305.46 305.45 305.46zm0-499.95c107.42 0 194.5 87.08 194.5 194.5s-87.08 194.5-194.5 194.5-194.5-87.08-194.5-194.5 87.08-194.5 194.5-194.5z\"/>\r\n        <circle id=\"CC_Pharmacy_East_Terrace\" data-fid=\"5\" cx=\"5879.99\" cy=\"2731.47\" r=\"194.5\"/>\r\n      </g>\r\n      <g id=\"Pin_Facility_I-IVAU\">\r\n        <path class=\"st3\" d=\"M6046.3 3552.46c-134.36 0-248.37 86.78-289.25 207.32l-410.6 97.48 410.72 99.11c40.98 120.36 154.9 206.98 289.13 206.98 168.69 0 305.45-136.75 305.45-305.45 0-168.68-136.76-305.44-305.45-305.44zm0 499.95c-107.42 0-194.5-87.08-194.5-194.5s87.08-194.5 194.5-194.5 194.5 87.08 194.5 194.5-87.08 194.5-194.5 194.5z\"/>\r\n        <circle id=\"CCE_Facility_I-VAU\" data-fid=\"17\" cx=\"6046.3\" cy=\"3857.91\" r=\"194.5\"/>\r\n      </g>\r\n      <g id=\"Pin_Facility_2E\">\r\n        <path class=\"st3\" d=\"M6124.81 4647.94c-95-95-236.99-114.25-351.13-57.93l-359.26-221.41 220.34 360.5c-56.13 114.09-36.82 255.89 58.09 350.8 119.28 119.28 312.68 119.28 431.96 0 119.29-119.28 119.29-312.68 0-431.96zm-353.51 353.51c-75.96-75.96-75.96-199.11 0-275.06 75.96-75.96 199.11-75.96 275.06 0 75.96 75.96 75.96 199.11 0 275.06-75.95 75.96-199.1 75.96-275.06 0z\"/>\r\n        <circle id=\"CC_Pharmacy_2E\" data-fid=\"4\" cx=\"5908.83\" cy=\"4863.92\" r=\"194.5\"/>\r\n      </g>\r\n      <g id=\"Pin_Facility_HPC13\">\r\n        <path class=\"st3\" d=\"M6568.1 6441.99c-95-95-236.99-114.25-351.13-57.93l-359.26-221.41 220.34 360.5c-56.13 114.09-36.82 255.89 58.09 350.8 119.28 119.28 312.68 119.28 431.96 0s119.28-312.67 0-431.96zm-353.52 353.52c-75.96-75.96-75.96-199.11 0-275.06 75.96-75.96 199.11-75.96 275.06 0s75.96 199.11 0 275.06-199.1 75.95-275.06 0z\"/>\r\n        <circle id=\"CC_Other_HP13\" data-fid=\"19\" cx=\"6351.75\" cy=\"6657.98\" r=\"194.5\"/>\r\n      </g>\r\n      <!-- <g id=\"Ownership_Facility_Other\">\r\n        <path class=\"st3\" d=\"M3639.09 8304.34c-95-95-236.99-114.25-351.13-57.93L2928.7 8025l220.34 360.5c-56.13 114.09-36.82 255.89 58.09 350.8 119.28 119.28 312.68 119.28 431.96 0 119.28-119.28 119.28-312.67 0-431.96zm-353.51 353.52c-75.96-75.96-75.96-199.11 0-275.07s199.11-75.96 275.06 0c75.96 75.96 75.96 199.11 0 275.06s-199.11 75.96-275.06.01z\"/>\r\n        <circle id=\"CC_Other_T_30\" class=\"st5\" cx=\"3423.11\" cy=\"8520.32\" r=\"194.5\"/>\r\n      </g> -->\r\n      <!-- <g id=\"Ownership_Facility_NIAID\">\r\n        <path class=\"st3\" d=\"M1180.85 10244.69c-95 95-114.25 236.99-57.93 351.13l-221.41 359.26 360.5-220.34c114.09 56.13 255.89 36.82 350.8-58.09 119.28-119.28 119.28-312.68 0-431.96-119.28-119.28-312.68-119.28-431.96 0zm353.51 353.51c-75.96 75.96-199.11 75.96-275.06 0-75.96-75.96-75.96-199.11 0-275.06 75.96-75.96 199.11-75.96 275.06 0 75.96 75.96 75.96 199.11 0 275.06z\"/>\r\n        <circle cx=\"1396.83\" cy=\"10460.67\" r=\"194.5\" fill=\"#c9363c\" stroke=\"#000\" stroke-miterlimit=\"10\"/>\r\n      </g> -->\r\n      <g id=\"Pin_Facility_1B42\">\r\n        <path class=\"st3\" d=\"M5071.5 5836.78c95-95 114.25-236.99 57.93-351.13l221.41-359.26-360.5 220.34c-114.09-56.13-255.89-36.82-350.8 58.09-119.28 119.28-119.28 312.68 0 431.96 119.28 119.28 312.68 119.28 431.96 0zm-353.51-353.52c75.96-75.96 199.11-75.96 275.06 0 75.96 75.96 75.96 199.11 0 275.06-75.96 75.96-199.11 75.96-275.06 0s-75.96-199.1 0-275.06z\"/>\r\n        <circle id=\"CC_Other_HP13_1b42\" data-fid=\"10\" cx=\"4855.52\" cy=\"5620.79\" r=\"194.5\"/>\r\n      </g>\r\n      <g id=\"Pin_Facility_DLM_Image\">\r\n        <path class=\"st3\" d=\"M3738.65 4701.06c95-95 114.25-236.99 57.93-351.13l221.41-359.26-360.5 220.34c-114.09-56.13-255.89-36.82-350.8 58.09-119.28 119.28-119.28 312.68 0 431.96 119.28 119.29 312.68 119.29 431.96 0zm-353.51-353.51c75.96-75.96 199.11-75.96 275.06 0 75.96 75.96 75.96 199.11 0 275.06-75.96 75.96-199.11 75.96-275.06 0-75.96-75.95-75.96-199.11 0-275.06z\"/>\r\n        <circle id=\"NCI_Facility_DLM_Image\"  data-fid=\"6\" cx=\"3522.67\" cy=\"4485.08\" r=\"194.5\"/>\r\n      </g>\r\n      <g id=\"Pin_Facility_PET_Radiopharm\">\r\n        <path class=\"st3\" d=\"M2262.85 2113.21c95 95 236.99 114.25 351.13 57.93l359.26 221.41-220.34-360.5c56.13-114.09 36.82-255.89-58.09-350.8-119.28-119.28-312.68-119.28-431.96 0-119.28 119.28-119.28 312.68 0 431.96zm353.52-353.51c75.96 75.96 75.96 199.11 0 275.06s-199.11 75.96-275.06 0c-75.96-75.96-75.96-199.11 0-275.06 75.95-75.96 199.1-75.96 275.06 0z\"/>\r\n        <circle id=\"NCI_Facility_PET_Radiopharm\"  data-fid=\"1\" cx=\"2478.84\" cy=\"1897.23\" r=\"194.5\"/>\r\n      </g>\r\n    </g>\r\n    <!-- <g id=\"Text_Facility\">\r\n      <path class=\"st9\" d=\"M319.86 5600.45h803.1v257.5h-803.1z\"/>\r\n      <text transform=\"translate(352.6422 5817.9722)\" class=\"st10 st11 st12\">\r\n        MLP9\r\n      </text>\r\n      <path class=\"st9\" d=\"M1093.57 10909.15h606.51v259.06h-606.51z\"/>\r\n      <text transform=\"translate(1146.963 11126.6748)\" class=\"st10 st11 st12\">\r\n        29B\r\n      </text>\r\n      <path class=\"st9\" d=\"M3228.61 11092.03h573.17v255.07h-573.17z\"/>\r\n      <text transform=\"translate(3259.7632 11309.5498)\" class=\"st10 st11 st12\">\r\n        29A\r\n      </text>\r\n      <path class=\"st9\" d=\"M2223.7 9102.87h502.31v260.91H2223.7z\"/>\r\n      <text transform=\"translate(2312.2441 9320.3896)\" class=\"st10 st11 st12\">\r\n        30\r\n      </text>\r\n      <path class=\"st9\" d=\"M758.01 8145.91h501.61v292.25H758.01z\"/>\r\n      <text transform=\"translate(846.2072 8363.4307)\" class=\"st10 st11 st12\">\r\n        49\r\n      </text>\r\n      <path class=\"st9\" d=\"M3463.25 651.23h2001.86v236.96H3463.25z\"/>\r\n      <text transform=\"translate(4100.75 2500.7513)\">\r\n        <tspan x=\"0\" y=\"0\" class=\"st10 st11 st12\">10</tspan><tspan x=\"1994.86\" y=\"0\" class=\"st11 st12\" fill=\"#010101\"></tspan>\r\n      </text>\r\n    </g> -->\r\n    <!-- <g id=\"Facility_Key\">\r\n      <text transform=\"translate(5559.8887 9914.2305)\">\r\n        <tspan x=\"0\" y=\"0\" class=\"st10 st11 st14\">CCE Facility</tspan><tspan x=\"0\" y=\"434.91\" class=\"st10 st11 st14\">CC Pharmacy Facilility</tspan><tspan x=\"0\" y=\"869.81\" class=\"st10 st11 st14\">CC Other Facilities</tspan><tspan x=\"0\" y=\"1304.72\" class=\"st10 st11 st14\">NCI Facility</tspan><tspan x=\"0\" y=\"1739.62\" class=\"st10 st11 st14\">NIAID Facility</tspan>\r\n      </text>\r\n      <circle id=\"Key_Icon_CCE_Facility\" cx=\"5285.84\" cy=\"9814.34\" r=\"143.89\" fill=\"#94762d\" stroke=\"#000\" stroke-width=\"2.5\" stroke-miterlimit=\"10\"/>\r\n      <circle id=\"Key_Icon_CC_Pharmacy_Facilility\" cx=\"5297.5\" cy=\"10249.25\" r=\"143.89\" fill=\"#b5fd19\" stroke=\"#000\" stroke-width=\"2.5\" stroke-miterlimit=\"10\"/>\r\n      <circle id=\"Key_Icon_CC_Other_Facilities\" cx=\"5285.84\" cy=\"10684.16\" r=\"143.89\" fill=\"#fb09bf\" stroke=\"#000\" stroke-width=\"2.5\" stroke-miterlimit=\"10\"/>\r\n      <circle id=\"Key_Icon_NCI_Facility\" cx=\"5305.28\" cy=\"11119.07\" r=\"143.89\" fill=\"#0ff\" stroke=\"#000\" stroke-width=\"2.5\" stroke-miterlimit=\"10\"/>\r\n      <circle id=\"Key_Icon_NIAID_Facility\" cx=\"5285.84\" cy=\"11553.98\" r=\"143.89\" fill=\"#c9363c\" stroke=\"#000\" stroke-width=\"2.5\" stroke-miterlimit=\"10\"/>\r\n    </g> -->\r\n  </svg>\r\n  "
        },
        {
            "name": "FacilityDescriptionComponent",
            "id": "component-FacilityDescriptionComponent-035d8a5e335f136fe853c328dc6472f5e0322cd895582a704a204d7d70a632c0a0d3b3b57be65e76d6655bc059ab10f78fff570d16a8738b682e104ddd34e24f",
            "file": "src/app/facility-description/facility-description.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-facility-description",
            "styleUrls": [
                "./facility-description.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./facility-description.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "aboutText",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "facilityId",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "photos",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "literal type[]",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-facility-description',\r\n  templateUrl: './facility-description.component.html',\r\n  styleUrls: ['./facility-description.component.css']\r\n})\r\nexport class FacilityDescriptionComponent implements OnInit {\r\n\r\n  @Input()\r\n  facilityId = 0;\r\n  \r\n  @Input()\r\n  aboutText:string = ''\r\n\r\n  @Input()\r\n  photos:{url:string, docTitle:string}[] = []\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".container {\r\n    display:block;\r\n    border:2px solid grey;\r\n    font: Roboto;\r\n    font-size: 14pt;\r\n}\r\n\r\n",
                    "styleUrl": "./facility-description.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 17
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "\r\n<div class=\"flex justify-content-between gap-4\" style=\"width:1200px;\">\r\n\r\n    <div class=\"container\">\r\n        <div id=\"map-container\" class=\"flex justify-content-center\">\r\n\r\n            <div style=\"width:500px; height:auto;\">\r\n\r\n                <app-facility-all-map [facilityId]=\"facilityId\"></app-facility-all-map>\r\n                <div style=\"background-color:gray; color:black; text-align: center;\">\r\n                    Facility Location Map\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div id=\"images-container\" class=\"flex justify-content-center\">\r\n            <div class=\"card\">\r\n                <div style=\"display:flex;flex-wrap: wrap; justify-content:space-around\">\r\n                    <div *ngFor=\"let photo of photos\"\r\n                        style=\"border:0px solid black; padding:4px;\">\r\n                        <p-image [src]=\"photo.url\" [preview]=\"true\" height=\"150\" width=\"150\" \r\n                            [alt]=\"photo.docTitle\"></p-image><br />\r\n                        <span style=\"font-size:x-small; font-weight:bold;\">{{photo.docTitle}}</span>\r\n                    </div>\r\n                    <div *ngIf=\"photos.length == 0\">\r\n                        <span>No Pictures Available</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div id=\"about-container\" class=\"container overflow-scroll w-9\" style=\"max-height: 980px;\">\r\n        <app-static-content-container [page]=\"aboutText\"></app-static-content-container>\r\n    </div>\r\n\r\n</div>"
        },
        {
            "name": "FacilityInfoPageComponent",
            "id": "component-FacilityInfoPageComponent-fa107ab94de213163b771160398d1df639d7ce32c6b049dcd357fbb15c6a09ec2bfaf539b4698e1a2b99d11182d373561fccfba8e71721709e7151cea7371413",
            "file": "src/app/facility-info-page/facility-info-page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "DialogService"
                },
                {
                    "name": "FacilityInfoPageService"
                },
                {
                    "name": "DataService"
                }
            ],
            "selector": "app-facility-info-page",
            "styleUrls": [
                "./facility-info-page.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./facility-info-page.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "diagramUrl",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SafeResourceUrl",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "dialogService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DialogService",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "documentPage",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "hasDiagram",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "items",
                    "defaultValue": "[\r\n    {\r\n      label: \"About\",\r\n      icon: \"pi pi-fw pi-home\",\r\n      command: (event: any) => {\r\n        this.selectedTab = 'about';\r\n      }\r\n    },\r\n    {\r\n      label: \"Diagram\",\r\n      icon: \"pi pi-map\",\r\n      command: (event: any) => {\r\n        this.selectedTab = 'diagram';\r\n      }\r\n    },\r\n    {\r\n      label: \"Documents\",\r\n      icon: \"pi pi-fw pi-file\",\r\n      command: (event: any) => {\r\n        this.selectedTab = 'documents'\r\n      }\r\n    }, {\r\n      label: \"Pictures\",\r\n      icon: \"pi pi-fw pi-images\",\r\n      command: (event: any) => {\r\n        this.selectedTab = 'pictures'\r\n      }\r\n    }\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 57
                },
                {
                    "name": "ref",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DynamicDialogRef",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "selectedTab",
                    "defaultValue": "'about'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 55
                },
                {
                    "name": "service",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FacilityInfoPageService",
                    "optional": false,
                    "description": "",
                    "line": 30,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "contactUsClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 88,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 52,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { } from '../safe-url.pipe';\r\n\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { DialogService, DynamicDialogRef } from 'primeng/dynamicdialog';\r\nimport { DomSanitizer, SafeResourceUrl } from '@angular/platform-browser';\r\n\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { ContactUsDialogComponent } from '../contact-us-dialog/contact-us-dialog.component';\r\nimport { ContactUsMessage } from '../api/models';\r\nimport { DataService } from '../api/data.service';\r\nimport { FacilityInfoPageService } from './facility-info-page.service';\r\nimport { filter } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-facility-info-page',\r\n  templateUrl: './facility-info-page.component.html',\r\n  styleUrls: ['./facility-info-page.component.css'],\r\n  providers: [DialogService, FacilityInfoPageService, DataService]\r\n})\r\nexport class FacilityInfoPageComponent implements OnInit {\r\n\r\n  ref!: DynamicDialogRef;\r\n\r\n  documentPage: string = '';\r\n  diagramUrl: SafeResourceUrl = '';\r\n  hasDiagram = false;\r\n\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    public service: FacilityInfoPageService,\r\n    public dialogService: DialogService,\r\n    private dataService: DataService,\r\n    private sanitizer: DomSanitizer\r\n  ) {\r\n\r\n    this.activatedRoute.params\r\n      .pipe(\r\n        filter(Boolean)\r\n      )\r\n      .subscribe((params) => {\r\n        this.service.Load(params.facilityId)\r\n      });\r\n\r\n    this.service.diagram$.subscribe(d => {\r\n      this.diagramUrl = this.sanitizer.bypassSecurityTrustResourceUrl(d);\r\n      this.hasDiagram = Boolean(d);\r\n    })\r\n\r\n  }\r\n\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  selectedTab = 'about';\r\n\r\n  items = [\r\n    {\r\n      label: \"About\",\r\n      icon: \"pi pi-fw pi-home\",\r\n      command: (event: any) => {\r\n        this.selectedTab = 'about';\r\n      }\r\n    },\r\n    {\r\n      label: \"Diagram\",\r\n      icon: \"pi pi-map\",\r\n      command: (event: any) => {\r\n        this.selectedTab = 'diagram';\r\n      }\r\n    },\r\n    {\r\n      label: \"Documents\",\r\n      icon: \"pi pi-fw pi-file\",\r\n      command: (event: any) => {\r\n        this.selectedTab = 'documents'\r\n      }\r\n    }, {\r\n      label: \"Pictures\",\r\n      icon: \"pi pi-fw pi-images\",\r\n      command: (event: any) => {\r\n        this.selectedTab = 'pictures'\r\n      }\r\n    }\r\n  ];\r\n\r\n\r\n  contactUsClick() {\r\n    this.ref = this.dialogService.open(ContactUsDialogComponent, { header: 'Contact Us' });\r\n\r\n    this.ref.onClose.subscribe((message: ContactUsMessage) => {\r\n      if (message) {\r\n        this.dataService.contactUs(message).subscribe();\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".nav-toggle { cursor: pointer;}\r\n.contact-link { cursor: pointer; text-decoration: underline;}",
                    "styleUrl": "./facility-info-page.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "activatedRoute",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "service",
                        "type": "FacilityInfoPageService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "dialogService",
                        "type": "DialogService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "dataService",
                        "type": "DataService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "sanitizer",
                        "type": "DomSanitizer",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 26,
                "jsdoctags": [
                    {
                        "name": "activatedRoute",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "service",
                        "type": "FacilityInfoPageService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "dialogService",
                        "type": "DialogService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "dataService",
                        "type": "DataService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "sanitizer",
                        "type": "DomSanitizer",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"card-body designCardBody\">\r\n    <div>\r\n        <div style=\"position: relative; left: 0; top: 0;\">\r\n            <img id=\"apf1\" src=\"/assets/images/I-IVAU.jpg\">\r\n        </div>\r\n    </div>\r\n\r\n    <p-tabMenu [model]=\"items\"></p-tabMenu>\r\n\r\n    <div id=\"about-tab\" *ngIf=\"selectedTab=='about'\" style=\"width:80em\">\r\n        <app-static-content-container [page]=\"(service.aboutPage$ | async) || ''\"></app-static-content-container>\r\n    </div>\r\n\r\n    <div id=\"documents-tab\" *ngIf=\"selectedTab=='documents'\">\r\n        <span class=\"cardContent\">\r\n            <p style=\"width:80em\"> The documents, below, are an excerpt of the full, controlled and uncontrolled facility documents for\r\n                this APF, provided for your convenience. For access to the full archive of documents, or for access to\r\n                the controlled version of any of these documents, please <a (click)=\"contactUsClick()\" class=\"contact-link\">contact</a> FCIS.\r\n\r\n                The documents listed as Record Of Work As Constructed (ROWAC) are As-Built documents that have been\r\n                verified.</p>\r\n\r\n            <div>\r\n                <div *ngFor=\"let docGroup of (service.documents$ | async) || []\">\r\n                    <div *ngIf=\"docGroup.description !== 'FacilityDiagram'\">\r\n                    <b>{{docGroup.description}}</b>\r\n                    <ul>\r\n                        <li *ngFor=\"let atch of docGroup.attachments\">\r\n                            <a [href]=\"atch.url\" target=\"_blank\">{{atch.docTitle}}</a>\r\n                        </li>\r\n                    </ul>\r\n                    </div>\r\n                </div>\r\n                <div *ngIf=\"((service.documents$ | async) || []).length == 0\">\r\n                    <span>No Documents Available</span>\r\n                </div>\r\n            </div>\r\n        </span>\r\n    </div>\r\n\r\n    <div id=\"diagram-tab\" *ngIf=\"selectedTab=='diagram'\" style=\"height:800px\">\r\n        <a *ngIf=\"hasDiagram\"[href]=\"diagramUrl\" target=\"_blank\">Open in new tab</a>\r\n        <object *ngIf=\"hasDiagram\" [data]=\"diagramUrl\" type=\"application/pdf\" width=\"100%\" height=\"100%\"></object>\r\n        <div *ngIf=\"!hasDiagram\">No Diagram Available</div>\r\n    </div>\r\n\r\n    <div id=\"documents-tab\" *ngIf=\"selectedTab=='pictures'\">\r\n        <div class=\"card\">\r\n            <div style=\"display:flex;flex-wrap: wrap; justify-content:flex-start; gap:8px;\">\r\n                <div *ngFor=\"let photo of (service.pictures$ | async) || []\"\r\n                    style=\"border:1px solid black; padding:4px;\">\r\n                    <p-image [src]=\"photo.url\" [preview]=\"true\" width=\"200\" height=\"200\"\r\n                        [alt]=\"photo.docTitle\"></p-image><br />\r\n                    <span style=\"font-size:smaller; font-weight:bold;\">{{photo.docTitle}}</span>\r\n                </div>\r\n                <div *ngIf=\"((service.pictures$ | async) || []).length == 0\">\r\n                    <span>No Pictures Available</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n\r\n</div>"
        },
        {
            "name": "FacilityLayoutComponent",
            "id": "component-FacilityLayoutComponent-86c6d7aefb2648c81ef06bdc2445f984b3048d622398d8e393bdb379f1d39439d8b5736d290fca319c5543c56ccbe74ea27e5b91962ee704d63c993dd923a535",
            "file": "src/app/facility-layout/facility-layout.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "DialogService"
                },
                {
                    "name": "FacilityInfoPageService"
                },
                {
                    "name": "DataService"
                }
            ],
            "selector": "app-facility-layout",
            "styleUrls": [
                "./facility-layout.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./facility-layout.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "allStatusOptions",
                    "defaultValue": "[\r\n    this.dashboardOptions.dP,\r\n    this.dashboardOptions.ach,\r\n    this.dashboardOptions.temp,\r\n    this.dashboardOptions.hum,\r\n    this.dashboardOptions.composite,\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 91
                },
                {
                    "name": "allStatusOptionsExceptDP",
                    "defaultValue": "[\r\n    this.dashboardOptions.ach,\r\n    this.dashboardOptions.temp,\r\n    this.dashboardOptions.hum,\r\n    this.dashboardOptions.composite\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 99
                },
                {
                    "name": "dashboardOptions",
                    "defaultValue": "{\r\n    dP:   {label:\"dP Dashboard\", command:()=>this.selectDashboard(\"DP\")},\r\n    ach:  {label:\"ACH Dashboard\", command:()=>this.selectDashboard(\"Airx\")},\r\n    temp: {label:\"TEMP Dashboard\", command:()=>this.selectDashboard(\"Temp\")},\r\n    hum:  {label:\"HUMID Dashboard\", command:()=>this.selectDashboard(\"Hum\")},\r\n    composite: {label:\"COMPOSITE Dashboard\", command:()=>this.selectDashboard(\"Sum All\")},\r\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 83
                },
                {
                    "name": "dialogService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DialogService",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "facility",
                    "defaultValue": "{\r\n    title:'Clinical Center - Center for Cellular Engineering'\r\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 153
                },
                {
                    "name": "facilityDashboards",
                    "defaultValue": "{\r\n    \"CC\": [this.dashboardOptions.composite],\r\n    \"CCE\": [this.dashboardOptions.composite],\r\n    \"CCPharmacy\": [this.dashboardOptions.composite],\r\n    \"CCOther\": [this.dashboardOptions.composite],\r\n    \"NCI\": [this.dashboardOptions.composite],\r\n    \"NIAID\": [this.dashboardOptions.composite],\r\n    \"1\": this.allStatusOptionsExceptDP,\r\n    \"2\": this.allStatusOptionsExceptDP,\r\n    \"3\": this.allStatusOptions,\r\n    \"4\": [{label:\"Unavailable\"}], //this.allStatusOptionsExceptDP,\r\n    \"5\": this.allStatusOptions,\r\n    \"6\": this.allStatusOptions,\r\n    \"7\": [{label:\"Unavailable\"}], //this.allStatusOptionsExceptDP,\r\n    \"8\": [{label:\"Unavailable\"}], //this.allStatusOptionsExceptDP,\r\n    \"9\": [{label:\"Unavailable\"}], //this.allStatusOptionsExceptDP,\r\n    \"10\": this.allStatusOptions,\r\n    \"11\": this.allStatusOptions,\r\n    \"12\": this.allStatusOptions,\r\n    \"13\": this.allStatusOptions,\r\n    \"14\": this.allStatusOptionsExceptDP,\r\n    \"15\": this.allStatusOptionsExceptDP,\r\n    \"16\": [{label:\"Unavailable\"}], // this.allStatusOptionsExceptDP,\r\n    \"17\": this.allStatusOptionsExceptDP,\r\n    \"18\": this.allStatusOptionsExceptDP,\r\n    \"19\": this.allStatusOptions,\r\n    \"20\": [{label:\"Unavailable\"}], // this.allStatusOptionsExceptDP,\r\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 106
                },
                {
                    "name": "facilityId",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 42
                },
                {
                    "name": "facilityMenuItems",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": false,
                    "description": "",
                    "line": 44
                },
                {
                    "name": "facilitySections",
                    "defaultValue": "{\r\n    \"1\": \"PET_1\",\r\n    \"2\": \"PET_B3\",\r\n    \"3\": \"2J\",\r\n    \"5\": \"E_TER\",\r\n    \"6\": \"DLM_SL\",\r\n    \"9\": \"P_IVAU\",\r\n    \"10\": \"WF\",\r\n    \"11\": \"T30\",\r\n    \"12\": \"Tr1\",\r\n    \"13\": \"Tr2\",\r\n    \"17\": \"IIVAU\",\r\n    \"19\": \"HPP\"\r\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 135
                },
                {
                    "name": "portfolioFacilities",
                    "defaultValue": "{\r\n    'CC':[1,2,3,4,5,6,7,17],\r\n    'CCE':[3,4,5],  //2J, 12E, T10B\r\n    'CCPharmacy':[17,9], // CC Pharmacy I-IVAU, CC Pharmacy P-IVAU\r\n    'CCOther':[1,2,6,7], // DLM Sterility Lab, Interim Nuclear Pharmacy, Nuclear Pharmacy, PET Nuclear Pharmacy, PET Radiopharmacy\r\n    'NCI':[10,19,11,12,13], //SB 1B42, SB Hyperpolarized C-13 Facility, SB TIL Modular Facility T30, NCI Trailer 1 (TR10B), NCI Trailer 2 (TR10A)\r\n    'NIAID':[20] //Pilot Bioproduction Facility (PBF)\r\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 46
                },
                {
                    "name": "portfolioId",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 43
                },
                {
                    "name": "ref",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DynamicDialogRef",
                    "optional": false,
                    "description": "",
                    "line": 41
                },
                {
                    "name": "selectedDashboard",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 151
                },
                {
                    "name": "selectedTab",
                    "defaultValue": "'description'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 150
                },
                {
                    "name": "service",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FacilityInfoPageService",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "contactUsClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 198,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getFacilityMenuItems",
                    "args": [
                        {
                            "name": "facIdOrPort",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "{}",
                    "typeParameters": [],
                    "line": 157,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "facIdOrPort",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "selectDashboard",
                    "args": [
                        {
                            "name": "dashboardId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 77,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "dashboardId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { DialogService, DynamicDialogRef } from 'primeng/dynamicdialog';\r\n\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { ContactUsDialogComponent } from '../contact-us-dialog/contact-us-dialog.component';\r\nimport { ContactUsMessage } from '../api/models';\r\nimport { DataService } from '../api/data.service';\r\nimport { FacilityInfoPageService } from '../facility-info-page/facility-info-page.service';\r\nimport { filter } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-facility-layout',\r\n  templateUrl: './facility-layout.component.html',\r\n  styleUrls: ['./facility-layout.component.css'],\r\n  providers:[DialogService, FacilityInfoPageService, DataService]\r\n})\r\nexport class FacilityLayoutComponent implements OnInit {\r\n\r\n  constructor(\r\n    public dialogService: DialogService,\r\n    private activatedRoute: ActivatedRoute,\r\n    private dataService: DataService,\r\n    public service: FacilityInfoPageService) { \r\n\r\n      this.activatedRoute.params\r\n      .pipe(\r\n        filter(Boolean)\r\n      )\r\n      .subscribe((params) => {\r\n        this.service.Load(params.facilityId);\r\n        this.facilityId = Number.parseInt(params.facilityId) || 0;\r\n        this.portfolioId = params.portfolio || \"\";\r\n        this.facilityMenuItems = this.getFacilityMenuItems(String(this.facilityId || this.portfolioId))\r\n        this.selectedTab = 'description';\r\n      });\r\n    }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n  \r\n  ref!: DynamicDialogRef;\r\n  facilityId = 0;\r\n  portfolioId = '';\r\n  facilityMenuItems: any[] = [];\r\n\r\n  portfolioFacilities = {\r\n    'CC':[1,2,3,4,5,6,7,17],\r\n    'CCE':[3,4,5],  //2J, 12E, T10B\r\n    'CCPharmacy':[17,9], // CC Pharmacy I-IVAU, CC Pharmacy P-IVAU\r\n    'CCOther':[1,2,6,7], // DLM Sterility Lab, Interim Nuclear Pharmacy, Nuclear Pharmacy, PET Nuclear Pharmacy, PET Radiopharmacy\r\n    'NCI':[10,19,11,12,13], //SB 1B42, SB Hyperpolarized C-13 Facility, SB TIL Modular Facility T30, NCI Trailer 1 (TR10B), NCI Trailer 2 (TR10A)\r\n    'NIAID':[20] //Pilot Bioproduction Facility (PBF)\r\n  }\r\n  \r\n//   FacilityId\tFacilityName\r\n// 1\tCC B1 PET Radiopharmacy\r\n// 2\tCC B3 PET Radiochemistry\r\n// 3\tCC-CCE 2J\r\n// 4\tCC-CCE 12E\r\n// 5\tCC-CCE East Terrace Modular (T10B)\r\n// 6\tCC DLM Sterility\r\n// 7\tCC-NMD Radiopharmacy\r\n// 8\tCC PHAR I-IVAU\r\n// 9\tCC PHAR Pharmacy &amp; IVAU\r\n// 10\tNCI 1B42\r\n// 11\tNCI TIL Modular (T30)\r\n// 12\tNCI Trailer 1 (10B)\r\n// 13\tNCI Trailer 2 (10A)\r\n// 14\tAPF Common\r\n// 15\tNCI Surgery Branch 3 West TIL Lab\r\n// 16\tCC CCE 3T Cell Therapy Lab\r\n// 17\tCC PHAR I-IVAU Expansion\r\n// 18\tNIAID Viral Seed Stock \r\n// 19\tNCI Hyperpolarized C-13 Facility \r\n// 20\tPilot Bioproduction Facility (PBF) \r\n  \r\n  selectDashboard(dashboardId:string) {\r\n    this.selectedTab = 'dashboard';\r\n    this.selectedDashboard = dashboardId;\r\n  }\r\n\r\n\r\n  dashboardOptions = {\r\n    dP:   {label:\"dP Dashboard\", command:()=>this.selectDashboard(\"DP\")},\r\n    ach:  {label:\"ACH Dashboard\", command:()=>this.selectDashboard(\"Airx\")},\r\n    temp: {label:\"TEMP Dashboard\", command:()=>this.selectDashboard(\"Temp\")},\r\n    hum:  {label:\"HUMID Dashboard\", command:()=>this.selectDashboard(\"Hum\")},\r\n    composite: {label:\"COMPOSITE Dashboard\", command:()=>this.selectDashboard(\"Sum All\")},\r\n  }\r\n\r\n  allStatusOptions = [\r\n    this.dashboardOptions.dP,\r\n    this.dashboardOptions.ach,\r\n    this.dashboardOptions.temp,\r\n    this.dashboardOptions.hum,\r\n    this.dashboardOptions.composite,\r\n  ]\r\n\r\n  allStatusOptionsExceptDP = [\r\n    this.dashboardOptions.ach,\r\n    this.dashboardOptions.temp,\r\n    this.dashboardOptions.hum,\r\n    this.dashboardOptions.composite\r\n  ]\r\n\r\n  facilityDashboards:{[key:string]:any} = {\r\n    \"CC\": [this.dashboardOptions.composite],\r\n    \"CCE\": [this.dashboardOptions.composite],\r\n    \"CCPharmacy\": [this.dashboardOptions.composite],\r\n    \"CCOther\": [this.dashboardOptions.composite],\r\n    \"NCI\": [this.dashboardOptions.composite],\r\n    \"NIAID\": [this.dashboardOptions.composite],\r\n    \"1\": this.allStatusOptionsExceptDP,\r\n    \"2\": this.allStatusOptionsExceptDP,\r\n    \"3\": this.allStatusOptions,\r\n    \"4\": [{label:\"Unavailable\"}], //this.allStatusOptionsExceptDP,\r\n    \"5\": this.allStatusOptions,\r\n    \"6\": this.allStatusOptions,\r\n    \"7\": [{label:\"Unavailable\"}], //this.allStatusOptionsExceptDP,\r\n    \"8\": [{label:\"Unavailable\"}], //this.allStatusOptionsExceptDP,\r\n    \"9\": [{label:\"Unavailable\"}], //this.allStatusOptionsExceptDP,\r\n    \"10\": this.allStatusOptions,\r\n    \"11\": this.allStatusOptions,\r\n    \"12\": this.allStatusOptions,\r\n    \"13\": this.allStatusOptions,\r\n    \"14\": this.allStatusOptionsExceptDP,\r\n    \"15\": this.allStatusOptionsExceptDP,\r\n    \"16\": [{label:\"Unavailable\"}], // this.allStatusOptionsExceptDP,\r\n    \"17\": this.allStatusOptionsExceptDP,\r\n    \"18\": this.allStatusOptionsExceptDP,\r\n    \"19\": this.allStatusOptions,\r\n    \"20\": [{label:\"Unavailable\"}], // this.allStatusOptionsExceptDP,\r\n  }\r\n\r\n  facilitySections:{[key:string]:string} = {\r\n    \"1\": \"PET_1\",\r\n    \"2\": \"PET_B3\",\r\n    \"3\": \"2J\",\r\n    \"5\": \"E_TER\",\r\n    \"6\": \"DLM_SL\",\r\n    \"9\": \"P_IVAU\",\r\n    \"10\": \"WF\",\r\n    \"11\": \"T30\",\r\n    \"12\": \"Tr1\",\r\n    \"13\": \"Tr2\",\r\n    \"17\": \"IIVAU\",\r\n    \"19\": \"HPP\"\r\n  }\r\n\r\n  selectedTab = 'description';\r\n  selectedDashboard = '';\r\n\r\n  facility = {\r\n    title:'Clinical Center - Center for Cellular Engineering'\r\n  };\r\n\r\n  getFacilityMenuItems(facIdOrPort:string){\r\n    const items = [\r\n      {\r\n        label: \"Facility Description\",\r\n        command: (event: any) => {\r\n          this.selectedTab = 'description';\r\n        }\r\n      },\r\n      {\r\n        label: \"Facility Dashboard\",\r\n        items:this.facilityDashboards[String(facIdOrPort)] || [{label:'No dashboards available'}]\r\n      },\r\n      {\r\n        label: \"Facility Reports\",\r\n        command: (event: any) => {\r\n          this.selectedTab = 'facility_reports'\r\n        }\r\n      }, \r\n      {\r\n        label: \"Facility Documents\",\r\n        command: (event: any) => {\r\n          this.selectedTab = 'documents'\r\n        }\r\n      },\r\n      // {\r\n      //   label: \"Condition Reports\",\r\n      //   command: (event: any) => {\r\n      //     this.selectedTab = 'condition_reports'\r\n      //   }\r\n      // },\r\n      // {\r\n      //   label: \"FCIS Resources\",\r\n      //   command: (event: any) => {\r\n      //     this.selectedTab = 'fcis_resources'\r\n      //   }\r\n      // }\r\n    ];\r\n    return items;\r\n  }\r\n  \r\n\r\n  contactUsClick() {\r\n    this.ref = this.dialogService.open(ContactUsDialogComponent, { header: 'Contact Us' });\r\n\r\n    this.ref.onClose.subscribe((message: ContactUsMessage) => {\r\n      if (message) {\r\n        this.dataService.contactUs(message).subscribe();\r\n      }\r\n    });\r\n  }\r\n\r\n  \r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".facility-title{\r\n    color: darkred;\r\n}\r\n\r\n::ng-deep .p-menuitem-text {\r\n    white-space: nowrap;\r\n}\r\n\r\n::ng-deep .p-menubar {\r\n    border:0;\r\n    background-color:rgba(0,0,0,0); /* transparent */\r\n  }",
                    "styleUrl": "./facility-layout.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "dialogService",
                        "type": "DialogService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "activatedRoute",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "dataService",
                        "type": "DataService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "service",
                        "type": "FacilityInfoPageService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 17,
                "jsdoctags": [
                    {
                        "name": "dialogService",
                        "type": "DialogService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "activatedRoute",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "dataService",
                        "type": "DataService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "service",
                        "type": "FacilityInfoPageService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"card-body designCardBody\">\r\n\r\n    <h2 class=\"facility-title\">{{service.title$ | async}}</h2>\r\n    <p-menubar [model]=\"facilityMenuItems\"></p-menubar>\r\n\r\n    <div id=\"description-tab\" *ngIf=\"selectedTab=='description'\">\r\n        <app-facility-description [facilityId]=\"facilityId\" [aboutText]=\"(service.aboutPage$ | async) || ''\"\r\n            [photos]=\"(service.pictures$ | async) || []\">\r\n        </app-facility-description>\r\n    </div>\r\n\r\n    <div id=\"dashboard-tab\" *ngIf=\"selectedTab=='dashboard'\">\r\n        <!-- <app-apf-portfolio-ic-dashboard></app-apf-portfolio-ic-dashboard> -->\r\n        <app-facility-timeline-dashboard [facility]=\"(service.facility$ | async) || {}\"\r\n            [dashboardId]=\"selectedDashboard\"></app-facility-timeline-dashboard>\r\n    </div>\r\n\r\n    <div id=\"facility-reports-tab\" *ngIf=\"selectedTab=='facility_reports'\">\r\n        <app-facility-reports [facilityId]=\"facilityId\"></app-facility-reports>\r\n    </div>\r\n\r\n    <div id=\"documents-tab\" *ngIf=\"selectedTab=='documents'\">\r\n        <span class=\"cardContent\">\r\n            <p style=\"width:80em\"> The documents, below, are an excerpt of the full, controlled and uncontrolled\r\n                facility documents for\r\n                this APF, provided for your convenience. For access to the full archive of documents, or for access to\r\n                the controlled version of any of these documents, please <a (click)=\"contactUsClick()\"\r\n                    class=\"contact-link\">contact</a> FCIS.\r\n\r\n                The documents listed as Record Of Work As Constructed (ROWAC) are As-Built documents that have been\r\n                verified.</p>\r\n\r\n            <div>\r\n                <div *ngFor=\"let docGroup of (service.documents$ | async) || []\">\r\n                    <div *ngIf=\"docGroup.description !== 'FacilityDiagram'\">\r\n                        <b>{{docGroup.description}}</b>\r\n                        <ul>\r\n                            <li *ngFor=\"let atch of docGroup.attachments\">\r\n                                <a [href]=\"atch.url\" target=\"_blank\">{{atch.docTitle}}</a>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n                <div *ngIf=\"((service.documents$ | async) || []).length == 0\">\r\n                    <span>No Documents Available</span>\r\n                </div>\r\n            </div>\r\n        </span>\r\n    </div>\r\n\r\n    <div id=\"condition-reports-tab\" *ngIf=\"selectedTab=='condition_reports'\">\r\n        <h2>Condition Reports</h2>\r\n    </div>\r\n\r\n    <!-- <div id=\"fcis-resources-tab\" *ngIf=\"selectedTab=='fcis_resources'\">\r\n        <app-fcis-resources></app-fcis-resources>\r\n    </div> -->\r\n\r\n</div>"
        },
        {
            "name": "FacilityReportsComponent",
            "id": "component-FacilityReportsComponent-05068c5c0d10278996b119d27bf147bdbe4b6f0a07b7a01df8ac1d776a029262ff5e4c02094cc31cfe7608e8e2e018bde2c768c2494d8772b45c2d115a56b931",
            "file": "src/app/facility-reports/facility-reports.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-facility-reports",
            "styleUrls": [
                "./facility-reports.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./facility-reports.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "facilityId",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "number",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "baseUrl",
                    "defaultValue": "environment.facilityReportsBaseUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\r\n\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-facility-reports',\r\n  templateUrl: './facility-reports.component.html',\r\n  styleUrls: ['./facility-reports.component.css']\r\n})\r\nexport class FacilityReportsComponent implements OnInit {\r\n\r\n  @Input()\r\n  facilityId:number = 0\r\n  \r\n  constructor() { }\r\n\r\n  baseUrl = environment.facilityReportsBaseUrl;\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "ul {\r\n    list-style-type:none;\r\n}",
                    "styleUrl": "./facility-reports.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 13
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "\r\n<ul>\r\n    <li *ngIf=\"facilityId==3 || facilityId==16 || facilityId==5\" >\r\n        <b>CCE</b>\r\n        <ul>\r\n            <li *ngIf=\"facilityId==3\">\r\n                <b>2J</b>\r\n                <ul>\r\n                    <li><a target=\"_blank\" href=\"{{baseUrl}}/CCE/2J/2J%20MANUFACTURING%20FACILITY%20REPORT%20%20April%202022.pdf\">2J\r\n                            MANUFACTURING FACILITY REPORT April 2022.pdf</a></li>\r\n                    <li><a target=\"_blank\" target=\"_blank\" href=\"{{baseUrl}}/CCE/2J/2J%20MANUFACTURING%20FACILITY%20REPORT%20%20August%202022.pdf\">2J\r\n                            MANUFACTURING FACILITY REPORT August 2022.pdf</a></li>\r\n                    <li><a target=\"_blank\" href=\"{{baseUrl}}/CCE/2J/2J%20MANUFACTURING%20FACILITY%20REPORT%20%20December%202022.pdf\">2J\r\n                            MANUFACTURING FACILITY REPORT December 2022.pdf</a></li>\r\n                    <li><a target=\"_blank\" href=\"{{baseUrl}}/CCE/2J/2J%20MANUFACTURING%20FACILITY%20REPORT%20%20February%202023.pdf\">2J\r\n                            MANUFACTURING FACILITY REPORT February 2023.pdf</a></li>\r\n                    <li><a target=\"_blank\" href=\"{{baseUrl}}/CCE/2J/2J%20MANUFACTURING%20FACILITY%20REPORT%20%20January%202022.pdf\">2J\r\n                            MANUFACTURING FACILITY REPORT January 2022.pdf</a></li>\r\n                    <li><a target=\"_blank\" href=\"{{baseUrl}}/CCE/2J/2J%20MANUFACTURING%20FACILITY%20REPORT%20%20January%202023.pdf\">2J\r\n                            MANUFACTURING FACILITY REPORT January 2023.pdf</a></li>\r\n                    <li><a target=\"_blank\" href=\"{{baseUrl}}/CCE/2J/2J%20MANUFACTURING%20FACILITY%20REPORT%20%20July%202022.pdf\">2J\r\n                            MANUFACTURING FACILITY REPORT July 2022.pdf</a></li>\r\n                    <li><a target=\"_blank\" href=\"{{baseUrl}}/CCE/2J/2J%20MANUFACTURING%20FACILITY%20REPORT%20%20June%202022.pdf\">2J\r\n                            MANUFACTURING FACILITY REPORT June 2022.pdf</a></li>\r\n                    <li><a target=\"_blank\" href=\"{{baseUrl}}/CCE/2J/2J%20MANUFACTURING%20FACILITY%20REPORT%20%20March%202022.pdf\">2J\r\n                            MANUFACTURING FACILITY REPORT March 2022.pdf</a></li>\r\n                    <li><a target=\"_blank\" href=\"{{baseUrl}}/CCE/2J/2J%20MANUFACTURING%20FACILITY%20REPORT%20%20March%202023.pdf\">2J\r\n                            MANUFACTURING FACILITY REPORT March 2023.pdf</a></li>\r\n                    <li><a target=\"_blank\" href=\"{{baseUrl}}/CCE/2J/2J%20MANUFACTURING%20FACILITY%20REPORT%20%20May%202022.pdf\">2J\r\n                            MANUFACTURING FACILITY REPORT May 2022.pdf</a></li>\r\n                    <li><a target=\"_blank\" href=\"{{baseUrl}}/CCE/2J/2J%20MANUFACTURING%20FACILITY%20REPORT%20%20May%202023.pdf\">2J\r\n                            MANUFACTURING FACILITY REPORT May 2023.pdf</a></li>\r\n                    <li><a target=\"_blank\" href=\"{{baseUrl}}/CCE/2J/2J%20MANUFACTURING%20FACILITY%20REPORT%20%20November%202022.pdf\">2J\r\n                            MANUFACTURING FACILITY REPORT November 2022.pdf</a></li>\r\n                    <li><a target=\"_blank\" href=\"{{baseUrl}}/CCE/2J/2J%20MANUFACTURING%20FACILITY%20REPORT%20%20October%202022.pdf\">2J\r\n                            MANUFACTURING FACILITY REPORT October 2022.pdf</a></li>\r\n                    <li><a target=\"_blank\" href=\"{{baseUrl}}/CCE/2J/2J%20MANUFACTURING%20FACILITY%20REPORT%20%20September%202022.pdf\">2J\r\n                            MANUFACTURING FACILITY REPORT September 2022.pdf</a></li>\r\n                </ul>\r\n            </li>\r\n            <li  *ngIf=\"facilityId==16\">\r\n                <b>3T</b>\r\n                <ul>\r\n                    <li>\r\n                        <a target=\"_blank\" href=\"{{baseUrl}}/CCE/3T/3T%20MANUFACTURING%20FACILITY%20REPORT%20%20April%202022.pdf\">3T\r\n                            MANUFACTURING FACILITY REPORT April 2022.pdf</a>\r\n                    </li>\r\n                    <li><a target=\"_blank\" href=\"{{baseUrl}}/CCE/3T/3T%20MANUFACTURING%20FACILITY%20REPORT%20%20December%202022.pdf\">3T\r\n                            MANUFACTURING FACILITY REPORT December 2022.pdf</a></li>\r\n                    <li><a target=\"_blank\" href=\"{{baseUrl}}/CCE/3T/3T%20MANUFACTURING%20FACILITY%20REPORT%20%20February%202023.pdf\">3T\r\n                            MANUFACTURING FACILITY REPORT February 2023.pdf</a></li>\r\n                    <li><a target=\"_blank\" href=\"{{baseUrl}}/CCE/3T/3T%20MANUFACTURING%20FACILITY%20REPORT%20%20January%202022.pdf\">3T\r\n                            MANUFACTURING FACILITY REPORT January 2022.pdf</a></li>\r\n                    <li><a target=\"_blank\" href=\"{{baseUrl}}/CCE/3T/3T%20MANUFACTURING%20FACILITY%20REPORT%20%20January%202023.pdf\">3T\r\n                            MANUFACTURING FACILITY REPORT January 2023.pdf</a></li>\r\n                    <li><a target=\"_blank\" href=\"{{baseUrl}}/CCE/3T/3T%20MANUFACTURING%20FACILITY%20REPORT%20%20July%202022.pdf\">3T\r\n                            MANUFACTURING FACILITY REPORT July 2022.pdf</a></li>\r\n                    <li><a target=\"_blank\" href=\"{{baseUrl}}/CCE/3T/3T%20MANUFACTURING%20FACILITY%20REPORT%20%20June%202022.pdf\">3T\r\n                            MANUFACTURING FACILITY REPORT June 2022.pdf</a></li>\r\n                    <li><a target=\"_blank\" href=\"{{baseUrl}}/CCE/3T/3T%20MANUFACTURING%20FACILITY%20REPORT%20%20May%202022.pdf\">3T\r\n                            MANUFACTURING FACILITY REPORT May 2022.pdf</a></li>\r\n                    <li><a target=\"_blank\" href=\"{{baseUrl}}/CCE/3T/3T%20MANUFACTURING%20FACILITY%20REPORT%20%20May%202023.pdf\">3T\r\n                            MANUFACTURING FACILITY REPORT May 2023.pdf</a></li>\r\n                    <li><a target=\"_blank\" href=\"{{baseUrl}}/CCE/3T/3T%20MANUFACTURING%20FACILITY%20REPORT%20%20November%202022.pdf\">3T\r\n                            MANUFACTURING FACILITY REPORT November 2022.pdf</a></li>\r\n                    <li><a target=\"_blank\" href=\"{{baseUrl}}/CCE/3T/3T%20MANUFACTURING%20FACILITY%20REPORT%20%20October%202022.pdf\">3T\r\n                            MANUFACTURING FACILITY REPORT October 2022.pdf</a></li>\r\n                    <li><a target=\"_blank\" href=\"{{baseUrl}}/CCE/3T/3T%20MANUFACTURING%20FACILITY%20REPORT%20%20September%202022.pdf\">3T\r\n                            MANUFACTURING FACILITY REPORT September 2022.pdf</a></li>\r\n                    <li><a target=\"_blank\" href=\"{{baseUrl}}/CCE/3T/October%20NIH%20Space%20Report%20%203T%20new.pdf\">October NIH\r\n                            Space Report 3T new.pdf</a></li>\r\n                </ul>\r\n\r\n            </li>\r\n            <li *ngIf=\"facilityId==5\">\r\n                <b>ETER</b>\r\n                <ul>\r\n                    <li><a target=\"_blank\" href=\"{{baseUrl}}/CCE/ETER/T10B%20MANUFACTURING%20FACILITY%20REPORT%20%20August%202022.pdf\">T10B\r\n                            MANUFACTURING FACILITY REPORT August 2022.pdf</a></li>\r\n                    <li><a target=\"_blank\"\r\n                            href=\"{{baseUrl}}/CCE/ETER/T10B%20MANUFACTURING%20FACILITY%20REPORT%20%20December%202022.pdf\">T10B\r\n                            MANUFACTURING FACILITY REPORT December 2022.pdf</a></li>\r\n                    <li><a target=\"_blank\"\r\n                            href=\"{{baseUrl}}/CCE/ETER/T10B%20MANUFACTURING%20FACILITY%20REPORT%20%20February%202023.pdf\">T10B\r\n                            MANUFACTURING FACILITY REPORT February 2023.pdf</a></li>\r\n                    <li><a target=\"_blank\" href=\"{{baseUrl}}/CCE/ETER/T10B%20MANUFACTURING%20FACILITY%20REPORT%20%20January%202023.pdf\">T10B\r\n                            MANUFACTURING FACILITY REPORT January 2023.pdf</a></li>\r\n                    <li><a target=\"_blank\" href=\"{{baseUrl}}/CCE/ETER/T10B%20MANUFACTURING%20FACILITY%20REPORT%20%20July%202022.pdf\">T10B\r\n                            MANUFACTURING FACILITY REPORT July 2022.pdf</a></li>\r\n                    <li><a target=\"_blank\" href=\"{{baseUrl}}/CCE/ETER/T10B%20MANUFACTURING%20FACILITY%20REPORT%20%20March%202023.pdf\">T10B\r\n                            MANUFACTURING FACILITY REPORT March 2023.pdf</a></li>\r\n                    <li><a target=\"_blank\"\r\n                            href=\"{{baseUrl}}/CCE/ETER/T10B%20MANUFACTURING%20FACILITY%20REPORT%20%20November%202022.pdf\">T10B\r\n                            MANUFACTURING FACILITY REPORT November 2022.pdf</a></li>\r\n                    <li><a target=\"_blank\" href=\"{{baseUrl}}/CCE/ETER/T10B%20MANUFACTURING%20FACILITY%20REPORT%20%20October%202022.pdf\">T10B\r\n                            MANUFACTURING FACILITY REPORT October 2022.pdf</a></li>\r\n                    <li><a target=\"_blank\"\r\n                            href=\"{{baseUrl}}/CCE/ETER/T10B%20MANUFACTURING%20FACILITY%20REPORT%20%20September%202022.pdf\">T10B\r\n                            MANUFACTURING FACILITY REPORT September 2022.pdf</a></li>\r\n                    <li><a target=\"_blank\" href=\"{{baseUrl}}/CCE/ETER/T10B%20MANUFACTURING%20FACILITY%20REPORT%20April%202023.pdf\">T10B\r\n                            MANUFACTURING FACILITY REPORT April 2023.pdf</a></li>\r\n                </ul>\r\n\r\n            </li>\r\n        </ul>\r\n    </li>\r\n    <li *ngIf=\"facilityId==6\">\r\n        <b>DLM</b>\r\n        <ul>\r\n            <li><a target=\"_blank\" href=\"{{baseUrl}}/DLM/2022.07.14%20DLM%20SL%20Facility%20Tour%20open%20Exceptions.pdf\">2022.07.14 DLM\r\n                    SL Facility Tour open Exceptions.pdf</a></li>\r\n            <li><a target=\"_blank\" href=\"{{baseUrl}}/DLM/2022.09.12%20DLM%20SL%20Facility%20Tour%20open%20Exceptions.pdf\">2022.09.12 DLM\r\n                    SL Facility Tour open Exceptions.pdf</a></li>\r\n            <li><a target=\"_blank\" href=\"{{baseUrl}}/DLM/2022.10.20%20DLM%20SL%20Facility%20Tour%20open%20Exceptions.pdf\">2022.10.20 DLM\r\n                    SL Facility Tour open Exceptions.pdf</a></li>\r\n            <li><a target=\"_blank\" href=\"{{baseUrl}}/DLM/DLMSL%20Facility%20Report%20Draft%203.docx\">DLMSL Facility Report Draft\r\n                    3.docx</a></li>\r\n        </ul>\r\n    </li>\r\n    <li *ngIf=\"facilityId==17\">\r\n        <b>Pharm</b>\r\n        <ul>\r\n            <li><a target=\"_blank\" href=\"{{baseUrl}}/Pharm/I-IVAU/2021.09.14%20IIVAU%20Facility%20Tour%20Findings%20.pdf\">2021.09.14\r\n                    IIVAU Facility Tour Findings .pdf</a></li>\r\n            <li><a target=\"_blank\" href=\"{{baseUrl}}/Pharm/I-IVAU/2021.12.02%20IIVAU%20Facility%20Tour.pdf\">2021.12.02 IIVAU Facility\r\n                    Tour.pdf</a></li>\r\n            <li><a target=\"_blank\" href=\"{{baseUrl}}/Pharm/I-IVAU/2022.02.17%20IIVAU%20Facility%20Tour.pdf\">2022.02.17 IIVAU Facility\r\n                    Tour.pdf</a></li>\r\n            <li><a target=\"_blank\" href=\"{{baseUrl}}/Pharm/I-IVAU/2022.03.08%20IIVAU%20Facility%20Tour.pdf\">2022.03.08 IIVAU Facility\r\n                    Tour.pdf</a></li>\r\n            <li><a target=\"_blank\" href=\"{{baseUrl}}/Pharm/I-IVAU/2022.03.15%20IIVAU%20Facility%20Tour.pdf\">2022.03.15 IIVAU Facility\r\n                    Tour.pdf</a></li>\r\n            <li><a target=\"_blank\"\r\n                    href=\"{{baseUrl}}/Pharm/I-IVAU/2022.05.16%20IIVAU%20Facility%20Tour%20open%20Exceptions%205-16-2022.pdf\">2022.05.16\r\n                    IIVAU Facility Tour open Exceptions 5-16-2022.pdf</a></li>\r\n            <li><a target=\"_blank\" href=\"{{baseUrl}}/Pharm/I-IVAU/2022.07.11%20IIVAU%20Facility%20Tour%20open%20Exceptions.pdf\">2022.07.11\r\n                    IIVAU Facility Tour open Exceptions.pdf</a></li>\r\n            <li><a target=\"_blank\" href=\"{{baseUrl}}/Pharm/I-IVAU/2022.08.08%20IIVAU%20Facility%20Tour%20open%20Exceptions.pdf\">2022.08.08\r\n                    IIVAU Facility Tour open Exceptions.pdf</a></li>\r\n            <li><a target=\"_blank\" href=\"{{baseUrl}}/Pharm/I-IVAU/2022.09.12%20IIVAU%20Facility%20Tour%20open%20Exceptions%20.pdf\">2022.09.12\r\n                    IIVAU Facility Tour open Exceptions .pdf</a></li>\r\n            <li><a target=\"_blank\" href=\"{{baseUrl}}/Pharm/I-IVAU/2022.11.01%20IIVAU%20Facility%20Tour%20open%20Exceptions.pdf\">2022.11.01\r\n                    IIVAU Facility Tour open Exceptions.pdf</a></li>\r\n            <li><a target=\"_blank\" href=\"{{baseUrl}}/Pharm/I-IVAU/2022.11.16%20IIVAU%20Facility%20Tour%20open%20Exceptions.pdf\">2022.11.16\r\n                    IIVAU Facility Tour open Exceptions.pdf</a></li>\r\n            <li><a target=\"_blank\" href=\"{{baseUrl}}/Pharm/I-IVAU/2023.04.06%20Pharmacy%20IVAU%20Facility%20Report%20FINAL.pdf\">2023.04.06\r\n                    Pharmacy IVAU Facility Report FINAL.pdf</a></li>\r\n            <li><a target=\"_blank\" href=\"{{baseUrl}}/Pharm/I-IVAU/IIVAU%20Facility%20Tour%20open%20Exceptions%204.12.2022.pdf\">IIVAU\r\n                    Facility Tour open Exceptions 4.12.2022.pdf</a></li>\r\n        </ul>\r\n\r\n    </li>\r\n    <li *ngIf=\"!(facilityId == 3 || facilityId == 16 || facilityId==5 || facilityId==6 || facilityId==17)\">\r\n        <b>No reports available for this facility</b>\r\n    </li>\r\n</ul>"
        },
        {
            "name": "FacilityTimelineDashboardComponent",
            "id": "component-FacilityTimelineDashboardComponent-47db5dc78fbc7d4cd3efd267ebcfa713f8d3600b304b4c7007f72003efadfc66bc54d3a44afb5d4c36064b86c6ce5b916ed9f21e17a463f4598721ff07a63dce",
            "file": "src/app/facility-timeline-dashboard/facility-timeline-dashboard.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "FacilityTimelineDashboardService"
                }
            ],
            "selector": "app-facility-timeline-dashboard",
            "styleUrls": [
                "./facility-timeline-dashboard.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./facility-timeline-dashboard.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "dashboardId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "facility",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "Partial<Facility>",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_dashboardId",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 46,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_dashboardId$",
                    "defaultValue": "new BehaviorSubject<string>('')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 49,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_facility",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Partial<Facility>",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_facility$",
                    "defaultValue": "new BehaviorSubject<Partial<Facility>>({})",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 52,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "$statusDisplay",
                    "defaultValue": "this._dashboardId$.pipe(map(x => {\r\n    const id = x.toLowerCase();\r\n    if (id === 'dp') { return 'dP' }\r\n    if (id === 'ach') { return 'Airx' }\r\n    if (id === 'hum') { return 'Hum' }\r\n    if (id === 'temp') { return 'Temp' }\r\n    return 'Composite'; // 'Sum All'\r\n  }))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 54
                },
                {
                    "name": "defaultSvgMap",
                    "defaultValue": "{\r\n    backgroundSvg: '',\r\n    id: 0,\r\n    name: '',\r\n    svgMapPins: [],\r\n    svgMapArrows: [],\r\n    viewbox: '',\r\n    defs: '',\r\n    facilityId: 0\r\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SvgMap",
                    "optional": false,
                    "description": "",
                    "line": 72
                },
                {
                    "name": "dialogRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DynamicDialogRef",
                    "optional": false,
                    "description": "",
                    "line": 101
                },
                {
                    "name": "dialogService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DialogService",
                    "optional": false,
                    "description": "",
                    "line": 104,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "facilityFilterOptions$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<literal type[]>",
                    "optional": false,
                    "description": "",
                    "line": 65
                },
                {
                    "name": "filterForm",
                    "defaultValue": "this.fb.group({\r\n    startDate: new Date(),\r\n    endDate: new Date(),\r\n    interval: 0\r\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 39
                },
                {
                    "name": "filterParams",
                    "defaultValue": "{\r\n    startDate: '',\r\n    endDate: '',\r\n    interval: ''\r\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 88
                },
                {
                    "name": "hoveredPin$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<string>",
                    "optional": false,
                    "description": "",
                    "line": 82
                },
                {
                    "name": "hoveredTimelineLabel$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<string>",
                    "optional": false,
                    "description": "",
                    "line": 83
                },
                {
                    "name": "intervalOptions",
                    "defaultValue": "[\r\n    { name: '10 Min', value: 10 },\r\n    { name: '30 Min', value: 30 },\r\n    { name: '1 Hour', value: 60 },\r\n    { name: '24 Hour', value: 1440 }\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 186,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "isFacilityAll$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<boolean>",
                    "optional": false,
                    "description": "",
                    "line": 86
                },
                {
                    "name": "isLoading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 95
                },
                {
                    "name": "monitoredRoomsChartData$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any[]>",
                    "optional": false,
                    "description": "",
                    "line": 64
                },
                {
                    "name": "pinStates$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<locationStatusLookup>",
                    "optional": false,
                    "description": "",
                    "line": 71
                },
                {
                    "name": "roomInfoDialogVisible",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 45
                },
                {
                    "name": "selectedRoomInfo$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<literal type>",
                    "optional": false,
                    "description": "",
                    "line": 84
                },
                {
                    "name": "service",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FacilityTimelineDashboardService",
                    "optional": false,
                    "description": "",
                    "line": 105,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "showFilterToolbar",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 97
                },
                {
                    "name": "showMapKey",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 99
                },
                {
                    "name": "svgBackgroundImageUrl$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<string>",
                    "optional": false,
                    "description": "",
                    "line": 70
                },
                {
                    "name": "svgMap$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<SvgMap>",
                    "optional": false,
                    "description": "",
                    "line": 69
                },
                {
                    "name": "timelineChartData$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<TimelineChartData>",
                    "optional": false,
                    "description": "",
                    "line": 68
                }
            ],
            "methodsClass": [
                {
                    "name": "chartLabelClick",
                    "args": [
                        {
                            "name": "$event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 162,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "$event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "chartLabelMouseOut",
                    "args": [
                        {
                            "name": "$event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 170,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "$event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "chartLabelMouseOver",
                    "args": [
                        {
                            "name": "$event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 166,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "$event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "hideRoomInfo",
                    "args": [
                        {
                            "name": "evt",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 224,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "evt",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 138,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 142,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "pinClick",
                    "args": [
                        {
                            "name": "$event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 174,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "$event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "pinMouseOut",
                    "args": [
                        {
                            "name": "$event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 182,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "$event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "pinMouseOver",
                    "args": [
                        {
                            "name": "$event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 178,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "$event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "search",
                    "args": [
                        {
                            "name": "timelineAtr",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 203,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "timelineAtr",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { BehaviorSubject, Observable, combineLatest, map } from 'rxjs';\r\nimport { Component, Input, OnChanges, OnInit, SimpleChanges } from '@angular/core';\r\nimport { DialogService, DynamicDialogRef } from 'primeng/dynamicdialog';\r\nimport { Facility, SvgMap } from '../api/models';\r\nimport {\r\n  FacilityTimelineDashboardService,\r\n  TimelineChartData,\r\n  locationStatusLookup\r\n} from './facility-timeline-dashboard.service';\r\nimport { FormBuilder } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-facility-timeline-dashboard',\r\n  templateUrl: './facility-timeline-dashboard.component.html',\r\n  styleUrls: ['./facility-timeline-dashboard.component.scss'],\r\n  providers: [FacilityTimelineDashboardService]\r\n})\r\nexport class FacilityTimelineDashboardComponent implements OnInit, OnChanges {\r\n\r\n  private _facility!: Partial<Facility>;\r\n  @Input()\r\n  get facility() {\r\n    return this._facility;\r\n  }\r\n  set facility(v: Partial<Facility>) {\r\n    this._facility$.next(v);\r\n    this._facility = v;\r\n  }\r\n\r\n  @Input()\r\n  get dashboardId() {\r\n    return this._dashboardId;\r\n  }\r\n  set dashboardId(v: string) {\r\n    this._dashboardId$.next(v);\r\n    this._dashboardId = v;\r\n  }\r\n\r\n  filterForm = this.fb.group({\r\n    startDate: new Date(),\r\n    endDate: new Date(),\r\n    interval: 0\r\n  });\r\n\r\n  roomInfoDialogVisible = false;\r\n  private _dashboardId: string = '';\r\n  \r\n  \r\n  private _dashboardId$ = new BehaviorSubject<string>('');\r\n  get dashboardId$() { return this._dashboardId$ as Observable<string>; }\r\n\r\n  private _facility$ = new BehaviorSubject<Partial<Facility>>({});\r\n\r\n  $statusDisplay = this._dashboardId$.pipe(map(x => {\r\n    const id = x.toLowerCase();\r\n    if (id === 'dp') { return 'dP' }\r\n    if (id === 'ach') { return 'Airx' }\r\n    if (id === 'hum') { return 'Hum' }\r\n    if (id === 'temp') { return 'Temp' }\r\n    return 'Composite'; // 'Sum All'\r\n  }));\r\n\r\n\r\n  monitoredRoomsChartData$: Observable<any[]>;\r\n  facilityFilterOptions$: Observable<\r\n    { repName: string; sectionName: string; value: string }[]\r\n  >;\r\n  timelineChartData$: Observable<TimelineChartData>;\r\n  svgMap$: Observable<SvgMap>;\r\n  svgBackgroundImageUrl$: Observable<string>;\r\n  pinStates$: Observable<locationStatusLookup>;\r\n  defaultSvgMap: SvgMap = {\r\n    backgroundSvg: '',\r\n    id: 0,\r\n    name: '',\r\n    svgMapPins: [],\r\n    svgMapArrows: [],\r\n    viewbox: '',\r\n    defs: '',\r\n    facilityId: 0\r\n  };\r\n  hoveredPin$: Observable<string>;\r\n  hoveredTimelineLabel$: Observable<string>;\r\n  selectedRoomInfo$: Observable<{ [field: string]: string }>;\r\n\r\n  isFacilityAll$: Observable<boolean>;\r\n\r\n  filterParams: any = {\r\n    startDate: '',\r\n    endDate: '',\r\n    interval: ''\r\n  };\r\n\r\n\r\n  isLoading = false;\r\n\r\n  showFilterToolbar = false;\r\n\r\n  showMapKey = false;\r\n\r\n  dialogRef!: DynamicDialogRef;\r\n\r\n  constructor(\r\n    public dialogService: DialogService,\r\n    public service: FacilityTimelineDashboardService,\r\n    private fb: FormBuilder\r\n  ) {\r\n\r\n    this.monitoredRoomsChartData$ = this.service.gsfGrowthByClassification$;\r\n\r\n    this.svgMap$ = this.service.svgMap$;\r\n    this.svgBackgroundImageUrl$ = this.service.svgMapBackgroundImageUrl$;\r\n    this.pinStates$ = this.service.pinStates$;\r\n    this.hoveredPin$ = this.service.hoveredPin$;\r\n    this.hoveredTimelineLabel$ = this.service.hoveredTimelineLabel$;\r\n    this.timelineChartData$ = this.service.timelineChartData$;\r\n    this.selectedRoomInfo$ = this.service.selectedRoomInfo$;\r\n    this.isFacilityAll$ = this.service.isFacilityAll$;\r\n\r\n    this.selectedRoomInfo$.pipe(\r\n      map((x) => Object.keys(x).length > 0)\r\n    ).subscribe(x => {\r\n      this.roomInfoDialogVisible = x;\r\n    });\r\n\r\n    this.facilityFilterOptions$ = this.service.facilityFilterOptions$;\r\n\r\n    // this.timelineChartData$.subscribe(() => {\r\n    //   this.isLoading = false;\r\n    // });\r\n\r\n    \r\n\r\n\r\n\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n      console.log(changes)\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    const yesterday = new Date();\r\n    yesterday.setDate(yesterday.getDate() - 1);\r\n\r\n    this.filterForm.patchValue({\r\n      startDate: yesterday,\r\n      endDate: new Date(),\r\n      interval: 60\r\n    });\r\n\r\n    combineLatest([this._dashboardId$,this._facility$]).subscribe(([dashboardId, facility])=>{\r\n      this.search(dashboardId);\r\n    })\r\n\r\n    \r\n\r\n    //this.search();\r\n  }\r\n\r\n\r\n  chartLabelClick($event: any) {\r\n    // console.log($event);\r\n  }\r\n\r\n  chartLabelMouseOver($event: any) {\r\n    this.service.setHoveredTimelineLabel($event);\r\n  }\r\n\r\n  chartLabelMouseOut($event: any) {\r\n    this.service.setHoveredTimelineLabel('');\r\n  }\r\n\r\n  pinClick($event: any) {\r\n    this.service.setSelectedPin($event);\r\n  }\r\n\r\n  pinMouseOver($event: any) {\r\n    this.service.setHoveredPin($event);\r\n  }\r\n\r\n  pinMouseOut($event: any) {\r\n    this.service.setHoveredPin('');\r\n  }\r\n\r\n  public intervalOptions = [\r\n    { name: '10 Min', value: 10 },\r\n    { name: '30 Min', value: 30 },\r\n    { name: '1 Hour', value: 60 },\r\n    { name: '24 Hour', value: 1440 }\r\n  ];\r\n\r\n  get startDate(): Date {\r\n    return this.filterForm.get(\"startDate\")?.value!;\r\n  }\r\n  get endDate(): Date {\r\n    return this.filterForm.get(\"endDate\")?.value!;\r\n  }\r\n  get interval(): number {\r\n    return this.filterForm.get(\"interval\")?.value!;\r\n  }\r\n\r\n  search(timelineAtr?:string) {\r\n\r\n    if(!this.facility.facilityId) {\r\n      throw \"missing facility in dashboard search\";\r\n    }\r\n    if(!this.dashboardId) {\r\n      throw \"missing dashboardId search\";\r\n    }\r\n    \r\n    //this.isLoading = true;\r\n    this.service.filterPiData({\r\n      facility: { repName: '', sectionName: this.facility.facilitySection || '', value: this.facility.facilityId! },\r\n      // portfolioId: this.portfolioId,\r\n      // facilityOrPortfolio: this.portfolioId ? 'portfolio' : 'facility',\r\n      status: timelineAtr || this.dashboardId,\r\n      startDate: this.startDate,\r\n      endDate: this.endDate,\r\n      interval: this.interval\r\n    })\r\n  }\r\n\r\n  hideRoomInfo(evt: any) {\r\n    console.log('You can close me');\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".filter-bar {\r\n    display: block;\r\n\r\n    label {\r\n        width: 120px;\r\n    }\r\n\r\n    .filter-control {\r\n        width: 408;\r\n    }\r\n\r\n    ::ng-deep input.p-component,\r\n    ::ng-deep div.p-dropdown {\r\n        width: 208px;\r\n    }\r\n}\r\n\r\n:host ::ng-deep {\r\n    .p-dropdown {\r\n        // width: 400px;\r\n        height:32px;\r\n    }\r\n    .p-inputtext {\r\n        padding:4px;\r\n    }\r\n    .p-button {\r\n        height:32px;\r\n    }\r\n}",
                    "styleUrl": "./facility-timeline-dashboard.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "dialogService",
                        "type": "DialogService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "service",
                        "type": "FacilityTimelineDashboardService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 101,
                "jsdoctags": [
                    {
                        "name": "dialogService",
                        "type": "DialogService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "service",
                        "type": "FacilityTimelineDashboardService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "OnChanges"
            ],
            "accessors": {
                "facility": {
                    "name": "facility",
                    "setSignature": {
                        "name": "facility",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "v",
                                "type": "Partial<Facility>",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 25,
                        "jsdoctags": [
                            {
                                "name": "v",
                                "type": "Partial<Facility>",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "facility",
                        "type": "",
                        "returnType": "",
                        "line": 22
                    }
                },
                "dashboardId": {
                    "name": "dashboardId",
                    "setSignature": {
                        "name": "dashboardId",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "v",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 34,
                        "jsdoctags": [
                            {
                                "name": "v",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "dashboardId",
                        "type": "",
                        "returnType": "",
                        "line": 31
                    }
                },
                "dashboardId$": {
                    "name": "dashboardId$",
                    "getSignature": {
                        "name": "dashboardId$",
                        "type": "",
                        "returnType": "",
                        "line": 50
                    }
                },
                "startDate": {
                    "name": "startDate",
                    "getSignature": {
                        "name": "startDate",
                        "type": "",
                        "returnType": "Date",
                        "line": 193
                    }
                },
                "endDate": {
                    "name": "endDate",
                    "getSignature": {
                        "name": "endDate",
                        "type": "",
                        "returnType": "Date",
                        "line": 196
                    }
                },
                "interval": {
                    "name": "interval",
                    "getSignature": {
                        "name": "interval",
                        "type": "number",
                        "returnType": "number",
                        "line": 199
                    }
                }
            },
            "templateData": "<div style=\"position: relative;\">\r\n\r\n    <div class=\"body-text\">\r\n        <div class=\"row\" style=\"position:relative;\">\r\n\r\n            <div class=\"col-md-6\">\r\n\r\n                <div style=\"position:absolute; border:0px solid lightgray; padding:4px 16px;background-color:white; z-index:100; opacity: 0.9;\"><a (click)=\"opKey.toggle($event)\"><i\r\n                    class=\"pi pi-key\" style=\"font-size: 2rem\"></i></a></div>\r\n                <p-overlayPanel #opKey>\r\n                    <div class=\"floor-plan-key\">\r\n                        <img src=\"assets/images/floor-plans/FloorPlanColorKey.svg\"\r\n                            style=\"width: 500px; border: 1px solid red\" />\r\n                    </div>\r\n\r\n                </p-overlayPanel>\r\n\r\n                <div class=\"svg-map-container\">\r\n                    <app-svg-status-map [svgMap]=\"(svgMap$ | async) || defaultSvgMap\"\r\n                        [pinStates]=\"(pinStates$ | async) || {}\"\r\n                        [backgroundImageUrl]=\"(svgBackgroundImageUrl$ | async) || ''\"\r\n                        [highlightedMapPin]=\"(hoveredTimelineLabel$ | async) || ''\" (pinClick)=\"pinClick($event)\"\r\n                        (pinMouseOver)=\"pinMouseOver($event)\" (pinMouseOut)=\"pinMouseOut($event)\">\r\n                    </app-svg-status-map>\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <div class=\"col-md-6\" style=\"border: 0px solid black\">\r\n                <div class=\"row\" *ngIf=\"isFacilityAll$ | async\">\r\n                    <div class=\"col-md-12\" style=\"border: 0px solid rgb(219, 213, 213)\">\r\n                        <h4 style=\"color: #b3172c\">\r\n                            Composite Health Status of the APF Portfolio\r\n                        </h4>\r\n\r\n                        <app-apf-monitored-rooms-chart\r\n                            [chartData]=\"(monitoredRoomsChartData$ | async) || []\"></app-apf-monitored-rooms-chart>\r\n                        <div class=\"chart-label\">\r\n                            APF Portfolio: Monitored Rooms and Critical Environmental\r\n                            Parameter Points\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-12 justify-content-center\" style=\"height: 520px\">\r\n                        <div id=\"loadingGif\" style=\"\r\n                    display: none;\r\n                    position: fixed;\r\n                    z-index: 1031;\r\n                    top: 50%;\r\n                    right: 30%;\r\n                    margin-top: 100px;\r\n                    margin-right: -100px;\r\n                  \">\r\n                            <img src=\"assets/images/giphy.gif\" alt=\"loading\" />\r\n                        </div>\r\n\r\n                        <div class=\"timeline-chart-container\">\r\n                            <h4 style=\"color: #b3172c\">{{$statusDisplay | async}} Health Status</h4>\r\n                            <div  class=\"flex gap-2 align-items-end\" style=\"margin-bottom:2px;\" [formGroup]=\"filterForm\">\r\n                                <div>\r\n                                    <label>Start Date</label><br>\r\n                                    <p-calendar inputId=\"basic\" [showTime]=\"true\" [hourFormat]=\"'12'\"\r\n                                        formControlName=\"startDate\"></p-calendar>\r\n                                </div>\r\n                                <div>\r\n                                    <label>End Date</label><br>\r\n                                    <p-calendar inputId=\"basic\" [showTime]=\"true\" [hourFormat]=\"'12'\"\r\n                                        formControlName=\"endDate\"></p-calendar>\r\n                                </div>\r\n                                <div>\r\n                                    <label>Interval</label><br>\r\n                                    <p-dropdown [options]=\"intervalOptions\" placeholder=\"\" optionLabel=\"name\"\r\n                                        optionValue=\"value\" formControlName=\"interval\"></p-dropdown>\r\n                                </div>\r\n                                <div>\r\n                                    <button pButton (click)=\"search()\">Search</button>\r\n                                </div>\r\n                            </div>\r\n                      <app-apf-timeline-chart [chartData]=\"\r\n                      (timelineChartData$ | async) || {\r\n                        points: [],\r\n                        locations: {},\r\n                        locationType: 'facility'\r\n                      }\r\n                    \" [highlightedLabel]=\"(hoveredPin$ | async) || ''\" [isLoading]=\"isLoading\"\r\n                                (chartLabelClick)=\"chartLabelClick($event)\"\r\n                                (chartLabelMouseOver)=\"chartLabelMouseOver($event)\"\r\n                                (chartLabelMouseOut)=\"chartLabelMouseOut($event)\"></app-apf-timeline-chart>\r\n                        </div>\r\n\r\n                        <!-- <div class=\"room-info-display-container\" *ngIf=\"(hasSelectedRoom$ | async) || false\">\r\n                            <app-room-info-display [roomInfo]=\"(selectedRoomInfo$ | async) || {}\"\r\n                                [attribute]=\"(selectedAttributeStatus$ | async) || 'composite'\"></app-room-info-display>\r\n                        </div> -->\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<p-dialog header=\"Room Information\" [(visible)]=\"roomInfoDialogVisible\" [style]=\"{width: '50vw'}\" (onHide)=\"hideRoomInfo($event)\">\r\n    <app-room-info-display [roomInfo]=\"(selectedRoomInfo$ | async) || {}\"\r\n    [attribute]=\"(dashboardId$ | async) || ''\"></app-room-info-display>\r\n</p-dialog>"
        },
        {
            "name": "FcisResourcesComponent",
            "id": "component-FcisResourcesComponent-14e125085dfc2fca49bdb9efc402b16fbab36340a9d27dfd4ca5f4f92e5ab1f23f5054be1cc1886d3a91a4005ae5b2c4a838103d16489438182fcd6bc355564e",
            "file": "src/app/fcis-resources/fcis-resources.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "DialogService"
                },
                {
                    "name": "DataService"
                }
            ],
            "selector": "app-fcis-resources",
            "styleUrls": [
                "./fcis-resources.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./fcis-resources.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "dialogService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DialogService",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "ref",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DynamicDialogRef",
                    "optional": false,
                    "description": "",
                    "line": 17
                }
            ],
            "methodsClass": [
                {
                    "name": "backClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "contactUsClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "homeClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { DialogService, DynamicDialogRef } from 'primeng/dynamicdialog';\r\n\r\nimport { ContactUsDialogComponent } from '../contact-us-dialog/contact-us-dialog.component';\r\nimport { ContactUsMessage } from '../api/models';\r\nimport { DataService } from '../api/data.service';\r\nimport { Router } from '@angular/router';\r\nimport { Location } from '@angular/common'\r\n\r\n@Component({\r\n  selector: 'app-fcis-resources',\r\n  templateUrl: './fcis-resources.component.html',\r\n  styleUrls: ['./fcis-resources.component.scss'],\r\n  providers: [DialogService, DataService]\r\n})\r\nexport class FcisResourcesComponent implements OnInit {\r\n  ref!: DynamicDialogRef;\r\n\r\n  constructor(\r\n    public dialogService: DialogService, \r\n    private dataService: DataService, \r\n    private location: Location, \r\n    private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n\r\n  backClick() {\r\n    this.location.back();\r\n  }\r\n\r\n  homeClick() {\r\n    this.router.navigate(['/home']);\r\n  }\r\n\r\n  contactUsClick() {\r\n    this.ref = this.dialogService.open(ContactUsDialogComponent, { header: 'Contact Us' });\r\n\r\n    this.ref.onClose.subscribe((message: ContactUsMessage) => {\r\n      if (message) {\r\n        this.dataService.contactUs(message).subscribe();\r\n      }\r\n    });\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "nav {\r\n    display:flex;\r\n    gap: 20px;\r\n    margin-top:4px;\r\n    a { \r\n        text-decoration: underline;\r\n        display: inline-block;\r\n\r\n        :hover {\r\n            cursor: pointer;\r\n        }\r\n    }\r\n}",
                    "styleUrl": "./fcis-resources.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "dialogService",
                        "type": "DialogService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "dataService",
                        "type": "DataService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "location",
                        "type": "Location",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 17,
                "jsdoctags": [
                    {
                        "name": "dialogService",
                        "type": "DialogService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "dataService",
                        "type": "DataService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "location",
                        "type": "Location",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"container\">\r\n\r\n  <nav>\r\n    <a (click)=\"backClick()\">Back</a>\r\n    <a (click)=\"homeClick()\">Home</a>\r\n  </nav>\r\n    <div class=\"row my-4\">\r\n      <div class=\"col-md-4 col-lg-3 mb-3 mb-lg-0\">\r\n        <div class=\"list-group list-group-flush\">\r\n          <p class=\"mb-0 list-group-item font-weight-bold\">\r\n            <b>About FCIS</b>\r\n          </p>\r\n          <a\r\n            [routerLink]=\"['/home', 'resource', 'who-we-are']\"\r\n            class=\"list-group-item list-group-item-action\"\r\n            >Who We Are</a\r\n          >\r\n          <a\r\n            [routerLink]=\"['/home', 'resource', 'gui-org-chart']\"\r\n            class=\"list-group-item list-group-item-action\"\r\n            >FCIS Team</a\r\n          >\r\n          <a\r\n            [routerLink]=\"['/home', 'resource', 'functionalstmt']\"\r\n            class=\"list-group-item list-group-item-action\"\r\n          >\r\n            FCIS Functional Statement\r\n          </a>\r\n          <a (click)=\"contactUsClick()\" class=\"list-group-item list-group-item-action\">Contact Us</a>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-md-4 col-lg-3 mb-3 mb-lg-0\">\r\n        <div class=\"list-group list-group-flush\">\r\n          <p class=\"mb-0 list-group-item font-weight-bold\">\r\n            <b>Resources</b>\r\n          </p>\r\n          <a\r\n            [routerLink]=\"['/home', 'resource', 'gui-doc-abbreviations']\"\r\n            class=\"list-group-item list-group-item-action\"\r\n            >Abbreviations</a\r\n          >\r\n          <a\r\n            [routerLink]=\"['/home', 'resource', 'gui-doc-definitions']\"\r\n            class=\"list-group-item list-group-item-action\"\r\n            >Definitions</a\r\n          >\r\n          <a\r\n            [routerLink]=\"['/home', 'resource', 'gui-doc-faq']\"\r\n            class=\"list-group-item list-group-item-action\"\r\n            >FAQ</a\r\n          >\r\n          <a\r\n            [routerLink]=\"['/home', 'resource', 'gui-doc-wlinks']\"\r\n            class=\"list-group-item list-group-item-action\"\r\n            >News & Links</a\r\n          >\r\n          <a\r\n            [routerLink]=\"['/home', 'resource', 'gui-doc-drm']\"\r\n            class=\"list-group-item list-group-item-action\"\r\n            >DRM</a\r\n          >\r\n        </div>\r\n      </div>\r\n      <div class=\"col-md-4 col-lg-3 mb-3 mb-md-0\">\r\n        <div class=\"list-group list-group-flush\">\r\n          <p class=\"mb-0 list-group-item font-weight-bold\">\r\n            <b>SOP & WI</b>\r\n          </p>\r\n          <a [routerLink]=\"['/home', 'sops']\"\r\n            class=\"list-group-item list-group-item-action\"\r\n            >DFOM & DTR SOP & WI</a\r\n          >\r\n          <!-- <a href=\"\" class=\"list-group-item list-group-item-action\"\r\n            >DTR SOP & WI</a\r\n          > -->\r\n        </div>\r\n      </div>\r\n      <div class=\"col-md-4 col-lg-3 mb-3 mb-md-0\">\r\n        <div class=\"list-group list-group-flush\">\r\n          <p class=\"mb-0 list-group-item font-weight-bold\">\r\n            <b>Forms</b>\r\n          </p>\r\n\r\n          <a href=\"https://dtrdata.orf.od.nih.gov/FCISPortal/Documents/APF%20Critical%20Documents%20Matrix_01FEB2021.xlsx\" class=\"list-group-item list-group-item-action\">APF Critical Documents </a>\r\n          <a href=\"https://dtrdata.orf.od.nih.gov/FCISPortal/Documents/DTR-10013F.1%20SLIA%20Worksheet_02FEB2021.xlsx\" class=\"list-group-item list-group-item-action\">SLIA Worksheet </a>\r\n          <a href=\"https://dtrdata.orf.od.nih.gov/FCISPortal/Documents/DTR-10013F.2%20CLIA%20Worksheet_01FEB2021.xlsx\" class=\"list-group-item list-group-item-action\">CLIA Worksheet </a>\r\n          <a href=\"https://dtrdata.orf.od.nih.gov/FCISPortal/Documents/DTR-10003F.1R3%20System%20Discrepancy%20-%20Deviation%20Form.pdf\" class=\"list-group-item list-group-item-action\">System Discrepancy / Deviation </a>\r\n           <a href=\"https://dtrdata.orf.od.nih.gov/FCISPortal/Documents/DTR-10004F.2R5%20Engineering%20Change%20Request%20Form.pdf\" class=\"list-group-item list-group-item-action\">Change Report </a>\r\n          <a href=\"https://dtrdata.orf.od.nih.gov/FCISPortal/Documents/DTR-10004F.2R5%20Engineering%20Change%20Request%20Form.pdf\" class=\"list-group-item list-group-item-action\">  CAPA Forms </a>\r\n\r\n        </div>\r\n      </div>\r\n      <hr />\r\n      <div class=\"col-md-4 col-lg-3 mb-3 mb-md-0\">\r\n        <div class=\"list-group list-group-flush\">\r\n          <p class=\"mb-0 list-group-item font-weight-bold\">\r\n            <b>Templates</b>\r\n          </p>\r\n          <a href=\"https://dtrdata.orf.od.nih.gov/FCISPortal/Documents/13.3.3%20Room%20Data%20Sheet_02FEB2020.xlsx\" class=\"list-group-item list-group-item-action\">APF Room Data Sheet </a>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-md-4 col-lg-3\">\r\n        <div class=\"list-group list-group-flush\">\r\n          <p class=\"mb-0 list-group-item font-weight-bold\">\r\n            <b>Outside Links</b>\r\n          </p>\r\n          <!-- <a href=\"\" class=\"list-group-item list-group-item-action\">LL/CI Dashboard</a> -->\r\n          <a target=\"_blank\" href=\"https://app.smartsheetgov.com/dashboards/JqmGC7PRrJRC8rP3Crm5Hch7wMHrGWvgMPcwXFq1\" class=\"list-group-item list-group-item-action\">\r\n              FCIS Business\r\n              Dashboard\r\n          </a>\r\n          <a target=\"_blank\" href=\"https://qms.nih.gov/mcprod/login/index.cfm?initialRequest=%2Fmcprod%2Findex%2Ecfm&action=displayLoginPage&message=connections.notloggedin\" class=\"list-group-item list-group-item-action\">Master Control</a>\r\n          <a target=\"_blank\" href=\"https://dtrdata.orf.od.nih.gov/cgmp/\" class=\"list-group-item list-group-item-action\">PI Dashboard</a>\r\n          <a target=\"_blank\" href=\"https://orfd-cogen.ors.nih.gov/fcisportal/ChangeRole.aspx?id=howeypj\" class=\"list-group-item list-group-item-action\">FCIS Daily Report Portal </a>\r\n          <a target=\"_blank\" href=\"https://dtrdata.orf.od.nih.gov/FCISLessonLearn\" class=\"list-group-item list-group-item-action\">Lessons Learned</a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n"
        },
        {
            "name": "FormulaHeaderComponent",
            "id": "component-FormulaHeaderComponent-c89ad5417f20173c23d033d69c2d0608dff4dc0bd1731442ed312b40ce7674825ec9d19ba32a917ae57d5a250340fc8ef4185f982e6a692dddbdccfb4a6a96f6",
            "file": "src/app/formula-header/formula-header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-formula-header",
            "styleUrls": [
                "./formula-header.component.scss"
            ],
            "styles": [],
            "template": "<header></header>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-formula-header',\r\n  template: `<header></header>`,\r\n  styleUrls: ['./formula-header.component.scss']\r\n})\r\nexport class FormulaHeaderComponent {\r\n  constructor() {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "header {\r\n  padding: 73px 0 0 0;\r\n  background: #b3172c url('../../assets/images/DTR_Banner_logo_red.png')\r\n    no-repeat top center;\r\n  margin: 0;\r\n  height:50px;\r\n}\r\n",
                    "styleUrl": "./formula-header.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            }
        },
        {
            "name": "GsfGrowthByClassificationChartComponent",
            "id": "component-GsfGrowthByClassificationChartComponent-51e14965872163dad9a367881eb5946a2cd8734cf4b00ffe4d60758c05df9deb3e149fbe6ff2b660bf0713deeea3b5fe2da11931faf583076f831d45d05d1517",
            "file": "src/app/gsf-growth-by-classification-chart/gsf-growth-by-classification-chart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-gsf-growth-by-classification-chart",
            "styleUrls": [
                "./gsf-growth-by-classification-chart.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./gsf-growth-by-classification-chart.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "chartData",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "any[]",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_chartData",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "chartType",
                    "defaultValue": "ChartType.AreaChart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "columnNames",
                    "defaultValue": "[\r\n    'Go Live Date',\r\n    'Area CNC Rooms',\r\n    'Area ISO-8 Rooms',\r\n    'Area ISO-7 Rooms'\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "data",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 33
                }
            ],
            "methodsClass": [
                {
                    "name": "chartOptions",
                    "args": [
                        {
                            "name": "data",
                            "type": "any[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "{ isStacked: string; height: number; legend: { position: string; maxLines: number; }; vAxis: { minValue: number; }; hAxis: { format: string; ticks: {}; }; }",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "any[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\nimport { ChartType } from 'angular-google-charts';\r\n\r\n@Component({\r\n  selector: 'app-gsf-growth-by-classification-chart',\r\n  templateUrl: './gsf-growth-by-classification-chart.component.html',\r\n  styleUrls: ['./gsf-growth-by-classification-chart.component.scss']\r\n})\r\nexport class GsfGrowthByClassificationChartComponent {\r\n  constructor() {}\r\n\r\n  private _chartData: any[] = [];\r\n\r\n  @Input()\r\n  get chartData(): any[] {\r\n    return this._chartData;\r\n  }\r\n  set chartData(v: any[]) {\r\n    if (v.some(Boolean)) {\r\n      this._chartData = v;\r\n      this.options = this.chartOptions(this._chartData);\r\n    }\r\n  }\r\n\r\n  chartType = ChartType.AreaChart;\r\n  columnNames = [\r\n    'Go Live Date',\r\n    'Area CNC Rooms',\r\n    'Area ISO-8 Rooms',\r\n    'Area ISO-7 Rooms'\r\n  ];\r\n  data: any[] = [];\r\n  options: any;\r\n\r\n  chartOptions(data: any[]) {\r\n    const ystart = new Date(data[0][0]).getFullYear();\r\n    const yend = new Date(data[data.length - 1][0]).getFullYear();\r\n    const ycount = yend - ystart + 1;\r\n    const hAxisTicks: any[] = [...Array(ycount).keys()].map(\r\n      (y) => new Date(y + ystart, 1, 1)\r\n    );\r\n\r\n    const options = {\r\n      // fullStacked\r\n      isStacked: 'absolute',\r\n      height: 300,\r\n      legend: { position: 'top', maxLines: 3 },\r\n      vAxis: {\r\n        minValue: 0\r\n      },\r\n      hAxis: {\r\n        format: 'yyyy',\r\n        ticks: hAxisTicks\r\n      }\r\n    };\r\n    return options;\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./gsf-growth-by-classification-chart.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 9
            },
            "accessors": {
                "chartData": {
                    "name": "chartData",
                    "setSignature": {
                        "name": "chartData",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "v",
                                "type": "any[]",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 18,
                        "jsdoctags": [
                            {
                                "name": "v",
                                "type": "any[]",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "chartData",
                        "type": "[]",
                        "returnType": "any[]",
                        "line": 15
                    }
                }
            },
            "templateData": "<google-chart\r\n  style=\"width: 100%\"\r\n  [type]=\"chartType\"\r\n  [data]=\"chartData\"\r\n  [columns]=\"columnNames\"\r\n  [options]=\"options\"\r\n>\r\n</google-chart>\r\n"
        },
        {
            "name": "GsfPieChartComponent",
            "id": "component-GsfPieChartComponent-a099d6220d5f109bd32b96e05a1c5a5b678b4719d103612ef41c3dd13c7bc9cb64f8f4d6a05de3e62e215e9a21172fe2fd8606489ece6afe70ac278debf2e24c",
            "file": "src/app/gsf-pie-chart/gsf-pie-chart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-gsf-pie-chart",
            "styleUrls": [
                "./gsf-pie-chart.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./gsf-pie-chart.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "chartData",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "any[]",
                    "decorators": []
                },
                {
                    "name": "chartOptions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "any",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "chartType",
                    "defaultValue": "ChartType.PieChart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "columnNames",
                    "defaultValue": "['Facility', 'GSF']",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 22
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\n\r\nimport { ChartType, } from 'angular-google-charts';\r\n\r\n//import {PieChartOptions} from 'google.visualization'\r\n\r\n@Component({\r\n  selector: 'app-gsf-pie-chart',\r\n  templateUrl: './gsf-pie-chart.component.html',\r\n  styleUrls: ['./gsf-pie-chart.component.scss']\r\n})\r\nexport class GsfPieChartComponent {\r\n  constructor() {}\r\n\r\n  @Input()\r\n  chartData: any[] = [];\r\n\r\n  @Input()\r\n  chartOptions: any\r\n\r\n  chartType = ChartType.PieChart;\r\n  columnNames = ['Facility', 'GSF'];\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./gsf-pie-chart.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 12
            },
            "templateData": "<google-chart\r\n  style=\"width: 100%\"\r\n  [type]=\"chartType\"\r\n  [data]=\"chartData\"\r\n  [columns]=\"columnNames\"\r\n  [options]=\"chartOptions\"\r\n>\r\n</google-chart>\r\n"
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-73450de17a98fecc6e09904db638a07850bee14e1e2f9a7191437cb856421b62c9f3eb63ef9567ab7512577d27d7f0a55af7f9c6f0c4231c50536bc4bf5902ac",
            "file": "src/stories/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-header",
            "styleUrls": [
                "./header.css"
            ],
            "styles": [],
            "template": "<header>    <div class=\"wrapper\">\n      <div>\n        <svg\n          width=\"32\"\n          height=\"32\"\n          viewBox=\"0 0 32 32\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <div *ngIf=\"user\">\n          <span class=\"welcome\">\n            Welcome, <b>{{ user.name }}</b\n            >!\n          </span>\n          <storybook-button\n            *ngIf=\"user\"\n            size=\"small\"\n            (onClick)=\"onLogout.emit($event)\"\n            label=\"Log out\"\n          ></storybook-button>\n        </div>\n        <div *ngIf=\"!user\">\n          <storybook-button\n            *ngIf=\"!user\"\n            size=\"small\"\n            class=\"margin-left\"\n            (onClick)=\"onLogin.emit($event)\"\n            label=\"Log in\"\n          ></storybook-button>\n          <storybook-button\n            *ngIf=\"!user\"\n            primary\n            size=\"small\"\n            primary=\"true\"\n            class=\"margin-left\"\n            (onClick)=\"onCreateAccount.emit($event)\"\n            label=\"Sign up\"\n          ></storybook-button>\n        </div>\n      </div>\n    </div>\n  </header>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 70,
                    "type": "User | null",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onCreateAccount",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 79,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogin",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 73,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogout",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 76,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\r\nimport { User } from './User';\r\n\r\n@Component({\r\n  selector: 'storybook-header',\r\n  template: `<header>\r\n    <div class=\"wrapper\">\r\n      <div>\r\n        <svg\r\n          width=\"32\"\r\n          height=\"32\"\r\n          viewBox=\"0 0 32 32\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n        >\r\n          <g fill=\"none\" fillRule=\"evenodd\">\r\n            <path\r\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\r\n              fill=\"#FFF\"\r\n            />\r\n            <path\r\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\r\n              fill=\"#555AB9\"\r\n            />\r\n            <path\r\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\r\n              fill=\"#91BAF8\"\r\n            />\r\n          </g>\r\n        </svg>\r\n        <h1>Acme</h1>\r\n      </div>\r\n      <div>\r\n        <div *ngIf=\"user\">\r\n          <span class=\"welcome\">\r\n            Welcome, <b>{{ user.name }}</b\r\n            >!\r\n          </span>\r\n          <storybook-button\r\n            *ngIf=\"user\"\r\n            size=\"small\"\r\n            (onClick)=\"onLogout.emit($event)\"\r\n            label=\"Log out\"\r\n          ></storybook-button>\r\n        </div>\r\n        <div *ngIf=\"!user\">\r\n          <storybook-button\r\n            *ngIf=\"!user\"\r\n            size=\"small\"\r\n            class=\"margin-left\"\r\n            (onClick)=\"onLogin.emit($event)\"\r\n            label=\"Log in\"\r\n          ></storybook-button>\r\n          <storybook-button\r\n            *ngIf=\"!user\"\r\n            primary\r\n            size=\"small\"\r\n            primary=\"true\"\r\n            class=\"margin-left\"\r\n            (onClick)=\"onCreateAccount.emit($event)\"\r\n            label=\"Sign up\"\r\n          ></storybook-button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </header>`,\r\n  styleUrls: ['./header.css']\r\n})\r\nexport default class HeaderComponent {\r\n  @Input()\r\n  user: User | null = null;\r\n\r\n  @Output()\r\n  onLogin = new EventEmitter<Event>();\r\n\r\n  @Output()\r\n  onLogout = new EventEmitter<Event>();\r\n\r\n  @Output()\r\n  onCreateAccount = new EventEmitter<Event>();\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".wrapper {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n  padding: 15px 20px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n}\n\nsvg {\n  display: inline-block;\n  vertical-align: top;\n}\n\nh1 {\n  font-weight: 900;\n  font-size: 20px;\n  line-height: 1;\n  margin: 6px 0 6px 10px;\n  display: inline-block;\n  vertical-align: top;\n}\n\nbutton + button {\n  margin-left: 10px;\n}\n\n.welcome {\n  color: #333;\n  font-size: 14px;\n  margin-right: 10px;\n}\n",
                    "styleUrl": "./header.css"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "HomeComponent",
            "id": "component-HomeComponent-a539315a79948f3b006a6e59689e97f5fde66e60b7cad03a7263affa2d137408ae44d5d8798dd1f86f9b50b50c6ddad4f2d9374729377d65422d76e4a34a8a54",
            "file": "src/app/home/home.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-home",
            "styleUrls": [
                "./home.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./home.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.scss']\r\n})\r\nexport class HomeComponent {}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "// #header {\r\n//   padding: 15px 0 10px 10px;\r\n//   background: #f9f9f9 url('../../assets/images//DTR_red.png') repeat-x top left;\r\n//   position: relative;\r\n\r\n//   #title_logo {\r\n//     position: absolute;\r\n//     top: 20px;\r\n//     left: 10px;\r\n//   }\r\n\r\n//   div {\r\n//     font-size: 14px;\r\n//     color: #555555;\r\n//     padding: 0 0 0 100px;\r\n//     margin: 0 0;\r\n//     background: #f9f9f9;\r\n//     font-weight: bold;\r\n//   }\r\n\r\n//   h1 {\r\n//     font-weight: normal;\r\n//     display: inline;\r\n//     margin: 0px;\r\n//     padding: 0 0 0 100px;\r\n//     color: #9a0000;\r\n//     font-size: 20px !important;\r\n//     font-weight: bold;\r\n//     letter-spacing: 1px;\r\n//     background: #f9f9f9;\r\n\r\n//     text-align: center;\r\n//     font: bold 2em Myriad, Myriad Web, Verdana, Arial, Helvetica, sans-serif;\r\n//     // line-height: 1.3em;\r\n//   }\r\n\r\n//   img {\r\n//     vertical-align: middle;\r\n//     border-style: none;\r\n//   }\r\n// }\r\n\r\n// #mainMenu {\r\n//   padding: 73px 0 0 0;\r\n//   background: #b3172c url('../../assets/images/DTR_Banner_logo_red.png')\r\n//     no-repeat top center;\r\n//   margin: 0;\r\n// }\r\n\r\n.content-container {\r\n  margin-left:20px;\r\n}",
                    "styleUrl": "./home.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<app-nih-logo-header></app-nih-logo-header>\r\n\r\n<app-formula-header></app-formula-header>\r\n\r\n<app-nav-menu></app-nav-menu>\r\n\r\n<div class=\"content-container\">\r\n  <router-outlet></router-outlet>\r\n</div>\r\n\r\n<!-- <app-gsf-pie-chart></app-gsf-pie-chart> -->\r\n\r\n<!-- <app-chart-demo></app-chart-demo> -->\r\n"
        },
        {
            "name": "NavMenuComponent",
            "id": "component-NavMenuComponent-69567f05c189bc19565e54effe7089263bcc08d424d05c230e8b3f79cd8dce889ad29cfbb2d261c5156e9254bd417fe9cc6c68f2c009f7c430871e1bfdeddb93",
            "file": "src/app/nav-menu/nav-menu.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "DialogService"
                },
                {
                    "name": "DataService"
                }
            ],
            "selector": "app-nav-menu",
            "styleUrls": [
                "./nav-menu.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./nav-menu.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "dialogService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DialogService",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "isExpanded",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "items",
                    "defaultValue": "[\r\n    {\r\n      label: 'APF Portfolios',\r\n      items: [\r\n        {\r\n          label: 'APF Portfolio (All)',\r\n          command: () => this.router.navigate(['/home', 'apf-portfolio'])\r\n        },\r\n        {\r\n          label: 'CC Portfolio',\r\n          items: [\r\n            {\r\n              label: 'CC (All)',\r\n              command: this.routeToFacilityAll('CC'),\r\n            },\r\n            {\r\n              label: 'CCE 2J Cell Therapy Facility',\r\n              command: this.routeToFacility(3)\r\n            },\r\n            {\r\n              label: 'CCE 12E Cell Therapy Facility',\r\n              command: this.routeToFacility(4)\r\n            },\r\n            {\r\n              label: 'CCE East Terrace Modular T10B',\r\n              command: this.routeToFacility(5)\r\n            },\r\n            {\r\n              label: 'CC Pharmacy I-IVAU',\r\n              command: this.routeToFacility(17)\r\n            },\r\n            {\r\n              label: 'CC Pharmacy P-IVAU',\r\n              command: this.routeToFacility(9)\r\n            },\r\n            {\r\n              label: 'CC DLM Sterility Lab',\r\n              command: this.routeToFacility(6)\r\n            },\r\n            {\r\n              label: 'CC Interim Nuclear Pharmacy',\r\n              command: this.routeToFacility(7)\r\n            },\r\n            {\r\n              label: 'CC PET Radiopharmacy',\r\n              command: this.routeToFacility(1)\r\n            },\r\n            {\r\n              label: 'CC PET Radiochemistry',\r\n              command: this.routeToFacility(2)\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          label: 'CCE Portfolio',\r\n          items: [\r\n            {\r\n              label: 'CCE (All)',\r\n              command: this.routeToFacilityAll('CCE')\r\n            },\r\n            {\r\n              label: 'CCE 2J Cell Therapy Facility',\r\n              command: this.routeToFacility(3)\r\n            },\r\n            {\r\n              label: 'CCE 12E Cell Therapy Facility',\r\n              command: this.routeToFacility(4)\r\n            },\r\n            {\r\n              label: 'CCE East Terrace Modular T10B',\r\n              command: this.routeToFacility(5)\r\n            },\r\n          ]\r\n        },\r\n        {\r\n          label: 'CC Pharmacy',\r\n          items: [\r\n            {\r\n              label: 'CC Pharmacy (All)',\r\n              command: this.routeToFacilityAll('CCPharmacy')\r\n            },\r\n            {\r\n              label: 'CC Pharmacy I-IVAU',\r\n              command: this.routeToFacility(17)\r\n            },\r\n            {\r\n              label: 'CC Pharmacy P-IVAU',\r\n              command: this.routeToFacility(9)\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          label: 'CC Other',\r\n          items: [\r\n            {\r\n              label: 'CC Other (All)',\r\n              command: this.routeToFacilityAll('CCOther')\r\n            },\r\n            {\r\n              label: 'CC DLM Sterility Lab',\r\n              command: this.routeToFacility(6)\r\n            },\r\n            {\r\n              label: 'CC Interim Nuclear Pharmacy',\r\n              command: this.routeToFacility(7)\r\n            },\r\n            {\r\n              label: 'CC PET Radiopharmacy',\r\n              command: this.routeToFacility(1)\r\n            },\r\n            {\r\n              label: 'CC PET Radiochemistry',\r\n              command: this.routeToFacility(2)\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          label: 'NIAD Portfolio',\r\n          items: [\r\n            {\r\n              label: 'NIAID 29B Pilot Bioproduction Facility',\r\n              command: this.routeToFacility(20)\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          label: 'NCI Portfolio',\r\n          items: [\r\n            {\r\n              label: 'NCI (All)',\r\n              command: this.routeToFacilityAll('NCI'),\r\n            },\r\n            {\r\n              label: 'NCI SB 1B42', //VVF\r\n              command: this.routeToFacility(10)\r\n            },\r\n            {\r\n              label: 'NCI SB TIL Modular Facility T30',\r\n              command: this.routeToFacility(11)\r\n            },\r\n            {\r\n              label: 'NCI Trailer 1 (TR10B)',\r\n              command: this.routeToFacility(12)\r\n            },\r\n            {\r\n              label: 'NCI Trailer 2 (TR10A)',\r\n              command: this.routeToFacility(13)\r\n            },\r\n            {\r\n              label: 'NCI SB Hyperpolarized C-13 Facility',\r\n              command: this.routeToFacility(19)\r\n            }\r\n          ]\r\n        },\r\n\r\n      ]\r\n    },\r\n\r\n\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 47
                },
                {
                    "name": "ref",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DynamicDialogRef",
                    "optional": false,
                    "description": "",
                    "line": 16
                }
            ],
            "methodsClass": [
                {
                    "name": "collapse",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 208,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "contactUsClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 216,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "resourcesClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 226,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "routeToFacility",
                    "args": [
                        {
                            "name": "facilityId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "() => any",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "facilityId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "routeToFacilityAll",
                    "args": [
                        {
                            "name": "portfolio",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "() => any",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "portfolio",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toggle",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 212,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { DialogService, DynamicDialogRef } from 'primeng/dynamicdialog';\r\n\r\nimport { Component } from '@angular/core';\r\nimport { ContactUsDialogComponent } from '../contact-us-dialog/contact-us-dialog.component';\r\nimport { ContactUsMessage } from '../api/models';\r\nimport { DataService } from '../api/data.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-nav-menu',\r\n  templateUrl: './nav-menu.component.html',\r\n  styleUrls: ['./nav-menu.component.scss'],\r\n  providers: [DialogService, DataService]\r\n})\r\nexport class NavMenuComponent {\r\n  ref!: DynamicDialogRef;\r\n\r\n  constructor(public dialogService: DialogService, private dataService: DataService, private router: Router) { }\r\n  isExpanded = false;\r\n\r\n\r\n  routeToFacility(facilityId: number) {\r\n    return () => this.router.navigate(['/home', 'facility', facilityId])\r\n  }\r\n  routeToFacilityAll(portfolio: string) {\r\n    return () => this.router.navigate(['/home', 'facility-all', portfolio])\r\n  }\r\n\r\n  // CCE 2J Cell Therapy Facility\r\n  // CCE 12E Cell Therapy Facility\r\n  // CCE East Terrace Modular T10B\r\n  // CC Pharmacy I-IVAU\r\n  // CC Pharmacy P-IVAU\r\n  // CC DLM Sterility Lab\r\n  // CC Interim Nuclear Pharmacy \r\n  // NIAID 29B Pilot Bioproduction Facility\r\n  // NCI SB 1B42\r\n  // NCI SB Hyperpolarized C-13 Facility\r\n  // NCI SB TIL Modular Facility T30\r\n  // NCI Trailer 1 (TR10B)\r\n  // NCI Trailer 2 (TR10A)\r\n  // CC PET Nuclear Pharmacy\r\n  // CC PET Radiopharmacy\r\n\r\n\r\n\r\n  items = [\r\n    {\r\n      label: 'APF Portfolios',\r\n      items: [\r\n        {\r\n          label: 'APF Portfolio (All)',\r\n          command: () => this.router.navigate(['/home', 'apf-portfolio'])\r\n        },\r\n        {\r\n          label: 'CC Portfolio',\r\n          items: [\r\n            {\r\n              label: 'CC (All)',\r\n              command: this.routeToFacilityAll('CC'),\r\n            },\r\n            {\r\n              label: 'CCE 2J Cell Therapy Facility',\r\n              command: this.routeToFacility(3)\r\n            },\r\n            {\r\n              label: 'CCE 12E Cell Therapy Facility',\r\n              command: this.routeToFacility(4)\r\n            },\r\n            {\r\n              label: 'CCE East Terrace Modular T10B',\r\n              command: this.routeToFacility(5)\r\n            },\r\n            {\r\n              label: 'CC Pharmacy I-IVAU',\r\n              command: this.routeToFacility(17)\r\n            },\r\n            {\r\n              label: 'CC Pharmacy P-IVAU',\r\n              command: this.routeToFacility(9)\r\n            },\r\n            {\r\n              label: 'CC DLM Sterility Lab',\r\n              command: this.routeToFacility(6)\r\n            },\r\n            {\r\n              label: 'CC Interim Nuclear Pharmacy',\r\n              command: this.routeToFacility(7)\r\n            },\r\n            {\r\n              label: 'CC PET Radiopharmacy',\r\n              command: this.routeToFacility(1)\r\n            },\r\n            {\r\n              label: 'CC PET Radiochemistry',\r\n              command: this.routeToFacility(2)\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          label: 'CCE Portfolio',\r\n          items: [\r\n            {\r\n              label: 'CCE (All)',\r\n              command: this.routeToFacilityAll('CCE')\r\n            },\r\n            {\r\n              label: 'CCE 2J Cell Therapy Facility',\r\n              command: this.routeToFacility(3)\r\n            },\r\n            {\r\n              label: 'CCE 12E Cell Therapy Facility',\r\n              command: this.routeToFacility(4)\r\n            },\r\n            {\r\n              label: 'CCE East Terrace Modular T10B',\r\n              command: this.routeToFacility(5)\r\n            },\r\n          ]\r\n        },\r\n        {\r\n          label: 'CC Pharmacy',\r\n          items: [\r\n            {\r\n              label: 'CC Pharmacy (All)',\r\n              command: this.routeToFacilityAll('CCPharmacy')\r\n            },\r\n            {\r\n              label: 'CC Pharmacy I-IVAU',\r\n              command: this.routeToFacility(17)\r\n            },\r\n            {\r\n              label: 'CC Pharmacy P-IVAU',\r\n              command: this.routeToFacility(9)\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          label: 'CC Other',\r\n          items: [\r\n            {\r\n              label: 'CC Other (All)',\r\n              command: this.routeToFacilityAll('CCOther')\r\n            },\r\n            {\r\n              label: 'CC DLM Sterility Lab',\r\n              command: this.routeToFacility(6)\r\n            },\r\n            {\r\n              label: 'CC Interim Nuclear Pharmacy',\r\n              command: this.routeToFacility(7)\r\n            },\r\n            {\r\n              label: 'CC PET Radiopharmacy',\r\n              command: this.routeToFacility(1)\r\n            },\r\n            {\r\n              label: 'CC PET Radiochemistry',\r\n              command: this.routeToFacility(2)\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          label: 'NIAD Portfolio',\r\n          items: [\r\n            {\r\n              label: 'NIAID 29B Pilot Bioproduction Facility',\r\n              command: this.routeToFacility(20)\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          label: 'NCI Portfolio',\r\n          items: [\r\n            {\r\n              label: 'NCI (All)',\r\n              command: this.routeToFacilityAll('NCI'),\r\n            },\r\n            {\r\n              label: 'NCI SB 1B42', //VVF\r\n              command: this.routeToFacility(10)\r\n            },\r\n            {\r\n              label: 'NCI SB TIL Modular Facility T30',\r\n              command: this.routeToFacility(11)\r\n            },\r\n            {\r\n              label: 'NCI Trailer 1 (TR10B)',\r\n              command: this.routeToFacility(12)\r\n            },\r\n            {\r\n              label: 'NCI Trailer 2 (TR10A)',\r\n              command: this.routeToFacility(13)\r\n            },\r\n            {\r\n              label: 'NCI SB Hyperpolarized C-13 Facility',\r\n              command: this.routeToFacility(19)\r\n            }\r\n          ]\r\n        },\r\n\r\n      ]\r\n    },\r\n\r\n\r\n  ];\r\n\r\n  collapse() {\r\n    this.isExpanded = false;\r\n  }\r\n\r\n  toggle() {\r\n    this.isExpanded = !this.isExpanded;\r\n  }\r\n\r\n  contactUsClick() {\r\n    this.ref = this.dialogService.open(ContactUsDialogComponent, { header: 'Contact Us' });\r\n\r\n    this.ref.onClose.subscribe((message: ContactUsMessage) => {\r\n      if (message) {\r\n        this.dataService.contactUs(message).subscribe();\r\n      }\r\n    });\r\n  }\r\n\r\n  resourcesClick() {\r\n    this.router.navigate(['/home','resources'])\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".dropdown-hover:hover > .dropdown-menu {\r\n  display: inline-block;\r\n}\r\n\r\n.dropdown-hover > .dropdown-toggle:active {\r\n  /*Without this, clicking will make it sticky*/\r\n  pointer-events: none;\r\n}\r\n\r\n.dropdown-hover-right:hover > .dropdown-menu-right {\r\n  display: inline-block;\r\n  /* flex-direction: row-reverse; */\r\n}\r\n\r\n.dropdown-hover-right > .dropdown-toggle:active {\r\n  /*Without this, clicking will make it sticky*/\r\n  pointer-events: none;\r\n}\r\n\r\n.navbar .navbar-nav .nav-item:not(:last-child) .nav-link {\r\n  border-right: 0.5px solid gray;\r\n}\r\n\r\n:host ::ng-deep {\r\n\r\n  p-menubar > div.p-component {\r\n    padding:0;\r\n  }\r\n\r\n  .p-submenu-list {\r\n    width:290px;\r\n  }\r\n}\r\n",
                    "styleUrl": "./nav-menu.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "dialogService",
                        "type": "DialogService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "dataService",
                        "type": "DataService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 16,
                "jsdoctags": [
                    {
                        "name": "dialogService",
                        "type": "DialogService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "dataService",
                        "type": "DataService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<!-- <div class=\"card\"> -->\r\n  <div style=\"padding-left:20px; padding-right:20px;\" class=\"flex justify-content-between\">\r\n    <div class=\"flex align-items-center\">\r\n      <b>Portfolios</b>&nbsp;&nbsp;|&nbsp;&nbsp;<p-menubar [model]=\"items\"></p-menubar>\r\n    </div>\r\n    <div class=\"flex align-items-center\">\r\n      <a (click)=\"resourcesClick()\"><b>Resources</b></a>\r\n    </div>\r\n  </div>\r\n\r\n  \r\n<!-- </div> -->\r\n\r\n<!-- <nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n\r\n  <div class=\"container-fluid\">\r\n\r\n    <button\r\n      class=\"navbar-toggler px-0\"\r\n      type=\"button\"\r\n      data-mdb-toggle=\"collapse\"\r\n      data-mdb-target=\"#navbarExampleOnHover\"\r\n      aria-controls=\"navbarExampleOnHover\"\r\n      aria-expanded=\"false\"\r\n      aria-label=\"Toggle navigation\"\r\n    >\r\n      <i class=\"fas fa-bars\"></i>\r\n    </button>\r\n\r\n    <div\r\n      class=\"collapse navbar-collapse justify-content-between\"\r\n      id=\"navbarSupportedContent\"\r\n    >\r\n      <ul class=\"navbar-nav\">\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link\"><b>Portfolios</b></a>\r\n        </li>\r\n        <li class=\"nav-item dropdown\">\r\n          <a\r\n            class=\"nav-link dropdown\"\r\n            href=\"#\"\r\n            id=\"portfolios-navbarDropdown\"\r\n            role=\"button\"\r\n            data-bs-toggle=\"dropdown\"\r\n            aria-expanded=\"false\"\r\n            >APF Portfolios\r\n          </a>\r\n          <ul class=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n            <li>\r\n              <a [routerLink]=\"['apf-portfolio/all']\" class=\"dropdown-item\"\r\n                >All APF</a\r\n              >\r\n            </li>\r\n            <li>\r\n              <a\r\n                [routerLink]=\"['apf-portfolio/nci']\"\r\n                class=\"dropdown-item\"\r\n                style=\"border-bottom: white\"\r\n                >NCI APF</a\r\n              >\r\n            </li>\r\n            <li>\r\n              <a [routerLink]=\"['apf-portfolio/cc']\" class=\"dropdown-item\"\r\n                >CC APF</a\r\n              >\r\n            </li>\r\n          </ul>\r\n        </li>\r\n      </ul>\r\n      <ul class=\"navbar-nav\">\r\n        <li\r\n          class=\"nav-item dropdown position-static\"\r\n          style=\"display: flex; flex-direction: row-reverse\"\r\n        >\r\n          <a\r\n            class=\"nav-link dropdown-toggle\"\r\n            href=\"#\"\r\n            id=\"navbarDropdown\"\r\n            role=\"button\"\r\n            data-bs-toggle=\"dropdown\"\r\n            aria-expanded=\"false\"\r\n          >\r\n            Resources\r\n          </a>\r\n          <div\r\n            class=\"dropdown-menu mt-0\"\r\n            aria-labelledby=\"navbarDropdown\"\r\n            style=\"border-top-left-radius: 0; border-top-right-radius: 0\"\r\n          >\r\n            <div class=\"container\">\r\n              <div class=\"row my-4\">\r\n                <div class=\"col-md-4 col-lg-3 mb-3 mb-lg-0\">\r\n                  <div class=\"list-group list-group-flush\">\r\n                    <p class=\"mb-0 list-group-item font-weight-bold\">\r\n                      <b>About FCIS</b>\r\n                    </p>\r\n                    <a\r\n                      [routerLink]=\"['resource', 'who-we-are']\"\r\n                      class=\"list-group-item list-group-item-action\"\r\n                      >Who We Are</a\r\n                    >\r\n                    <a\r\n                      [routerLink]=\"['resource', 'gui-org-chart']\"\r\n                      class=\"list-group-item list-group-item-action\"\r\n                      >FCIS Team</a\r\n                    >\r\n                    <a\r\n                      [routerLink]=\"['resource', 'functionalstmt']\"\r\n                      class=\"list-group-item list-group-item-action\"\r\n                    >\r\n                      FCIS Functional Statement\r\n                    </a>\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-md-4 col-lg-3 mb-3 mb-lg-0\">\r\n                  <div class=\"list-group list-group-flush\">\r\n                    <p class=\"mb-0 list-group-item font-weight-bold\">\r\n                      <b>Resources</b>\r\n                    </p>\r\n                    <a\r\n                      [routerLink]=\"['resource', 'gui-doc-abbreviations']\"\r\n                      class=\"list-group-item list-group-item-action\"\r\n                      >Abbreviations</a\r\n                    >\r\n                    <a\r\n                      [routerLink]=\"['resource', 'gui-doc-definitions']\"\r\n                      class=\"list-group-item list-group-item-action\"\r\n                      >Definitions</a\r\n                    >\r\n                    <a\r\n                      [routerLink]=\"['resource', 'gui-doc-faq']\"\r\n                      class=\"list-group-item list-group-item-action\"\r\n                      >FAQ</a\r\n                    >\r\n                    <a\r\n                      [routerLink]=\"['resource', 'gui-doc-wlinks']\"\r\n                      class=\"list-group-item list-group-item-action\"\r\n                      >News & Links</a\r\n                    >\r\n                    <a\r\n                      [routerLink]=\"['resource', 'gui-doc-drm']\"\r\n                      class=\"list-group-item list-group-item-action\"\r\n                      >DRM</a\r\n                    >\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-md-4 col-lg-3 mb-3 mb-md-0\">\r\n                  <div class=\"list-group list-group-flush\">\r\n                    <p class=\"mb-0 list-group-item font-weight-bold\">\r\n                      <b>SOP & WI</b>\r\n                    </p>\r\n                    <a [routerLink]=\"['resource', 'dfom-sop']\"\r\n                      class=\"list-group-item list-group-item-action\"\r\n                      >DFOM SOP & WI</a\r\n                    >\r\n                    <a href=\"\" class=\"list-group-item list-group-item-action\"\r\n                      >DTR SOP & WI</a\r\n                    >\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-md-4 col-lg-3 mb-3 mb-md-0\">\r\n                  <div class=\"list-group list-group-flush\">\r\n                    <p class=\"mb-0 list-group-item font-weight-bold\">\r\n                      <b>Forms</b>\r\n                    </p>\r\n                    <a href=\"\" class=\"list-group-item list-group-item-action\"\r\n                      >Form 1</a\r\n                    >\r\n                    <a href=\"\" class=\"list-group-item list-group-item-action\"\r\n                      >Form 2</a\r\n                    >\r\n                    <a href=\"\" class=\"list-group-item list-group-item-action\"\r\n                      >Form 3</a\r\n                    >\r\n                    <a href=\"\" class=\"list-group-item list-group-item-action\"\r\n                      >Form 4</a\r\n                    >\r\n                  </div>\r\n                </div>\r\n                <hr />\r\n                <div class=\"col-md-4 col-lg-3 mb-3 mb-md-0\">\r\n                  <div class=\"list-group list-group-flush\">\r\n                    <p class=\"mb-0 list-group-item font-weight-bold\">\r\n                      <b>Templates</b>\r\n                    </p>\r\n                    <a href=\"\" class=\"list-group-item list-group-item-action\"\r\n                      >TT 1</a\r\n                    >\r\n                    <a href=\"\" class=\"list-group-item list-group-item-action\"\r\n                      >TT 2</a\r\n                    >\r\n                    <a href=\"\" class=\"list-group-item list-group-item-action\"\r\n                      >TT 3</a\r\n                    >\r\n                    <a href=\"\" class=\"list-group-item list-group-item-action\"\r\n                      >TT 4</a\r\n                    >\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-md-4 col-lg-3\">\r\n                  <div class=\"list-group list-group-flush\">\r\n                    <p class=\"mb-0 list-group-item font-weight-bold\">\r\n                      <b>Outside Links</b>\r\n                    </p>\r\n                    <a href=\"\" class=\"list-group-item list-group-item-action\"\r\n                      >LL/CI Dashboard</a\r\n                    >\r\n                    <a href=\"\" class=\"list-group-item list-group-item-action\">\r\n                      FCIS Business Dashboard\r\n                    </a>\r\n                    <a href=\"\" class=\"list-group-item list-group-item-action\"\r\n                      >Master Control</a\r\n                    >\r\n                    <a href=\"\" class=\"list-group-item list-group-item-action\"\r\n                      >PI Dashboard</a\r\n                    >\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link\" (click)=\"contactUsClick()\">Contact US</a>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n\r\n  </div>\r\n\r\n</nav> -->\r\n"
        },
        {
            "name": "NihLogoHeaderComponent",
            "id": "component-NihLogoHeaderComponent-a1d1aea241147868ac3764182c90f5053293fa3e77d44980dba5065b57a46d9cdaae11c24fef5653bcd7dddb2c0ea5ef92b71e13633009d2122c8c204342ccc4",
            "file": "src/app/nih-logo-header/nih-logo-header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-nih-logo-header",
            "styleUrls": [
                "./nih-logo-header.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./nih-logo-header.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "userName",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "userService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UserService",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { UserService } from '../shared/auth/user.service';\r\n\r\n@Component({\r\n  selector: 'app-nih-logo-header',\r\n  templateUrl: './nih-logo-header.component.html',\r\n  styleUrls: ['./nih-logo-header.component.scss']\r\n})\r\nexport class NihLogoHeaderComponent {\r\n  userName = ''\r\n  constructor(public userService:UserService) {\r\n    userService.currentUser$.subscribe(user=> {\r\n      this.userName = user.firstname;\r\n    })\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "header {\r\n  padding: 15px 0 10px 10px;\r\n  background: #f9f9f9 url('../../assets/images//DTR_red.png') repeat-x top left;\r\n  position: relative;\r\n\r\n  .title-logo {\r\n    position: absolute;\r\n    top: 20px;\r\n    left: 10px;\r\n  }\r\n\r\n  div.orf-info {\r\n    font-size: 14px;\r\n    color: #555555;\r\n    padding: 0 0 0 100px;\r\n    margin: 0 0;\r\n    background: #f9f9f9;\r\n    font-weight: bold;\r\n  }\r\n\r\n  h1.orf-info {\r\n    font-weight: normal;\r\n    display: inline;\r\n    margin: 0px;\r\n    padding: 0 0 0 100px;\r\n    color: #9a0000;\r\n    font-size: 20px !important;\r\n    font-weight: bold;\r\n    letter-spacing: 1px;\r\n    background: #f9f9f9;\r\n\r\n    text-align: center;\r\n    font: bold 2em Myriad, Myriad Web, Verdana, Arial, Helvetica, sans-serif;\r\n    // line-height: 1.3em;\r\n  }\r\n\r\n  img {\r\n    vertical-align: middle;\r\n    border-style: none;\r\n\r\n  }\r\n\r\n  div.user-info {\r\n    /* top right bottom left */\r\n    padding:4px 20px 4px 4px;\r\n  }\r\n}\r\n",
                    "styleUrl": "./nih-logo-header.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "userService",
                        "type": "UserService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "userService",
                        "type": "UserService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<header>\r\n  <div style=\"display:flex; justify-content: space-between; width:100%\">\r\n    <div>\r\n      <a class=\"title-logo\" href=\"http://www.nih.gov/\">\r\n        <img\r\n          src=\"assets/images/NIH_Master_Logo_Mark_2Color.png\"\r\n          title=\"National Institutes of Health\"\r\n          alt=\"NIH\"\r\n        />\r\n      </a>\r\n      <div class=\"orf-info\">Office of Research Facilities</div>\r\n      <h1 class=\"orf-info\">Facilities Compliance and Inspection Section (FCIS)</h1>\r\n      <div class=\"orf-info\">Division of Technical Resources/Technical Support Branch</div>\r\n    </div>\r\n    <div class=\"user-info\" *ngIf=\"userName\">\r\n      <b>Hello {{userName}}</b>\r\n    </div>\r\n  </div>\r\n\r\n</header>\r\n\r\n\r\n"
        },
        {
            "name": "PageComponent",
            "id": "component-PageComponent-59838d204801fdba4e6be58ad8511f0f6ce8616c7d3db2bd4403d9b2414283b6c782ce447de98ec6be3a27fca527e40964440db2824cde6c11faba4e6f661bd7",
            "file": "src/stories/page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-page",
            "styleUrls": [
                "./page.css"
            ],
            "styles": [],
            "template": "<article>    <!-- <storybook-header\n      [user]=\"user\"\n      (onLogout)=\"doLogout()\"\n      (onLogin)=\"doLogin()\"\n      (onCreateAccount)=\"doCreateAccount()\"\n    ></storybook-header> -->\n    <section>\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a\n          href=\"https://componentdriven.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page\n        states without needing to navigate to them in your app. Here are some\n        handy patterns for managing page data in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose\n          such data from the \"args\" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock\n          these services out using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a\n          href=\"https://storybook.js.org/tutorials/\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Storybook tutorials\n        </a>\n        . Read more in the\n        <a\n          href=\"https://storybook.js.org/docs\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          docs\n        </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg\n          width=\"10\"\n          height=\"10\"\n          viewBox=\"0 0 12 12\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "User | null",
                    "optional": false,
                    "description": "",
                    "line": 83
                }
            ],
            "methodsClass": [
                {
                    "name": "doCreateAccount",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 93,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "doLogin",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 89,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "doLogout",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 85,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { User } from './User';\r\n\r\n@Component({\r\n  selector: 'storybook-page',\r\n  template: `<article>\r\n    <!-- <storybook-header\r\n      [user]=\"user\"\r\n      (onLogout)=\"doLogout()\"\r\n      (onLogin)=\"doLogin()\"\r\n      (onCreateAccount)=\"doCreateAccount()\"\r\n    ></storybook-header> -->\r\n    <section>\r\n      <h2>Pages in Storybook</h2>\r\n      <p>\r\n        We recommend building UIs with a\r\n        <a\r\n          href=\"https://componentdriven.org\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          <strong>component-driven</strong>\r\n        </a>\r\n        process starting with atomic components and ending with pages.\r\n      </p>\r\n      <p>\r\n        Render pages with mock data. This makes it easy to build and review page\r\n        states without needing to navigate to them in your app. Here are some\r\n        handy patterns for managing page data in Storybook:\r\n      </p>\r\n      <ul>\r\n        <li>\r\n          Use a higher-level connected component. Storybook helps you compose\r\n          such data from the \"args\" of child component stories\r\n        </li>\r\n        <li>\r\n          Assemble data in the page component from your services. You can mock\r\n          these services out using Storybook.\r\n        </li>\r\n      </ul>\r\n      <p>\r\n        Get a guided tutorial on component-driven development at\r\n        <a\r\n          href=\"https://storybook.js.org/tutorials/\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          Storybook tutorials\r\n        </a>\r\n        . Read more in the\r\n        <a\r\n          href=\"https://storybook.js.org/docs\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          docs\r\n        </a>\r\n        .\r\n      </p>\r\n      <div class=\"tip-wrapper\">\r\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\r\n        <svg\r\n          width=\"10\"\r\n          height=\"10\"\r\n          viewBox=\"0 0 12 12\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n        >\r\n          <g fill=\"none\" fillRule=\"evenodd\">\r\n            <path\r\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\r\n              id=\"a\"\r\n              fill=\"#999\"\r\n            />\r\n          </g>\r\n        </svg>\r\n        Viewports addon in the toolbar\r\n      </div>\r\n    </section>\r\n  </article>`,\r\n  styleUrls: ['./page.css']\r\n})\r\nexport default class PageComponent {\r\n  user: User | null = null;\r\n\r\n  doLogout() {\r\n    this.user = null;\r\n  }\r\n\r\n  doLogin() {\r\n    this.user = { name: 'Jane Doe' };\r\n  }\r\n\r\n  doCreateAccount() {\r\n    this.user = { name: 'Jane Doe' };\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "section {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  font-size: 14px;\n  line-height: 24px;\n  padding: 48px 20px;\n  margin: 0 auto;\n  max-width: 600px;\n  color: #333;\n}\n\nsection h2 {\n  font-weight: 900;\n  font-size: 32px;\n  line-height: 1;\n  margin: 0 0 4px;\n  display: inline-block;\n  vertical-align: top;\n}\n\nsection p {\n  margin: 1em 0;\n}\n\nsection a {\n  text-decoration: none;\n  color: #1ea7fd;\n}\n\nsection ul {\n  padding-left: 30px;\n  margin: 1em 0;\n}\n\nsection li {\n  margin-bottom: 8px;\n}\n\nsection .tip {\n  display: inline-block;\n  border-radius: 1em;\n  font-size: 11px;\n  line-height: 12px;\n  font-weight: 700;\n  background: #e7fdd8;\n  color: #66bf3c;\n  padding: 4px 12px;\n  margin-right: 10px;\n  vertical-align: top;\n}\n\nsection .tip-wrapper {\n  font-size: 13px;\n  line-height: 20px;\n  margin-top: 40px;\n  margin-bottom: 40px;\n}\n\nsection .tip-wrapper svg {\n  display: inline-block;\n  height: 12px;\n  width: 12px;\n  margin-right: 4px;\n  vertical-align: top;\n  margin-top: 3px;\n}\n\nsection .tip-wrapper svg path {\n  fill: #1ea7fd;\n}\n",
                    "styleUrl": "./page.css"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "PiDataFilterToolbarComponent",
            "id": "component-PiDataFilterToolbarComponent-013feb9e163ed4e4726c607f8348d160c37e0ec7f68204e32f8705696ac3c5eaf1c3624409ead2033dbb0fb8c26fcf5ca729eecb483396ef2f779d50abfc3c9d",
            "file": "src/app/pi-data-filter-toolbar/pi-data-filter-toolbar.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-pi-data-filter-toolbar",
            "styleUrls": [
                "./pi-data-filter-toolbar.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./pi-data-filter-toolbar.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "defaultEndDate",
                    "defaultValue": "new Date()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 48,
                    "type": "Date",
                    "decorators": []
                },
                {
                    "name": "defaultFacilityId",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "defaultInterval",
                    "defaultValue": "60",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 51,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "defaultStartDate",
                    "defaultValue": "(() => {\r\n    const yesterday = new Date();\r\n    yesterday.setDate(yesterday.getDate() - 1);\r\n    return yesterday;\r\n  })()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 41,
                    "type": "Date",
                    "decorators": []
                },
                {
                    "name": "defaultStatus",
                    "defaultValue": "'Sum All'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "facilities",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "any[]",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "filterChange",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 54,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "_statusOptions$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subject<literal type[]>",
                    "optional": false,
                    "description": "",
                    "line": 110,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "facilityStatusOptions",
                    "defaultValue": "[\r\n    { name: 'Composite Status', value: 'Sum All' }\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 106,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "filterForm",
                    "defaultValue": "this.fb.group({\r\n    facility: { repName: '', sectionName: '', value: 0 },\r\n    status: '',\r\n    startDate: new Date(),\r\n    endDate: new Date(),\r\n    interval: 0\r\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 89
                },
                {
                    "name": "intervalOptions",
                    "defaultValue": "[\r\n    { name: '10 Min', value: 10 },\r\n    { name: '30 Min', value: 30 },\r\n    { name: '1 Hour', value: 60 },\r\n    { name: '24 Hour', value: 1440 }\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 117,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "roomStatusOptions",
                    "defaultValue": "[\r\n    { name: 'Composite Status', value: 'Sum All' },\r\n    { name: 'Temp Status', value: 'Temp' },\r\n    { name: 'dP Status', value: 'DP' },\r\n    { name: 'RH Status', value: 'Hum' },\r\n    { name: 'ACH Status', value: 'Airx' }\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 98,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 77,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "search",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 124,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { BehaviorSubject, Observable, Subject } from 'rxjs';\r\nimport {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  OnInit,\r\n  Output\r\n} from '@angular/core';\r\nimport { FormBuilder, FormControl } from '@angular/forms';\r\n\r\ntype filterFormData = {\r\n  facility: FormControl<{\r\n    repName: string;\r\n    sectionName: string;\r\n    value: number;\r\n  }>;\r\n  status: FormControl<string>;\r\n  startDate: FormControl<Date>;\r\n  endDate: FormControl<Date>;\r\n  interval: FormControl<number>;\r\n};\r\n\r\n@Component({\r\n  selector: 'app-pi-data-filter-toolbar',\r\n  templateUrl: './pi-data-filter-toolbar.component.html',\r\n  styleUrls: ['./pi-data-filter-toolbar.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class PiDataFilterToolbarComponent implements OnInit {\r\n  @Input()\r\n  facilities: any[] = [];\r\n\r\n  @Input()\r\n  defaultFacilityId: number = 0;\r\n\r\n  @Input()\r\n  defaultStatus: string = 'Sum All';\r\n\r\n  @Input()\r\n  defaultStartDate: Date = (() => {\r\n    const yesterday = new Date();\r\n    yesterday.setDate(yesterday.getDate() - 1);\r\n    return yesterday;\r\n  })();\r\n\r\n  @Input()\r\n  defaultEndDate: Date = new Date();\r\n\r\n  @Input()\r\n  defaultInterval: number = 60;\r\n\r\n  @Output()\r\n  filterChange = new EventEmitter<any>();\r\n\r\n  constructor(private fb: FormBuilder) {\r\n    // this.filterForm.valueChanges\r\n    //   //.pipe(debounce(() => timer(100)))\r\n    //   .subscribe((val: any) => {\r\n    //     this.filterChange.emit(val);\r\n    //   });\r\n\r\n    this._statusOptions$ = new BehaviorSubject(this.facilityStatusOptions);\r\n\r\n    this.filterForm.controls.facility.valueChanges.subscribe((fac: any) => {\r\n      const facId = Number(fac);\r\n      this._statusOptions$.next(\r\n        facId === 0 ? this.facilityStatusOptions : this.roomStatusOptions\r\n      );\r\n\r\n      if (facId === 0 && this.filterForm.controls.status.value !== 'Sum All') {\r\n        this.filterForm.patchValue({ status: 'Sum All' });\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.filterForm.patchValue({\r\n      facility: this.facilities\r\n        ? this.facilities.find((f) => f.facilityId == this.defaultFacilityId)\r\n        : { repName: '', sectionName: '', value: 0 },\r\n      status: this.defaultStatus,\r\n      startDate: this.defaultStartDate,\r\n      endDate: this.defaultEndDate,\r\n      interval: this.defaultInterval\r\n    });\r\n  }\r\n\r\n  filterForm = this.fb.group({\r\n    facility: { repName: '', sectionName: '', value: 0 },\r\n    status: '',\r\n    startDate: new Date(),\r\n    endDate: new Date(),\r\n    interval: 0\r\n  });\r\n\r\n\r\n  private roomStatusOptions = [\r\n    { name: 'Composite Status', value: 'Sum All' },\r\n    { name: 'Temp Status', value: 'Temp' },\r\n    { name: 'dP Status', value: 'DP' },\r\n    { name: 'RH Status', value: 'Hum' },\r\n    { name: 'ACH Status', value: 'Airx' }\r\n  ];\r\n\r\n  private facilityStatusOptions = [\r\n    { name: 'Composite Status', value: 'Sum All' }\r\n  ];\r\n\r\n  private _statusOptions$: Subject<{ name: string; value: string }[]>;\r\n  public get statusOptions$() {\r\n    return this._statusOptions$ as Observable<\r\n      { name: string; value: string }[]\r\n    >;\r\n  }\r\n\r\n  public intervalOptions = [\r\n    { name: '10 Min', value: 10 },\r\n    { name: '30 Min', value: 30 },\r\n    { name: '1 Hour', value: 60 },\r\n    { name: '24 Hour', value: 1440 }\r\n  ];\r\n\r\n  search() {\r\n    const searchVal = this.filterForm.value;\r\n    this.filterChange.emit(searchVal);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".filter-bar {\r\n  display: block;\r\n  label {\r\n    width: 120px;\r\n  }\r\n  .filter-control {\r\n    width: 408;\r\n  }\r\n  ::ng-deep input.p-component,\r\n  ::ng-deep div.p-dropdown {\r\n    width: 208px;\r\n  }\r\n}\r\n",
                    "styleUrl": "./pi-data-filter-toolbar.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 54,
                "jsdoctags": [
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "statusOptions$": {
                    "name": "statusOptions$",
                    "getSignature": {
                        "name": "statusOptions$",
                        "type": "",
                        "returnType": "",
                        "line": 111
                    }
                }
            },
            "templateData": "<div class=\"filter-bar\" [formGroup]=\"filterForm\">\r\n  <div>\r\n    <label>Facility</label>\r\n    <p-dropdown\r\n      [options]=\"facilities\"\r\n      placeholder=\"\"\r\n      optionLabel=\"repName\"\r\n      formControlName=\"facility\"\r\n    >\r\n    </p-dropdown>\r\n  </div>\r\n  <div>\r\n    <label>Status</label>\r\n    <p-dropdown\r\n      [options]=\"(statusOptions$ | async) || []\"\r\n      placeholder=\"\"\r\n      optionLabel=\"name\"\r\n      optionValue=\"value\"\r\n      formControlName=\"status\"\r\n    >\r\n    </p-dropdown>\r\n  </div>\r\n  <div>\r\n    <label>Start Date</label>\r\n    <p-calendar\r\n      inputId=\"basic\"\r\n      [showTime]=\"true\"\r\n      [hourFormat]=\"'12'\"\r\n      formControlName=\"startDate\"\r\n    ></p-calendar>\r\n  </div>\r\n  <div>\r\n    <label>End Date</label>\r\n    <p-calendar\r\n      inputId=\"basic\"\r\n      [showTime]=\"true\"\r\n      [hourFormat]=\"'12'\"\r\n      formControlName=\"endDate\"\r\n    ></p-calendar>\r\n  </div>\r\n  <div>\r\n    <label>Interval</label>\r\n    <p-dropdown\r\n      [options]=\"intervalOptions\"\r\n      placeholder=\"\"\r\n      optionLabel=\"name\"\r\n      optionValue=\"value\"\r\n      formControlName=\"interval\"\r\n    ></p-dropdown>\r\n  </div>\r\n  <div>\r\n    <button pButton (click)=\"search()\">Search</button>\r\n  </div>\r\n  <!-- <div>\r\n        <button pButton (click)=\"reset()\">Reset</button>\r\n    </div> -->\r\n</div>\r\n\r\n<!-- \r\n<asp:Table ID=\"Table1\" runat=\"server\" CellPadding=\"2\" Width=\"800px\"  CellSpacing=\"4\" BorderWidth=\"0\">\r\n    <asp:TableRow Font-Bold=\"true\" ForeColor=\"White\">\r\n         <asp:TableCell VerticalAlign=\"Top\">\r\n             Facility:\r\n             </asp:TableCell>\r\n          <asp:TableCell VerticalAlign=\"Top\">\r\n             Status:\r\n             </asp:TableCell>\r\n          <asp:TableCell VerticalAlign=\"Top\">\r\n             Start Date:\r\n             </asp:TableCell>\r\n         <asp:TableCell VerticalAlign=\"Top\">\r\n             End Date:\r\n             </asp:TableCell>\r\n        <asp:TableCell VerticalAlign=\"Top\">\r\n             Interval:\r\n             </asp:TableCell>\r\n        <asp:TableCell VerticalAlign=\"Top\">\r\n              \r\n             </asp:TableCell>\r\n        <asp:TableCell VerticalAlign=\"Top\">\r\n             \r\n             </asp:TableCell>\r\n        </asp:TableRow>\r\n        <asp:TableRow>\r\n         \r\n         <asp:TableCell VerticalAlign=\"Top\" HorizontalAlign=\"Right\">\r\n             <asp:DropDownList CssClass=\"form-control\" ID=\"ddlfacilSelector\"\r\n                   \r\n                 runat=\"server\" Width=\"280px\"  Height=\"40px\" >\r\n               \r\n                 <asp:ListItem Value=\"0\"> Portfolio (All) </asp:ListItem>\r\n                 <asp:ListItem Value=\"1\">   CC PET Radiopharmacy  </asp:ListItem>\r\n                 <asp:ListItem Value=\"2\">   CC B3 PET Radiochemistry  </asp:ListItem>\r\n                 <asp:ListItem Value=\"6\">  CC DLM Sterility </asp:ListItem>\r\n                 <asp:ListItem Value=\"3\"> CC CCE 2J Cell Therapy Lab </asp:ListItem>\r\n                 <asp:ListItem Value=\"5\">  CC CCE East Terrace Modular  </asp:ListItem>\r\n                 <asp:ListItem Value=\"10\"> NCI 1B42 </asp:ListItem>\r\n                 <asp:ListItem Value=\"11\"> NCI TIL Modular (T30) </asp:ListItem>\r\n                 <asp:ListItem Value=\"12\">  NCI Trailer 1 (10B)</asp:ListItem>\r\n                 <asp:ListItem Value=\"13\">  NCI Trailer 2 (10A)</asp:ListItem>\r\n                 <asp:ListItem Value=\"17\">   CC PHARMACY I-IVAU  </asp:ListItem>\r\n                 <asp:ListItem Value=\"19\">   NCI Hyperpolarized C-13   </asp:ListItem>\r\n           </asp:DropDownList>\r\n             </asp:TableCell>\r\n       \r\n         <asp:TableCell VerticalAlign=\"Top\" HorizontalAlign=\"Right\">\r\n             <asp:DropDownList CssClass=\"form-control\" ID=\"ddlStatusSelector\" runat=\"server\" ClientIDMode=\"Static\" Width=\"180px\" Height=\"40px\"  >\r\n                    <asp:ListItem Value=\"Sum All\" Selected=\"True\"  >Composite Status</asp:ListItem>\r\n                 <asp:ListItem Value=\"Temp\">Temp Status</asp:ListItem>\r\n                 <asp:ListItem Value=\"DP\">dP Status</asp:ListItem>\r\n                   <asp:ListItem Value=\"Hum\">RH Status</asp:ListItem>\r\n                   <asp:ListItem Value=\"Airx\">ACH Status</asp:ListItem>\r\n                  \r\n               </asp:DropDownList>\r\n             </asp:TableCell>\r\n       \r\n          <asp:TableCell VerticalAlign=\"Top\" HorizontalAlign=\"Right\">\r\n              <asp:TextBox ID=\"txtEndTime\" Text=\"Start Time\" ClientIDMode=\"Static\" TextMode=\"DateTimeLocal\"  Height=\"40px\"\r\n               CssClass=\"form-control\" runat=\"server\"  Width=\"240px\"></asp:TextBox>\r\n       \r\n             </asp:TableCell>\r\n        \r\n          <asp:TableCell VerticalAlign=\"Top\">\r\n              \r\n           \r\n\r\n               <asp:TextBox ID=\"txtStartTime\" Text=\"End Time\" ClientIDMode=\"Static\" TextMode=\"DateTimeLocal\"  Height=\"40px\"\r\n               CssClass=\"form-control\" runat=\"server\"   Width=\"240px\"></asp:TextBox> \r\n             </asp:TableCell>\r\n         \r\n          <asp:TableCell VerticalAlign=\"Top\" HorizontalAlign=\"Right\">\r\n              <asp:DropDownList ID=\"ddltimescaleSelector\" ClientIDMode=\"Static\" Width=\"120px\"  Height=\"40px\"\r\n                 CssClass=\"form-control\" runat=\"server\"  >\r\n               \r\n               <asp:ListItem Value=\"10\">10 Min</asp:ListItem>\r\n               <asp:ListItem Value=\"30\">30 Min</asp:ListItem>\r\n               <asp:ListItem Value=\"60\">1 Hour</asp:ListItem>\r\n               <asp:ListItem Value=\"1440\">24 Hour</asp:ListItem>\r\n           </asp:DropDownList>\r\n             </asp:TableCell>\r\n          <asp:TableCell VerticalAlign=\"Top\" HorizontalAlign=\"Right\">\r\n               <asp:Button ID=\"btnUpload\" TabIndex=\"15\" runat=\"server\"    Height=\"40px\"\r\n               CssClass=\"form-control\" Text=\"Show\" OnClick=\"btnUpload_Click\" BackColor=\"#b3112c\" ForeColor=\"White\" />\r\n             </asp:TableCell>\r\n          <asp:TableCell VerticalAlign=\"Top\" HorizontalAlign=\"Right\">\r\n               <asp:Button ID=\"btnReset\" TabIndex=\"15\" runat=\"server\"   Height=\"40px\"\r\n               CssClass=\"form-control\" Text=\"Reset\" OnClick=\"btnReset_Click\" BackColor=\"#b3112c\" ForeColor=\"White\" />\r\n             </asp:TableCell>\r\n         </asp:TableRow>\r\n             </asp:Table> -->\r\n"
        },
        {
            "name": "PiWebapiDemoComponent",
            "id": "component-PiWebapiDemoComponent-f19f26843079ee02cbbedf02b2be695fd7046dd2752b57afc78b2986c001d607008f284de5e6ae66323dd84e7b896fdb16c4ce159d9381adea48a39274b0773a",
            "file": "src/app/pi-webapi-demo/pi-webapi-demo.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-pi-webapi-demo",
            "styleUrls": [
                "./pi-webapi-demo.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./pi-webapi-demo.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_timelineChartData$",
                    "defaultValue": "new BehaviorSubject<TimelineChartData>({\r\n    points: [],\r\n    locations: {},\r\n    // locationCount:0,\r\n    locationType: 'facility'\r\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 183,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "almPiService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AlmPiService",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "chillerStatusLabel",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 168,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "piWebApiService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "PiWebApiService",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "statusColor",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 153,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "chartLabelClick",
                    "args": [
                        {
                            "name": "$event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 141,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "$event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "chartLabelMouseOut",
                    "args": [
                        {
                            "name": "$event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 149,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "$event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "chartLabelMouseOver",
                    "args": [
                        {
                            "name": "$event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 145,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "$event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { BehaviorSubject, Observable, Subject, catchError, combineLatest, filter, map, mergeMap, of } from 'rxjs';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { DialogService, DynamicDialogRef } from 'primeng/dynamicdialog';\r\nimport { Facility, SvgMap } from '../api/models';\r\nimport { FacilityTimelineDashboardService, TimelineChartData } from '../facility-timeline-dashboard/facility-timeline-dashboard.service';\r\n\r\nimport {AlmPiService} from '../api/alm-pi.service';\r\nimport { PiDataFilter } from '../facility-timeline-dashboard/facility-timeline-dashboard.service';\r\nimport { PiWebApiService } from '../api/pi-webapi.service';\r\nimport { TimelineChartDataPoint } from '../facility-timeline-dashboard/facility-timeline-dashboard.service';\r\n\r\n// import {\r\n//   FacilityTimelineDashboardService,\r\n//   PiDataFilter,\r\n//   TimelineChartData,\r\n//   locationStatusLookup\r\n// } from '../facility-timeline-dashboard.service';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-pi-webapi-demo',\r\n  templateUrl: './pi-webapi-demo.component.html',\r\n  styleUrls: ['./pi-webapi-demo.component.css']\r\n})\r\nexport class PiWebapiDemoComponent implements OnInit {\r\n\r\n  constructor(public piWebApiService:PiWebApiService, \r\n    public almPiService: AlmPiService) { }\r\n\r\n  ngOnInit(): void {\r\n    const end = new Date();\r\n    const start = new Date();\r\n    start.setDate(start.getDate() -1 );\r\n\r\n    // this.piWebApiService.timelineData('PET_1', 'Temp',start,end,60).subscribe(x=>{\r\n    //   console.log(x);\r\n    // })\r\n    \r\n    // this.almPiService.getWebId(`\\\\\\\\ORF-COGENAF\\\\cGMP\\\\cGMP\\\\PET_1\\\\1C482-1`).subscribe(x=>{\r\n    //   //'https://orf-cogenaf.ors.nih.gov/piwebapi/elements?path=\\\\\\\\ORF-COGENAF\\\\cGMP\\\\cGMP\\\\PET_1\\\\1C482-1'\r\n\r\n    //   console.log(x);\r\n    // });\r\n\r\n\r\n    const piDataFilter$ = of({\r\n      facility:{\r\n        sectionName:\"PET_1\"\r\n      },\r\n      status:\"Temp\",\r\n      startDate:start,\r\n      endDate:end,\r\n      interval:60\r\n    })\r\n\r\n    piDataFilter$\r\n    .pipe(\r\n      // filter((f) => f.facilityOrPortfolio == 'facility'),\r\n      mergeMap((filter: any) =>\r\n\r\n        this.piWebApiService.timelineData(\r\n          filter.facility.sectionName,\r\n          filter.status,\r\n          filter.startDate,\r\n          filter.endDate,\r\n          filter.interval\r\n        )\r\n          .pipe(\r\n            catchError((err) => {\r\n              console.log(\r\n                'Error from dataService.facilityRoomsTimelineDate:' +\r\n                  JSON.stringify(err)\r\n              );\r\n              return of([]);\r\n            }),\r\n            map((data) => ({ filter, data }))\r\n          )\r\n      )\r\n    )\r\n    .subscribe((dataAndFilter) => {\r\n      const chartDataPoints: TimelineChartDataPoint[] = [];\r\n      //const rooms = dataAndFilter.data.map((d) => d.room);\r\n      // const roomLookup = keyBy(rooms, (r) => r.roomNumber);\r\n      const timestamps = (dataAndFilter.data || [])\r\n        .filter((x) => x.points.some(Boolean))\r\n        .map((x) => x.points[0].timestamp);\r\n      const minTimestamp = timestamps.reduce(function (a, b) {\r\n        return a < b ? a : b;\r\n      },Number.MAX_VALUE);\r\n\r\n      for (const x of dataAndFilter.data) {\r\n        if (!x.points.some(Boolean)) {\r\n          x.points = [\r\n            {\r\n              timestamp: minTimestamp,\r\n              numeric_value: 1\r\n            },\r\n            {\r\n              timestamp: dataAndFilter.filter.endDate.getTime(),\r\n              numeric_value: 1\r\n            }\r\n          ];\r\n        }\r\n\r\n        x.points.sort((a, b) => a.timestamp - b.timestamp);\r\n        let startTime = x.points[0].timestamp;\r\n        for (const y of x.points) {\r\n          if (y.timestamp < dataAndFilter.filter.startDate.getTime()) {\r\n            console.log('error - timestamp before request time');\r\n          }\r\n          const point: TimelineChartDataPoint = {\r\n            locationName: x.location.roomNumber, //.room.roomNumber,\r\n            tag: x.tag,\r\n            startDate: new Date(startTime),\r\n            endDate: new Date(Math.max(y.timestamp, startTime)),\r\n            statusColor: this.statusColor(y.numeric_value),\r\n            chillerStatusLabel: this.chillerStatusLabel(y.numeric_value)\r\n          };\r\n\r\n          startTime = y.timestamp;\r\n          chartDataPoints.push(point);\r\n        }\r\n      }\r\n\r\n      const locations:any = {};\r\n      for(const d of dataAndFilter.data) {\r\n        locations[d.location.roomNumber] =d.location\r\n      }\r\n\r\n      this._timelineChartData$.next({\r\n        points: chartDataPoints,\r\n        locations,\r\n        locationType: 'room'\r\n      });\r\n    });\r\n  }\r\n  \r\n  //timelineChartData$: Observable<TimelineChartData>;\r\n\r\n  chartLabelClick($event: any) {\r\n    // console.log($event);\r\n  }\r\n\r\n  chartLabelMouseOver($event: any) {\r\n    //this.service.setHoveredTimelineLabel($event);\r\n  }\r\n\r\n  chartLabelMouseOut($event: any) {\r\n    //this.service.setHoveredTimelineLabel('');\r\n  }\r\n\r\n  private statusColor = (statusVal: number) => {\r\n    switch (statusVal) {\r\n      case 0:\r\n        return 'green';\r\n      case 1:\r\n        return 'gray';\r\n      case 2:\r\n        return 'yellow';\r\n      case 3:\r\n        return 'red';\r\n      default:\r\n        return 'lightgray';\r\n    }\r\n  };\r\n\r\n  private chillerStatusLabel = (statusVal: number) => {\r\n    switch (statusVal) {\r\n      case 0:\r\n        return 'Within Spec';\r\n      case 1:\r\n        return 'Comm Loss';\r\n      case 2:\r\n        return 'Warning';\r\n      case 3:\r\n        return 'Alarm (out of Spec)';\r\n      default:\r\n        return '';\r\n    }\r\n  };\r\n\r\n  private _timelineChartData$ = new BehaviorSubject<TimelineChartData>({\r\n    points: [],\r\n    locations: {},\r\n    // locationCount:0,\r\n    locationType: 'facility'\r\n  });\r\n\r\n  public get timelineChartData$() {\r\n    return this._timelineChartData$ as Observable<TimelineChartData>;\r\n  } \r\n\r\n  \r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./pi-webapi-demo.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "piWebApiService",
                        "type": "PiWebApiService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "almPiService",
                        "type": "AlmPiService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 26,
                "jsdoctags": [
                    {
                        "name": "piWebApiService",
                        "type": "PiWebApiService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "almPiService",
                        "type": "AlmPiService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "timelineChartData$": {
                    "name": "timelineChartData$",
                    "getSignature": {
                        "name": "timelineChartData$",
                        "type": "",
                        "returnType": "",
                        "line": 190
                    }
                }
            },
            "templateData": "<p>pi-webapi-demo works!</p>\r\n\r\n\r\n<app-apf-timeline-chart [chartData]=\"\r\n(timelineChartData$ | async) || {\r\n  points: [],\r\n  locations: {},\r\n  locationType: 'facility'\r\n}\r\n\" [highlightedLabel]=\"''\"\r\n          (chartLabelClick)=\"chartLabelClick($event)\"\r\n          (chartLabelMouseOver)=\"chartLabelMouseOver($event)\"\r\n          (chartLabelMouseOut)=\"chartLabelMouseOut($event)\"></app-apf-timeline-chart>"
        },
        {
            "name": "PortfolioDashboardComponent",
            "id": "component-PortfolioDashboardComponent-4e7f6ba755e40c8a4be145c9e1f3e33af6495bd6494e273e2d69bffdc884748e8ba75839729b19310e39fabba23af04e7c7e03008f4b96931ce508b769b80233",
            "file": "src/app/portfolio-dashboard/portfolio-dashboard.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-portfolio-dashboard",
            "styleUrls": [
                "./portfolio-dashboard.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./portfolio-dashboard.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_timelineChartData$",
                    "defaultValue": "new BehaviorSubject<TimelineChartData>({\r\n    points: [],\r\n    locations: {},\r\n    locationType: 'facility'\r\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subject<TimelineChartData>",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "ccAllColors",
                    "defaultValue": "[\r\n    '#94762d',  // 2J\r\n    '#b5fd19', // IIVAU\r\n    '#fb09bf', // Pet_1\r\n    'darkviolet', // Pet_B3\r\n    '#00ffff', // T30\r\n    '#c9363c'\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 36
                },
                {
                    "name": "cceColors",
                    "defaultValue": "['#94762d']",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 45
                },
                {
                    "name": "ccOtherColors",
                    "defaultValue": "['#fb09bf']",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 47
                },
                {
                    "name": "ccPharmacyColors",
                    "defaultValue": "['#b5fd19']",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 46
                },
                {
                    "name": "chartBaseOptions",
                    "defaultValue": "{\r\n    pieHole: 0.5,\r\n    pieSliceText: 'none'\r\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "chartOptions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 50
                },
                {
                    "name": "chillerStatusLabel",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 188,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "growthByFacilityData$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<FacilityGsf[]>",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "nciColors",
                    "defaultValue": "['#00ffff']",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 48
                },
                {
                    "name": "statusColor",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 173,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 169,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { BehaviorSubject, Observable, Subject, catchError, map, mergeMap, of } from 'rxjs';\r\nimport { Component,OnInit } from '@angular/core';\r\nimport {\r\n  TimelineChartData,\r\n  TimelineChartDataPoint\r\n} from '../facility-timeline-dashboard/facility-timeline-dashboard.service';\r\nimport { keyBy} from 'lodash';\r\n\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { DataService } from '../api/data.service';\r\nimport { FacilityGsf } from '../api/models';\r\nimport { PiWebApiService } from '../api/pi-webapi.service';\r\n\r\n@Component({\r\n  selector: 'app-portfolio-dashboard',\r\n  templateUrl: './portfolio-dashboard.component.html',\r\n  styleUrls: ['./portfolio-dashboard.component.css']\r\n})\r\nexport class PortfolioDashboardComponent implements OnInit {\r\n\r\n  growthByFacilityData$: Observable<FacilityGsf[]>;\r\n  private _timelineChartData$: Subject<TimelineChartData> = new BehaviorSubject<TimelineChartData>({\r\n    points: [],\r\n    locations: {},\r\n    locationType: 'facility'\r\n  });\r\n  public get timelineChartData$() {\r\n    return this._timelineChartData$ as Observable<TimelineChartData>;\r\n  }\r\n\r\n  chartBaseOptions = {\r\n    pieHole: 0.5,\r\n    pieSliceText: 'none'\r\n  }\r\n  \r\n  ccAllColors = [\r\n    '#94762d',  // 2J\r\n    '#b5fd19', // IIVAU\r\n    '#fb09bf', // Pet_1\r\n    'darkviolet', // Pet_B3\r\n    '#00ffff', // T30\r\n    '#c9363c'\r\n  ];\r\n\r\n  cceColors = ['#94762d'];\r\n  ccPharmacyColors = ['#b5fd19'];\r\n  ccOtherColors = ['#fb09bf'];\r\n  nciColors = ['#00ffff'];\r\n\r\n  chartOptions:any\r\n  \r\n\r\n  constructor(private activatedRoute: ActivatedRoute, private dataService: DataService, private piWebApiService: PiWebApiService) {\r\n    this.growthByFacilityData$ = this.activatedRoute.params.pipe(\r\n      mergeMap(p => this.dataService.gsfByFacility(p.portfolioId)),\r\n      map((d: any) => d.map((x: any) => [x.facility, x.gsf]))\r\n    )\r\n\r\n    this.activatedRoute.params.subscribe(p=>{\r\n      const portfolioId = p['portfolioId'].toLowerCase();\r\n      const colors = portfolioId === 'cc' ?\r\n        [\r\n          '#94762d',  // 2J\r\n          'orange', // ??\r\n          '#b5fd19', // IIVAU,\r\n          '#fb09bf', // Pet_1\r\n          'darkviolet', // Pet_B3\r\n        ] : portfolioId === 'cce' ? ['#94762d'] :\r\n        portfolioId === 'ccpharmacy' ? ['#b5fd19'] :\r\n        portfolioId === 'ccother' ? ['#fb09bf','darkviolet'] :\r\n        portfolioId === 'nci' ? [\r\n          'lightblue', \r\n          '#00ffff', \r\n          'deepskyblue',\r\n          'blue',\r\n          ] :\r\n        [];\r\n\r\n        this.chartOptions = {...this.chartBaseOptions, colors}\r\n    })\r\n\r\n    const twoDaysAgo = new Date();\r\n    twoDaysAgo.setDate(twoDaysAgo.getDate() - 2);\r\n\r\n\r\n    this.activatedRoute.params.pipe(\r\n      mergeMap((p: any) =>\r\n        //this.dataService\r\n        this.piWebApiService\r\n          .facilityAlltimelineData(\r\n            p.portfolioId,\r\n            twoDaysAgo,\r\n            new Date(),\r\n            30\r\n          )\r\n\r\n          .pipe(\r\n            catchError((err) => {\r\n              console.log(\r\n                'Error from dataService.facilityAlltimelineData:' +\r\n                JSON.stringify(err)\r\n              );\r\n              return of([]);\r\n            })\r\n          )\r\n      )\r\n    )\r\n      .subscribe((data) => {\r\n        const chartDataPoints: TimelineChartDataPoint[] = [];\r\n        const facilities = data.map((d) => d.facility);\r\n        const facilityLookup = keyBy(facilities, (f) => f.facilityName);\r\n        const timestamps = (data || [])\r\n          .filter((x) => x.points.some(Boolean))\r\n          .map((x) => x.points[0].timestamp);\r\n        const minTimestamp = timestamps.reduce(function (a, b) {\r\n          return a < b ? a : b;\r\n        }, Number.MAX_VALUE);\r\n\r\n        const endDate = new Date();\r\n        const startDate = new Date();\r\n        startDate.setDate(startDate.getDate() - 2);\r\n\r\n        for (const x of data) {\r\n          if (!x.points.some(Boolean)) {\r\n            x.points = [\r\n              {\r\n                timestamp: minTimestamp,\r\n                numeric_value: 1\r\n              },\r\n              {\r\n                timestamp: endDate.getTime(),\r\n                numeric_value: 1\r\n              }\r\n            ];\r\n          }\r\n\r\n          x.points.sort((a, b) => a.timestamp - b.timestamp);\r\n          let startTime = x.points[0].timestamp;\r\n          for (const y of x.points.sort((a, b) => a.timestamp - b.timestamp)) {\r\n            if (y.timestamp < startDate.getTime()) {\r\n              console.log('error - timestamp before request time');\r\n            }\r\n            const point: TimelineChartDataPoint = {\r\n              locationName: x.facility.facilityName,\r\n              tag: x.tag,\r\n              startDate: new Date(startTime),\r\n              endDate: new Date(Math.max(y.timestamp, startTime)),\r\n              statusColor: this.statusColor(y.numeric_value),\r\n              chillerStatusLabel: this.chillerStatusLabel(y.numeric_value)\r\n            };\r\n\r\n            startTime = y.timestamp;\r\n            chartDataPoints.push(point);\r\n          }\r\n        }\r\n\r\n        this._timelineChartData$.next({\r\n          points: chartDataPoints,\r\n          locations: facilityLookup,\r\n          locationType: 'facility'\r\n        });\r\n      });\r\n\r\n\r\n\r\n\r\n\r\n  }\r\n  ngOnInit(): void {\r\n\r\n  }\r\n\r\n  private statusColor = (statusVal: number) => {\r\n    switch (statusVal) {\r\n      case 0:\r\n        return 'green';\r\n      case 1:\r\n        return 'gray';\r\n      case 2:\r\n        return 'yellow';\r\n      case 3:\r\n        return 'red';\r\n      default:\r\n        return 'lightgray';\r\n    }\r\n  };\r\n\r\n  private chillerStatusLabel = (statusVal: number) => {\r\n    switch (statusVal) {\r\n      case 0:\r\n        return 'Within Spec';\r\n      case 1:\r\n        return 'Comm Loss';\r\n      case 2:\r\n        return 'Warning';\r\n      case 3:\r\n        return 'Alarm (our of Spec)';\r\n      default:\r\n        return '';\r\n    }\r\n  };\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./portfolio-dashboard.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "activatedRoute",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "dataService",
                        "type": "DataService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "piWebApiService",
                        "type": "PiWebApiService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 50,
                "jsdoctags": [
                    {
                        "name": "activatedRoute",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "dataService",
                        "type": "DataService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "piWebApiService",
                        "type": "PiWebApiService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "timelineChartData$": {
                    "name": "timelineChartData$",
                    "getSignature": {
                        "name": "timelineChartData$",
                        "type": "",
                        "returnType": "",
                        "line": 27
                    }
                }
            },
            "templateData": "<div class=\"card\">\r\n    <div class=\"card-body\">\r\n      <div class=\"row\" id=\"rowTest\" style=\"border: 0px solid red\">\r\n        <div class=\"col-md-3\">\r\n          <app-apf-portfolio-all-map></app-apf-portfolio-all-map>\r\n        </div>\r\n  \r\n        <div class=\"panel-center col-md-9\" style=\"border: 0px solid black\">\r\n        <div class=\"row\">\r\n            <app-apf-timeline-chart [chartData]=\"\r\n            (timelineChartData$ | async) || {\r\n              points: [],\r\n              locations: {},\r\n              locationType: 'facility'\r\n            }\"></app-apf-timeline-chart>\r\n\r\n        </div>\r\n  \r\n          <div class=\"row\">\r\n\r\n            <div class=\"panel-center col-md-6\" style=\"border: 0px solid black\">\r\n              <app-gsf-pie-chart\r\n                [chartData]=\"(growthByFacilityData$ | async) || []\" [chartOptions]=\"chartOptions\"></app-gsf-pie-chart>\r\n              <div class=\"chart-label\">Portfolio GSF by Facility</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  "
        },
        {
            "name": "RoomDataTableComponent",
            "id": "component-RoomDataTableComponent-fd8582555b24a02227ab7a30fe8ad74faeb7e491030ae8bd721136bdc4a348f1dc95576d909a91016aa8ba98381e480fc6786a8311067b834d41eeb8bdd49425",
            "file": "src/app/room-data-table/room-data-table.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-room-data-table",
            "styleUrls": [
                "./room-data-table.component.scss"
            ],
            "styles": [],
            "template": "<table class=\"table table-sm table-striped\" style=\"width:100%\">\n  <tbody>\n    <tr *ngFor=\"let field of displayFields\">\n      <td>\n        <strong>{{ field.name }}</strong>\n      </td>\n      <td>\n        <ng-container\n          *ngIf=\"\n            field.displayType == 'status';\n            then statusCircle;\n            else plainText\n          \"\n          >{{ field.value }}></ng-container\n        >\n        <ng-template #statusCircle>\n          <div\n            class=\"status-circle\"\n            [ngStyle]=\"{ background: statusColor(field.value) }\"\n          ></div>\n        </ng-template>\n        <ng-template #plainText>\n          {{ field.value }}\n        </ng-template>\n      </td>\n    </tr>\n\n    <tr></tr>\n  </tbody>\n</table>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "displayFields",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 44,
                    "type": "RoomDisplayField[]",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 48,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "statusColor",
                    "args": [
                        {
                            "name": "statusVal",
                            "type": "string | number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "\"green\" | \"gray\" | \"yellow\" | \"red\" | \"lightgray\"",
                    "typeParameters": [],
                    "line": 50,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "statusVal",
                            "type": "string | number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\r\n\r\nimport { RoomDisplayField } from '../facility-timeline-dashboard/facility-timeline-dashboard.service'\r\n\r\n@Component({\r\n  selector: 'app-room-data-table',\r\n  template: `\r\n    <table class=\"table table-sm table-striped\" style=\"width:100%\">\r\n      <tbody>\r\n        <tr *ngFor=\"let field of displayFields\">\r\n          <td>\r\n            <strong>{{ field.name }}</strong>\r\n          </td>\r\n          <td>\r\n            <ng-container\r\n              *ngIf=\"\r\n                field.displayType == 'status';\r\n                then statusCircle;\r\n                else plainText\r\n              \"\r\n              >{{ field.value }}></ng-container\r\n            >\r\n            <ng-template #statusCircle>\r\n              <div\r\n                class=\"status-circle\"\r\n                [ngStyle]=\"{ background: statusColor(field.value) }\"\r\n              ></div>\r\n            </ng-template>\r\n            <ng-template #plainText>\r\n              {{ field.value }}\r\n            </ng-template>\r\n          </td>\r\n        </tr>\r\n\r\n        <tr></tr>\r\n      </tbody>\r\n    </table>\r\n  `,\r\n  styleUrls: ['./room-data-table.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class RoomDataTableComponent {\r\n  @Input()\r\n  displayFields: RoomDisplayField[] = [];\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  statusColor(statusVal: string | number) {\r\n    switch (String(statusVal)) {\r\n      case '0':\r\n        return 'green';\r\n      case '1':\r\n        return 'gray';\r\n      case '2':\r\n        return 'yellow';\r\n      case '3':\r\n        return 'red';\r\n      default:\r\n        return 'lightgray';\r\n    }\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".status-circle {\r\n  display: inline-block;\r\n  border: 3px solid black;\r\n  width: 20px;\r\n  height: 20px;\r\n  border-radius: 13px;\r\n  vertical-align: text-bottom;\r\n  margin-left: 10px;\r\n}\r\n",
                    "styleUrl": "./room-data-table.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 44
            }
        },
        {
            "name": "RoomInfoDisplayComponent",
            "id": "component-RoomInfoDisplayComponent-c7afec2783cdffa90a5087ff33a157f911ec07ab0e3684c29f3d7f419f681987dead5a3cfa7392d59bda6154f049c89837e57475e57aba5caf1a403f22ad2f71",
            "file": "src/app/room-info-display/room-info-display.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-room-info-display",
            "styleUrls": [
                "./room-info-display.component.scss"
            ],
            "styles": [],
            "template": "<div style=\"display:flex\">\n  <div style=\"width:50%; padding:0px 20px\">\n    <app-room-data-table\n      [displayFields]=\"leftTableFields\"\n    ></app-room-data-table>\n  </div>\n  <div style=\"width:50%; padding:0px 20px;\">\n    <app-room-data-table\n      [displayFields]=\"rightTableFields\"\n    ></app-room-data-table>\n  </div>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "attribute",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "roomInfo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "literal type",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_attribute$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subject<string>",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_roomInfo$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subject<literal type>",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "leftTableFields",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "RoomDisplayField[]",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "rightTableFields",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "RoomDisplayField[]",
                    "optional": false,
                    "description": "",
                    "line": 32
                }
            ],
            "methodsClass": [
                {
                    "name": "achFields",
                    "args": [
                        {
                            "name": "roomInfo",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "{}",
                    "typeParameters": [],
                    "line": 203,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "roomInfo",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "compositeFields",
                    "args": [
                        {
                            "name": "roomInfo",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "{}",
                    "typeParameters": [],
                    "line": 77,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "roomInfo",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "dpFields",
                    "args": [
                        {
                            "name": "roomInfo",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "{}",
                    "typeParameters": [],
                    "line": 145,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "roomInfo",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "rhFields",
                    "args": [
                        {
                            "name": "roomInfo",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "{}",
                    "typeParameters": [],
                    "line": 173,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "roomInfo",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "tempFields",
                    "args": [
                        {
                            "name": "roomInfo",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "{}",
                    "typeParameters": [],
                    "line": 113,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "roomInfo",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { BehaviorSubject, Subject, combineLatest, filter } from 'rxjs';\r\nimport { ChangeDetectionStrategy, Component, Input } from '@angular/core';\r\n\r\nimport { RoomDisplayField } from '../facility-timeline-dashboard/facility-timeline-dashboard.service';\r\n\r\n//'../apf-portfolio-ic-dashboard/apf-portfolio-ic-dashboard.service';\r\n\r\n@Component({\r\n  selector: 'app-room-info-display',\r\n  template: `\r\n    <div style=\"display:flex\">\r\n      <div style=\"width:50%; padding:0px 20px\">\r\n        <app-room-data-table\r\n          [displayFields]=\"leftTableFields\"\r\n        ></app-room-data-table>\r\n      </div>\r\n      <div style=\"width:50%; padding:0px 20px;\">\r\n        <app-room-data-table\r\n          [displayFields]=\"rightTableFields\"\r\n        ></app-room-data-table>\r\n      </div>\r\n    </div>\r\n  `,\r\n  styleUrls: ['./room-info-display.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class RoomInfoDisplayComponent {\r\n  private _roomInfo$: Subject<{ [FileSystemFileHandle: string]: string }>;\r\n  private _attribute$: Subject<string>;\r\n\r\n  leftTableFields: RoomDisplayField[] = [];\r\n  rightTableFields: RoomDisplayField[] = [];\r\n\r\n  @Input()\r\n  set roomInfo(v: { [field: string]: string }) {\r\n    this._roomInfo$.next(v);\r\n  }\r\n\r\n  @Input()\r\n  set attribute(v: string) {\r\n    this._attribute$.next(v);\r\n  }\r\n\r\n  constructor() {\r\n    this._roomInfo$ = new BehaviorSubject<{ [field: string]: string }>({});\r\n    this._attribute$ = new BehaviorSubject<string>('');\r\n\r\n    combineLatest([this._roomInfo$, this._attribute$])\r\n    .pipe(filter(([roomInfo,attribute])=>Boolean(Object.keys(roomInfo).length && Boolean(attribute))))\r\n    .subscribe(([roomInfo,attribute]) =>{\r\n        const attr = attribute.toLowerCase();\r\n        const fields =\r\n          attr === 'composite' || attr === 'sum all'\r\n            ? this.compositeFields(roomInfo)\r\n            : attr === 'temp'\r\n            ? this.tempFields(roomInfo)\r\n            : attr === 'hum'\r\n            ? this.rhFields(roomInfo)\r\n            : attr === 'airx'\r\n            ? this.achFields(roomInfo)\r\n            : attr === 'dp'\r\n            ? this.dpFields(roomInfo)\r\n            : [];\r\n\r\n        const mid = fields.length / 2 + (fields.length % 2);\r\n        this.leftTableFields = fields.slice(0, mid);\r\n        this.rightTableFields = fields.slice(mid);\r\n      }\r\n    );\r\n  }\r\n\r\n  // compositeStatus: statusValues[`${pin}|Composite`],\r\n  // tempStatus: statusValues[`${pin}|Temp`],\r\n  // rhStatus: statusValues[`${pin}|Hum`],\r\n  // dpStatus: statusValues[`${pin}|DP`]\r\n\r\n  private compositeFields(roomInfo: { [name: string]: any }) {\r\n    const status = roomInfo['compositeStatus'];\r\n    return [\r\n      { name: 'Room #', value: roomInfo['Room'] },\r\n      { name: 'Room Name', value: roomInfo['Description'] },\r\n      { name: 'Timestamp', value: new Date(status?.timestamp).toLocaleString() },\r\n      { name: 'Classification', value: `ISO-${roomInfo['ISO']}` },\r\n      { name: 'GSF', value: roomInfo['gsf'] },\r\n      {\r\n        name: 'Composite Status',\r\n        value: status.numeric_value,\r\n        displayType: 'status'\r\n      },\r\n      {\r\n        name: 'Temp Status',\r\n        value: roomInfo['tempStatus']?.numeric_value,\r\n        displayType: 'status'\r\n      },\r\n      {\r\n        name: 'DP Status',\r\n        value: roomInfo['dpStatus']?.numeric_value,\r\n        displayType: 'status'\r\n      },\r\n      {\r\n        name: 'RH Status',\r\n        value: roomInfo['rhStatus']?.numeric_value,\r\n        displayType: 'status'\r\n      },\r\n      {\r\n        name: 'ACH Status',\r\n        value: roomInfo['achStatus']?.numeric_value,\r\n        displayType: 'status'\r\n      }\r\n    ];\r\n  }\r\n\r\n  private tempFields(roomInfo: { [name: string]: any }) {\r\n    const parameters =\r\n      roomInfo['roomParameters']?.find((p: any) => p.parameter === 'Temp') ||\r\n      {};\r\n    const status = roomInfo['tempStatus'];\r\n\r\n    return [\r\n      { name: 'Room #', value: roomInfo['Room'] },\r\n      { name: 'Room Name', value: roomInfo['Description'] },\r\n      { name: 'Classification', value: `ISO-${roomInfo['ISO']}` },\r\n      { name: 'GSF', value: roomInfo['gsf'] },\r\n      {\r\n        name: 'Room Status',\r\n        value: status?.numeric_value,\r\n        displayType: 'status'\r\n      },\r\n      { name: 'Timestamp', value: new Date(status?.timestamp).toLocaleString() },\r\n      { name: 'High Alarm Limit', value: roomInfo['HiHi'] || '' },\r\n      { name: 'High Alarm Delay', value: roomInfo['AlmHiDelay'] || '' },\r\n      { name: 'Target', value: roomInfo['Target'] || '' },\r\n      { name: 'Low Alarm Limit', value: roomInfo['HiHi'] || '' },\r\n      { name: 'Low Alarm Delay', value: roomInfo['AlmLoDelay'] || '' },\r\n      { name: 'BAS (SQL)', value: parameters.HTTE10 || 'n/a' },\r\n      { name: 'BAS (PI)', value: parameters.siemansPointName },\r\n      { name: 'Sensor Type', value: parameters.sensorType },\r\n      { name: 'Sensor Location', value: parameters.sensorLocation },\r\n      { name: 'Calibration Type', value: parameters.calibrationType },\r\n      { name: 'Calibration Period', value: parameters.calibrationPeriod },\r\n      { name: 'Next Calibration', value: parameters.nextCalibration }\r\n    ];\r\n  }\r\n\r\n  private dpFields(roomInfo: { [name: string]: any }) {\r\n    const parameters =\r\n      roomInfo['roomParameters']?.find((p: any) => p.parameter === 'DP') || {};\r\n    const status = roomInfo['dpStatus'];\r\n    return [\r\n      { name: 'Room to Room #', value: roomInfo['Room'] },\r\n      { name: 'Room Name', value: roomInfo['Description'] },\r\n      {\r\n        name: 'Room Status',\r\n        value: status?.numeric_value,\r\n        displayType: 'status'\r\n      },\r\n      { name: 'Timestamp', value: new Date(status?.timestamp).toLocaleString() },\r\n      { name: 'High Alarm Limit', value: roomInfo['HiHi'] || '' },\r\n      { name: 'High Alarm Delay', value: roomInfo['AlmHiDelay'] || '' },\r\n      { name: 'Target', value: roomInfo['Target'] || '' },\r\n      { name: 'Low Alarm Limit', value: roomInfo['HiHi'] || '' },\r\n      { name: 'Low Alarm Delay', value: roomInfo['AlmLoDelay'] || '' },\r\n      { name: 'BAS (SQL)', value: parameters.HTTE10 || 'n/a' },\r\n      { name: 'BAS (PI)', value: parameters.siemansPointName },\r\n      { name: 'Sensor Type', value: parameters.sensorType },\r\n      { name: 'Sensor Location', value: parameters.sensorLocation },\r\n      { name: 'Calibration Type', value: parameters.calibrationType },\r\n      { name: 'Calibration Period', value: parameters.calibrationPeriod },\r\n      { name: 'Next Calibration', value: parameters.nextCalibration }\r\n    ];\r\n  }\r\n\r\n  private rhFields(roomInfo: { [name: string]: any }) {\r\n    const parameters =\r\n      roomInfo['roomParameters']?.find((p: any) => p.parameter === 'Hum') || {};\r\n    const status = roomInfo['rhStatus'];\r\n    return [\r\n      { name: 'Room #', value: roomInfo['Room'] },\r\n      { name: 'Room Name', value: roomInfo['Description'] },\r\n      { name: 'Classification', value: `ISO-${roomInfo['ISO']}` },\r\n      { name: 'GSF', value: roomInfo['gsf'] },\r\n      {\r\n        name: 'Room Status',\r\n        value: status?.numeric_value,\r\n        displayType: 'status'\r\n      },\r\n      { name: 'Timestamp', value: new Date(status?.timestamp).toLocaleString() },\r\n      { name: 'High Alarm Limit', value: roomInfo['HiHi'] || '' },\r\n      { name: 'High Alarm Delay', value: roomInfo['AlmHiDelay'] || '' },\r\n      { name: 'RH Target Range', value: roomInfo['Target'] || '' },\r\n      { name: 'Low Alarm Limit', value: roomInfo['HiHi'] || '' },\r\n      { name: 'Low Alarm Delay', value: roomInfo['AlmLoDelay'] || '' },\r\n      { name: 'BAS (SQL)', value: parameters.HTTE10 || 'n/a' },\r\n      { name: 'BAS (PI)', value: parameters.siemansPointName },\r\n      { name: 'Sensor Type', value: parameters.sensorType },\r\n      { name: 'Sensor Location', value: parameters.sensorLocation },\r\n      { name: 'Calibration Type', value: parameters.calibrationType },\r\n      { name: 'Calibration Period', value: parameters.calibrationPeriod },\r\n      { name: 'Next Calibration', value: parameters.nextCalibration }\r\n    ];\r\n  }\r\n\r\n  private achFields(roomInfo: { [name: string]: any }) {\r\n    const parameters =\r\n      roomInfo['roomParameters']?.find((p: any) => p.parameter === 'Airx') ||\r\n      {};\r\n    const status = roomInfo['achStatus'];\r\n    return [\r\n      { name: 'Room #', value: roomInfo['Room'] },\r\n      { name: 'Room Name', value: roomInfo['Description'] },\r\n      { name: 'Classification', value: `ISO-${roomInfo['ISO']}` },\r\n      { name: 'GSF', value: roomInfo['gsf'] },\r\n      { name: 'Current Value', value: '' },\r\n      {\r\n        name: 'Room Status',\r\n        value: status?.numeric_value,\r\n        displayType: 'status'\r\n      },\r\n      { name: 'Timestamp', value: new Date(status?.timestamp).toLocaleString() },\r\n      { name: 'High Alarm Limit', value: roomInfo['HiHi'] || '' },\r\n      { name: 'High Alarm Delay', value: roomInfo['AlmHiDelay'] || '' },\r\n      { name: 'Target', value: roomInfo['Target'] || '' },\r\n      { name: 'Low Alarm Limit', value: roomInfo['HiHi'] || '' },\r\n      { name: 'Low Alarm Delay', value: roomInfo['AlmLoDelay'] || '' },\r\n      { name: 'BAS (SQL)', value: parameters.HTTE10 || 'n/a' },\r\n      { name: 'BAS (PI)', value: parameters.siemansPointName }\r\n    ];\r\n  }\r\n}\r\n\r\n// ACH Fields\r\n// Room #:\t2N307C\r\n// Room Name:\tTissue Culture\r\n// Classification:\tISO-7\r\n// GSF:\t214\r\n// Current Value:\t43.17\r\n// Room Status:\tWithin Spec\r\n// Timestamp:\t3/18/2023 7:55:44 PM\r\n// High Alarm Limit:\t100\r\n// High Alarm Delay:\t1800 (sec)\r\n// Target:\t40\r\n// Low Alarm Limit:\t30\r\n// Low Alarm Delay:\t1800 (sec)\r\n// BAS (SQL):\tn/a\r\n// BAS (PI):\tBMU.10.J.GMP.RM2N307C.AIRX\r\n\r\n// \"Facility\": \"2J\",\r\n// \"ISO\": 7,\r\n// \"Room\": \"2N307G\",\r\n// \"Conn_Room\": null,\r\n// \"Parameter\": \"Temp\",\r\n// \"LoLo\": 59,\r\n// \"LoWarn\": null,\r\n// \"HiHi\": 68,\r\n// \"HiWarn\": null,\r\n// \"Alarmable\": 1,\r\n// \"AlmRange\": \"Both\",\r\n// \"Description\": \"Small Tissue Culture\",\r\n// \"Target\": \"66\",\r\n// \"GraphType\": 0,\r\n// \"GraphLo\": 45,\r\n// \"GraphHi\": 90,\r\n// \"AlmHiDelay\": 1800,\r\n// \"WarnHiDelay\": 300,\r\n// \"AlmLoDelay\": 1800,\r\n// \"WarnLoDelay\": 300,\r\n// \"Comments\": null,\r\n// \"SiemensName\": \"BMU.10.J.GMP.RM2N307G.RMTEMP\",\r\n// \"JCIName\": \"N/A\"\r\n\r\n// Temp Fields\r\n// Room #:\t2N307G\r\n// Room Name:\tSmall Tissue Culture\r\n// Classification:\tISO-7\r\n// GSF:\t169\r\n// Current Value:\t66.49 °F\r\n// Room Status:\tWithin Spec\r\n// Timestamp:\t3/18/2023 7:47:05 PM\r\n// High Alarm Limit:\t68 °F\r\n// High Alarm Delay:\t1800 (sec)\r\n// Target:\t66 °F\r\n// Low Alarm Limit:\t59 °F\r\n// Low Alarm Delay:\t1800 (sec)\r\n// BAS (SQL):\tHTTE-10\r\n// BAS (PI):\tBMU.10.J.GMP.RM2N307G.RMTEMP\r\n// Sensor Type:\tDuct\r\n// Sensor Location:\t2N325MR\r\n// Calibration Type:\tSingle Point\r\n// Calibration Period:\tAnnual\r\n// Next Calibration:\t31-Aug-22\r\n\r\n// Sample Output from https://orfd-cogen.ors.nih.gov/pi-api/table-values?path=\\\\ORF-COGENAF\\cGMP\\APF_Limits\r\n// {\r\n//   \"Facility\": \"2J\",\r\n//   \"ISO\": 7,\r\n//   \"Room\": \"2N307G\",\r\n//   \"Conn_Room\": null,\r\n//   \"Parameter\": \"Airx\",\r\n//   \"LoLo\": 30,\r\n//   \"LoWarn\": null,\r\n//   \"HiHi\": 100,\r\n//   \"HiWarn\": null,\r\n//   \"Alarmable\": 1,\r\n//   \"AlmRange\": \"Both\",\r\n//   \"Description\": \"Small Tissue Culture\",\r\n//   \"Target\": \"40\",\r\n//   \"GraphType\": 0,\r\n//   \"GraphLo\": 0,\r\n//   \"GraphHi\": 75,\r\n//   \"AlmHiDelay\": 1800,\r\n//   \"WarnHiDelay\": 300,\r\n//   \"AlmLoDelay\": 1800,\r\n//   \"WarnLoDelay\": 300,\r\n//   \"Comments\": null,\r\n//   \"SiemensName\": \"BMU.10.J.GMP.RM2N307G.AIRX\",\r\n//   \"JCIName\": \"N/A\"\r\n// },\r\n\r\n//Composite Fields\r\n// Room #:\t2N3071\r\n// Room Name:\tAirlock #1\r\n// Timestamp:\t3/18/2023 7:53:37 PM\r\n// Classification:\tCNC\r\n// GSF:\t195\r\n// Composite Status:\tWithin Spec\r\n// Temp Status:\tWithin Spec\r\n// DP Status:\tWithin Spec\r\n// RH Status:\tWithin Spec\r\n// ACH Status:\tn/a\r\n\r\n// Temp Fields\r\n// Room #:\t2N307G\r\n// Room Name:\tSmall Tissue Culture\r\n// Classification:\tISO-7\r\n// GSF:\t169\r\n// Current Value:\t66.49 °F\r\n// Room Status:\tWithin Spec\r\n// Timestamp:\t3/18/2023 7:47:05 PM\r\n// High Alarm Limit:\t68 °F\r\n// High Alarm Delay:\t1800 (sec)\r\n// Target:\t66 °F\r\n// Low Alarm Limit:\t59 °F\r\n// Low Alarm Delay:\t1800 (sec)\r\n// BAS (SQL):\tHTTE-10\r\n// BAS (PI):\tBMU.10.J.GMP.RM2N307G.RMTEMP\r\n// Sensor Type:\tDuct\r\n// Sensor Location:\t2N325MR\r\n// Calibration Type:\tSingle Point\r\n// Calibration Period:\tAnnual\r\n// Next Calibration:\t31-Aug-22\r\n\r\n//DP Fields\r\n// Room to Room #:\t2N3072_2N3071_DP\r\n// Current Value:\t0.04 psi\r\n// Room Status:\tWithin Spec\r\n// Timestamp:\t3/18/2023 7:52:34 PM\r\n// High Alarm Limit:\t0.1 psi\r\n// High Alarm Delay:\t120 (sec)\r\n// Target:\t0.025 psi\r\n// Low Alarm Limit:\t0 psi\r\n// Low Alarm Delay:\t120 (sec)\r\n// BAS (SQL):\tDPTE-18\r\n// BAS (PI):\tBMU.10.J.GMP.2N3071.2N3072.DP\r\n// Sensor Type:\tRoom\r\n// Sensor Location:\t2N325MR\r\n// Calibration Type:\t3-Point\r\n// Calibration Period:\tAnnual\r\n// Next Calibration:\t31-Aug-22\r\n\r\n// RH Fields\r\n// Room #:\t2N3071\r\n// Room Name:\tAirlock #1\r\n// Classification:\tCNC\r\n// GSF:\t195\r\n// Current Value:\t34.64 %\r\n// Room Status:\tWithin Spec\r\n// Timestamp:\t3/18/2023 7:54:52 PM\r\n// High Alarm Limit:\t60 %\r\n// High Alarm Delay:\t1800 (sec)\r\n// RH Target Range:\t30-55 %\r\n// Low Alarm Limit:\t20 %\r\n// Low Alarm Delay:\t1800 (sec)\r\n// BAS (SQL):\tn/a\r\n// BAS (PI):\tBMU.10.J.GMP.RM2N3071.RMHUM\r\n// Sensor Type:\tn/a\r\n// Sensor Location:\tn/a\r\n// Calibration Type:\tn/a\r\n// Calibration Period:\tn/a\r\n// Next Calibration:\tn/a\r\n\r\n// ACH Fields\r\n// Room #:\t2N307C\r\n// Room Name:\tTissue Culture\r\n// Classification:\tISO-7\r\n// GSF:\t214\r\n// Current Value:\t43.17\r\n// Room Status:\tWithin Spec\r\n// Timestamp:\t3/18/2023 7:55:44 PM\r\n// High Alarm Limit:\t100\r\n// High Alarm Delay:\t1800 (sec)\r\n// Target:\t40\r\n// Low Alarm Limit:\t30\r\n// Low Alarm Delay:\t1800 (sec)\r\n// BAS (SQL):\tn/a\r\n// BAS (PI):\tBMU.10.J.GMP.RM2N307C.AIRX\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./room-info-display.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 42
            },
            "accessors": {
                "roomInfo": {
                    "name": "roomInfo",
                    "setSignature": {
                        "name": "roomInfo",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "v",
                                "type": "literal type",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 35,
                        "jsdoctags": [
                            {
                                "name": "v",
                                "type": "literal type",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                },
                "attribute": {
                    "name": "attribute",
                    "setSignature": {
                        "name": "attribute",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "v",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 40,
                        "jsdoctags": [
                            {
                                "name": "v",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                }
            }
        },
        {
            "name": "SopsComponent",
            "id": "component-SopsComponent-abf851d661d547472aa6e059378526a467ce209661371ef04a5b6c080bc0195eefe6857ca02a60987577e567bdb9b0d3fbd1f79e9f92ee97ab19b50b052cbcdd",
            "file": "src/app/sops/sops.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-sops",
            "styleUrls": [
                "./sops.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./sops.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_sops",
                    "defaultValue": "new BehaviorSubject<any[]>([])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<any[]>",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "service",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DataService",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "openDoc",
                    "args": [
                        {
                            "name": "storedFileName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "storedFileName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {BehaviorSubject, Observable } from 'rxjs'\r\nimport { Component, OnInit } from '@angular/core';\r\n\r\nimport { DataService } from '../api/data.service';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-sops',\r\n  templateUrl: './sops.component.html',\r\n  styleUrls: ['./sops.component.scss']\r\n})\r\nexport class SopsComponent implements OnInit {\r\n\r\n  private _sops:BehaviorSubject<any[]> = new BehaviorSubject<any[]>([]);\r\n  public get sops() {\r\n    return this._sops as Observable<any[]>;\r\n  }\r\n  \r\n  constructor(public service:DataService) { \r\n    this.service.sops().subscribe(x=>{\r\n      this._sops.next(x);\r\n    })\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  openDoc(storedFileName:string){\r\n    const url = `${environment.attachmentRootUrl}/${storedFileName}`;\r\n    window.open(url,'_blank')\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./sops.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "service",
                        "type": "DataService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 17,
                "jsdoctags": [
                    {
                        "name": "service",
                        "type": "DataService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "sops": {
                    "name": "sops",
                    "getSignature": {
                        "name": "sops",
                        "type": "",
                        "returnType": "",
                        "line": 15
                    }
                }
            },
            "templateData": "<div>\r\n\r\n</div>\r\n<br>\r\n<h2 style=\"color:#9A0000\">Standard Operating Procedures</h2>\r\n<br>\r\n<p-table [value]=\"(sops | async) || []\">\r\n    <ng-template pTemplate=\"header\">\r\n        <tr>\r\n            <th pSortableColumn=\"docTitle\">Title</th>\r\n            <th pSortableColumn=\"docDescription\">Description</th>\r\n            <th>Action</th>\r\n        </tr>\r\n    </ng-template>\r\n    <ng-template pTemplate=\"body\" let-sop>\r\n        <tr>\r\n            <td>{{sop.docTitle}}</td>\r\n            <td>{{sop.docDescription}}</td>\r\n            <td><button (click)=\"openDoc(sop.storedFileName)\">View</button></td>\r\n        </tr>\r\n    </ng-template>\r\n</p-table>"
        },
        {
            "name": "StaticContentContainerComponent",
            "id": "component-StaticContentContainerComponent-17af2435a8c95202a3a8815f0dc5f089c3ed88021403cf15de6583229c464e4c404b65c991192e2edf86dcca07c773466b4a33b34f4c3ca7018e5d4f749b0b4b",
            "file": "src/app/static-content-container/static-content-container.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-static-content-container",
            "styleUrls": [
                "./static-content-container.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./static-content-container.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "page",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "page$",
                    "defaultValue": "new Subject()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subject<string>",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "safeHtml",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 17
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\nimport { Subject, mergeMap } from 'rxjs';\r\n\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\n\r\ndeclare const $: any;\r\n\r\n@Component({\r\n  selector: 'app-static-content-container',\r\n  templateUrl: './static-content-container.component.html',\r\n  styleUrls: ['./static-content-container.component.scss']\r\n})\r\nexport class StaticContentContainerComponent {\r\n  safeHtml: any;\r\n\r\n  page$: Subject<string> = new Subject();\r\n  @Input()\r\n  set page(v: string) {\r\n    this.page$.next(v);\r\n  }\r\n  \r\n  constructor(private sanitizer: DomSanitizer, private route: ActivatedRoute, private http:HttpClient) {\r\n\r\n    this.page$.pipe(mergeMap((p)=>this.http.get(`${environment.siteRootUrl}/assets/static-content/${p}`, {responseType: 'text'}))).subscribe((text) => {\r\n      this.safeHtml = text;\r\n\r\n      window.setTimeout(()=>{\r\n        $('.nav-toggle').click( () => {\r\n            $('#collapse').toggle();\r\n            const collapsed = $('#collapse').css(\"display\") == \"none\";\r\n            $('.nav-toggle').html(collapsed ? 'Read More...' : 'Read Less...');\r\n        });\r\n      },0);\r\n      \r\n    });\r\n\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./static-content-container.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "sanitizer",
                        "type": "DomSanitizer",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 23,
                "jsdoctags": [
                    {
                        "name": "sanitizer",
                        "type": "DomSanitizer",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "page": {
                    "name": "page",
                    "setSignature": {
                        "name": "page",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "v",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 21,
                        "jsdoctags": [
                            {
                                "name": "v",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                }
            },
            "templateData": "<div [innerHTML]=\"safeHtml | sanitizedHtml\"></div>\r\n\r\n\r\n<script>\r\n    // $(document).ready(function () {\r\n    //     $('.nav-toggle').click(function () {\r\n    //         var collapse_content_selector = $(this).attr('href');\r\n    //         var toggle_switch = $(this);\r\n    //         $(collapse_content_selector).toggle(function () {\r\n    //             if ($(this).css('display') == 'none') {\r\n    //                 toggle_switch.html('Read More ...');\r\n    //             } else {\r\n    //                 toggle_switch.html('Read Less...');\r\n    //             }\r\n    //         });\r\n    //     });\r\n    // });\r\n// window.setTimeout(()=>{\r\n//     $('.nav-toggle').click( () => {\r\n//         alert('click');\r\n//         // var collapse_content_selector = $(this).attr('href');\r\n//         // var toggle_switch = $(this);\r\n//         // $(collapse_content_selector).toggle( () => {\r\n//         //     if ($(this).css('display') == 'none') {\r\n//         //         toggle_switch.html('Read More ...');\r\n//         //     } else {\r\n//         //         toggle_switch.html('Read Less...');\r\n//         //     }\r\n//         // });\r\n//       });\r\n// },10)\r\n\r\n</script>"
        },
        {
            "name": "StaticContentEditorComponent",
            "id": "component-StaticContentEditorComponent-a91ab0664b4954ce7f0b089a632ed2cd2d9847f27de3e91d725bb9c491c1390b33d1701699c775329d9233b3cc39330496667cee2254b6f44a7eb358a0ab1c7c",
            "file": "src/app/static-content-editor/static-content-editor.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-static-content-editor",
            "styleUrls": [
                "./static-content-editor.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./static-content-editor.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "initialContent",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onSave",
                    "defaultValue": "new EventEmitter<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "editorForm",
                    "defaultValue": "this.fb.group({\r\n    editorContent: ''\r\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "save",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { FormBuilder } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-static-content-editor',\r\n  templateUrl: './static-content-editor.component.html',\r\n  styleUrls: ['./static-content-editor.component.scss']\r\n})\r\nexport class StaticContentEditorComponent implements OnInit {\r\n  @Input() initialContent: string = '';\r\n  @Output() onSave = new EventEmitter<string>();\r\n\r\n  editorForm = this.fb.group({\r\n    editorContent: ''\r\n  });\r\n\r\n  constructor(private fb: FormBuilder) {}\r\n\r\n  ngOnInit(): void {\r\n    this.editorForm.patchValue({ editorContent: this.initialContent });\r\n  }\r\n\r\n  save() {\r\n    const content = this.editorForm.get('editorContent')?.value || '';\r\n    this.onSave.emit(content);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./static-content-editor.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 15,
                "jsdoctags": [
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div [formGroup]=\"editorForm\">\r\n  <editor\r\n    apiKey=\"ojb6b43xupdnswfj06s4xwmmscgqq27vxu4a0410zkolh0cs\"\r\n    formControlName=\"editorContent\"\r\n    [init]=\"{ plugins: 'lists link image table code help wordcount' }\"\r\n  ></editor>\r\n\r\n  <button pButton (click)=\"save()\">Save</button>\r\n</div>\r\n"
        },
        {
            "name": "StaticContentPageComponent",
            "id": "component-StaticContentPageComponent-a5045d8c267b697d28321d2c15486446a48f616ec0f573c0f45fe937162c8b3f4d4de9a310d8b395d22073019be2483dd616be6eaf768357455ce00c0481786e",
            "file": "src/app/static-content-page/static-content-page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-static-content-page",
            "styleUrls": [],
            "styles": [],
            "template": "<app-static-content-container [page]=\"page\"></app-static-content-container>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "page",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ActivatedRoute, Params } from '@angular/router';\r\nimport { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-static-content-page',\r\n  template: '<app-static-content-container [page]=\"page\"></app-static-content-container>',\r\n  styleUrls: []\r\n})\r\nexport class StaticContentPageComponent implements OnInit {\r\n\r\n  public page: string = ''\r\n  constructor(private route: ActivatedRoute) {\r\n    this.route.params.subscribe((params: Params) => {\r\n      this.page = `${params.page}.html`;\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ]
        },
        {
            "name": "SvgStatusMapComponent",
            "id": "component-SvgStatusMapComponent-30aeb3b44833b1ec13c5485fada77bf6cd6464d6626b0200b98783a444750faeac58cc2aa59a5c1e10bf3f645af0ca49a79261d2281f4b35f6c0dbc1f571a9a0",
            "file": "src/app/svg-status-map/svg-status-map.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-svg-status-map",
            "styleUrls": [
                "./svg-status-map.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./svg-status-map.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundImageUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 119,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "highlightedMapPin",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 101,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "pinStates",
                    "defaultValue": "{}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 97,
                    "type": "literal type",
                    "decorators": []
                },
                {
                    "name": "svgMap",
                    "defaultValue": "defaultSvgMap",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 94,
                    "type": "SvgMap",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "pinClick",
                    "defaultValue": "new EventEmitter<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 136,
                    "type": "EventEmitter<string>"
                },
                {
                    "name": "pinMouseOut",
                    "defaultValue": "new EventEmitter<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 142,
                    "type": "EventEmitter<string>"
                },
                {
                    "name": "pinMouseOver",
                    "defaultValue": "new EventEmitter<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 139,
                    "type": "EventEmitter<string>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "_backgroundImageUrl",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 117,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_highlightedMapPin",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 99,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "backgroundStyle",
                    "defaultValue": "{}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 133,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "mapTooltip",
                    "args": [
                        {
                            "name": "pin",
                            "type": "SvgMapPin",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "pin",
                            "type": "SvgMapPin",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "mouseOut",
                    "args": [
                        {
                            "name": "locationId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 162,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "locationId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "mouseOver",
                    "args": [
                        {
                            "name": "locationId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 152,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "locationId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 55,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "pinClass",
                    "args": [
                        {
                            "name": "locationId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 144,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "locationId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  OnChanges,\r\n  Output\r\n} from '@angular/core';\r\nimport { SvgMap, SvgMapPin, defaultSvgMap } from '../api/models';\r\n\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\n\r\ndeclare const bootstrap: any;\r\n\r\nexport interface PinHoverInfo {\r\n  locationId: string;\r\n  status: 'on' | 'off';\r\n}\r\n\r\n@Component({\r\n  selector: 'app-svg-status-map',\r\n  templateUrl: './svg-status-map.component.html',\r\n  styleUrls: ['./svg-status-map.component.scss']\r\n})\r\nexport class SvgStatusMapComponent implements OnChanges {\r\n  constructor(private sanitizer: DomSanitizer) {}\r\n\r\n  mapTooltip(pin: SvgMapPin) {\r\n    const tooltipHtml = `\r\n    <div class=\"label-tooltip\">\r\n      Room: ${pin.title} <br>\r\n\r\n    </div>`;\r\n\r\n    // Room #: ${room.roomNumber} <br>\r\n    // Class: ${room.iso} <br>\r\n    // GSF: ${room.sq}\r\n\r\n    // Room: ${room.roomName} <br>\r\n    // Room #: ${room.roomNumber} <br>\r\n    // Class: ${room.iso} <br>\r\n    // GSF: ${room.sq}\r\n    // const tooltipHtml = `\r\n    //   <div align=\"left\" class=\"label-tooltip\">\r\n    //     <table>\r\n    //      <tr><td> Room: ${room.roomName} </td></tr>\r\n    //      <tr><td><b> Room #: ${room.roomNumber} </b></td></tr>\r\n    //      <tr><td><b> Class: ${room.iso} </b></td></tr>\r\n    //      <tr><td><b> GSF: ${room.sq} </b></td></tr>\r\n    //      </table>\r\n    //   </div>\r\n    // `;\r\n    return tooltipHtml;\r\n  }\r\n\r\n  ngOnChanges() {\r\n    for (const pin of this.svgMap.svgMapPins) {\r\n      window.setTimeout(() => {\r\n        const pinElem = document.getElementById('pin_' + pin.locationId);\r\n        if (pinElem) {\r\n          const tooltip = new bootstrap.Tooltip(pinElem, {\r\n            placement: 'right',\r\n            html: true,\r\n            title: '<div>' + pin.title + '</div>'\r\n          });\r\n        }\r\n      }, 100);\r\n\r\n      // const roomData = this.chartData.locations[locationName];\r\n      // if(roomData) {\r\n      //   const roomTooltip = this.roomLabelTooltip(roomData);\r\n      //   const tooltip = new bootstrap.Tooltip(label, {\r\n      //     placement:'right',\r\n      //     html: true,\r\n      //     title: roomTooltip\r\n      //   });\r\n      // }\r\n    }\r\n\r\n    for (const pin of this.svgMap.svgMapArrows) {\r\n      window.setTimeout(() => {\r\n        const pinElem = document.getElementById('pin_' + pin.locationId);\r\n        if (pinElem) {\r\n          const tooltip = new bootstrap.Tooltip(pinElem, {\r\n            placement: 'right',\r\n            html: true,\r\n            title: '<div>' + pin.locationId + '</div>'\r\n          });\r\n        }\r\n      }, 100);\r\n    }\r\n  }\r\n\r\n  @Input()\r\n  svgMap: SvgMap = defaultSvgMap;\r\n\r\n  @Input()\r\n  pinStates: { [name: string]: string } = {};\r\n\r\n  private _highlightedMapPin = '';\r\n  @Input()\r\n  get highlightedMapPin() {\r\n    return this._highlightedMapPin;\r\n  }\r\n  set highlightedMapPin(v: string) {\r\n    this._highlightedMapPin = v;\r\n    document.querySelectorAll('.pin-border').forEach((elem) => {\r\n      (elem as HTMLElement).style.fill = 'grey';\r\n    });\r\n    const target = document.querySelector(\r\n      '.pin-border[data-locationId=\"' + v + '\"]'\r\n    ) as HTMLElement;\r\n    if (target) {\r\n      target.style.fill = 'black';\r\n    }\r\n  }\r\n\r\n  private _backgroundImageUrl = '';\r\n  @Input()\r\n  get backgroundImageUrl() {\r\n    return this._backgroundImageUrl;\r\n  }\r\n  set backgroundImageUrl(v) {\r\n    this._backgroundImageUrl = v;\r\n\r\n    this.backgroundStyle = {\r\n      'background-image': 'url(' + this.backgroundImageUrl + ')',\r\n      'background-size': '100% 100%',\r\n      'background-repeat': 'no-repeat',\r\n      border: '1px solid blue;'\r\n    };\r\n  }\r\n\r\n  public backgroundStyle = {};\r\n\r\n  @Output()\r\n  pinClick: EventEmitter<string> = new EventEmitter<string>();\r\n\r\n  @Output()\r\n  pinMouseOver: EventEmitter<string> = new EventEmitter<string>();\r\n\r\n  @Output()\r\n  pinMouseOut: EventEmitter<string> = new EventEmitter<string>();\r\n\r\n  pinClass(locationId: string) {\r\n    if (this.pinStates[locationId]) {\r\n      return `pin-${this.pinStates[locationId]}`;\r\n    } else {\r\n      return 'pin-lightgray';\r\n    }\r\n  }\r\n\r\n  mouseOver(locationId: string) {\r\n    const target = document.querySelector(\r\n      '.pin-border[data-locationId=\"' + locationId + '\"]'\r\n    ) as HTMLElement;\r\n    if (target) {\r\n      target.style.fill = 'black';\r\n    }\r\n    this.pinMouseOver.emit(locationId);\r\n  }\r\n\r\n  mouseOut(locationId: string) {\r\n    const target = document.querySelector(\r\n      '.pin-border[data-locationId=\"' + locationId + '\"]'\r\n    ) as HTMLElement;\r\n    if (target) {\r\n      target.style.fill = 'grey';\r\n    }\r\n    this.pinMouseOut.emit(locationId);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "svg {\r\n  background-size: 100% 100%;\r\n  background-repeat: no-repeat;\r\n  max-width: 900px;\r\n  width: 90%;\r\n}\r\n\r\n.map-pin {\r\n  cursor: pointer;\r\n}\r\n\r\n.pin-path {\r\n  fill-opacity: 0.25;\r\n  stroke: #000;\r\n  stroke-linecap: round;\r\n  stroke-linejoin: round;\r\n  // fill-opacity: 0.25;\r\n  // transition: fill 0.2s;\r\n}\r\n\r\n.pin-green {\r\n  fill: green;\r\n}\r\n\r\n.pin-red {\r\n  fill: red;\r\n}\r\n\r\n.pin-yellow {\r\n  fill: yellow;\r\n}\r\n\r\n.pin-gray {\r\n  fill: gray;\r\n}\r\n\r\n.pin-lightgray {\r\n  fill: lightgray;\r\n}\r\n\r\n.pin-white {\r\n  fill: white;\r\n}\r\n\r\ncircle {\r\n  cursor: pointer;\r\n}\r\n\r\n.pin-border {\r\n  fill: grey;\r\n  stroke: #000;\r\n  stroke-miterlimit: 10;\r\n  stroke-width: 0.5px;\r\n\r\n  :hover {\r\n    fill: black;\r\n  }\r\n}\r\n\r\npin-border-highlighted {\r\n  fill: black;\r\n}\r\n",
                    "styleUrl": "./svg-status-map.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "sanitizer",
                        "type": "DomSanitizer",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 24,
                "jsdoctags": [
                    {
                        "name": "sanitizer",
                        "type": "DomSanitizer",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnChanges"
            ],
            "accessors": {
                "highlightedMapPin": {
                    "name": "highlightedMapPin",
                    "setSignature": {
                        "name": "highlightedMapPin",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "v",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 104,
                        "jsdoctags": [
                            {
                                "name": "v",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "highlightedMapPin",
                        "type": "",
                        "returnType": "",
                        "line": 101
                    }
                },
                "backgroundImageUrl": {
                    "name": "backgroundImageUrl",
                    "setSignature": {
                        "name": "backgroundImageUrl",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "v",
                                "type": "",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 122,
                        "jsdoctags": [
                            {
                                "name": "v",
                                "type": "",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "backgroundImageUrl",
                        "type": "",
                        "returnType": "",
                        "line": 119
                    }
                }
            },
            "templateData": "<!-- <div>\r\n  <h2>Background</h2>\r\n  <img src=\"assets/images/floor-plans/PET_B3_Background.png\" />\r\n</div> -->\r\n\r\n<svg\r\n  xmlns=\"http://www.w3.org/2000/svg\"\r\n  [attr.viewBox]=\"svgMap.viewbox\"\r\n  [style]=\"backgroundStyle\"\r\n>\r\n  <defs [innerHtml]=\"svgMap.defs | sanitizedHtml\"></defs>\r\n  <g\r\n    *ngIf=\"svgMap.backgroundSvg\"\r\n    id=\"background\"\r\n    [innerHtml]=\"svgMap.backgroundSvg | sanitizedHtml\"\r\n  ></g>\r\n  <g *ngFor=\"let pin of svgMap.svgMapPins\" [attr.id]=\"'pin_' + pin.locationId\">\r\n    <a\r\n      class=\"map-pin\"\r\n      data-toggle=\"tooltip\"\r\n      (click)=\"pinClick.emit(pin.locationId)\"\r\n      (mouseover)=\"mouseOver(pin.locationId)\"\r\n      (mouseout)=\"mouseOut(pin.locationId)\"\r\n    >\r\n      <path\r\n        *ngIf=\"pin.path\"\r\n        class=\"pin-path\"\r\n        [attr.d]=\"pin.path\"\r\n        [attr.data-locationId]=\"pin.locationId\"\r\n      />\r\n      <circle\r\n        *ngIf=\"!pin.path\"\r\n        class=\"pin-border\"\r\n        [attr.data-locationId]=\"pin.locationId\"\r\n        [attr.cx]=\"pin.cx\"\r\n        [attr.cy]=\"pin.cy\"\r\n        [attr.r]=\"pin.r + 5\"\r\n      />\r\n\r\n      <circle\r\n        [ngClass]=\"pinClass(pin.locationId)\"\r\n        [attr.cx]=\"pin.cx\"\r\n        [attr.cy]=\"pin.cy\"\r\n        [attr.r]=\"pin.r\"\r\n      />\r\n    </a>\r\n  </g>\r\n\r\n  <g\r\n    *ngFor=\"let arrow of svgMap.svgMapArrows\"\r\n    [attr.id]=\"'pin_' + arrow.locationId\"\r\n  >\r\n    <a\r\n      class=\"map-pin\"\r\n      data-toggle=\"tooltip\"\r\n      (click)=\"pinClick.emit(arrow.locationId)\"\r\n      (mouseover)=\"mouseOver(arrow.locationId)\"\r\n      (mouseout)=\"mouseOut(arrow.locationId)\"\r\n    >\r\n      <polygon\r\n        class=\"pin-border\"\r\n        [attr.data-locationId]=\"arrow.locationId\"\r\n        [attr.points]=\"arrow.arrowOutlinePoints\"\r\n      ></polygon>\r\n      <polygon\r\n        [ngClass]=\"pinClass(arrow.locationId)\"\r\n        [attr.points]=\"arrow.arrowInsidePoints\"\r\n      ></polygon>\r\n    </a>\r\n  </g>\r\n</svg>\r\n\r\n<!-- <img\r\n  src=\"assets/images/floor-plans/FloorPlanColorKey.svg\"\r\n  style=\"max-width: 100%; border: 1px solid red\"\r\n/> -->\r\n\r\n<script>\r\n  $('[data-toggle=\"tooltip\"]').tooltip();\r\n</script>\r\n\r\n<!-- <g id=\"dPArrowsFID5\">\r\n  <g id=\"pin1CM100B_1CM100_DP\">\r\n      <polygon id=\"pinBack1CM100B_1CM100_DP\" class=\"stGray\" points=\"152.15 304.26 170.23 321.72 170.23 311.21 198.53 311.21 198.53 297.29 170.23 297.29 170.23 286.72 152.15 304.26\" />\r\n      <polygon id=\"pinColor1CM100B_1CM100_DP\" class=\"stWhite\" points=\"155.47 304.25 167.91 316.27 167.91 308.9 196.22 308.9 196.22 299.61 167.91 299.61 167.91 292.19 155.47 304.25\" />\r\n  </g> -->\r\n"
        },
        {
            "name": "TimelineChartNextComponent",
            "id": "component-TimelineChartNextComponent-25ae36e09943c1082499bbc9a89bd548f40d04eef67b730d9c6088378d0f76310ab321f45755bdf20d6308aab2eba2feeec85e905c60e640e61b409c0afccee4",
            "file": "src/app/timeline-chart-next/timeline-chart-next.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-timeline-chart-next",
            "styleUrls": [
                "./timeline-chart-next.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./timeline-chart-next.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "chartData",
                    "defaultValue": "[\r\n    {\r\n      roomName: 'Room 1',\r\n      statusPoints: [\r\n        { time: new Date('2021-01-01T09:00:00'), status: 0 },\r\n        { time: new Date('2021-01-01T12:00:00'), status: 1 },\r\n        { time: new Date('2021-01-01T15:00:00'), status: 2 }\r\n      ]\r\n    },\r\n    {\r\n      roomName: 'Room 2',\r\n      statusPoints: [\r\n        { time: new Date('2021-01-01T09:00:00'), status: 2 },\r\n        { time: new Date('2021-01-01T12:00:00'), status: 1 },\r\n        { time: new Date('2021-01-01T15:00:00'), status: 0 }\r\n      ]\r\n    }\r\n\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "RoomStatusData[]",
                    "optional": false,
                    "description": "",
                    "line": 120
                },
                {
                    "name": "chartParams",
                    "defaultValue": "{\r\n    svg: {\r\n      width: 800,\r\n      height: 200,\r\n      margin: { top: 20, right: 30, bottom: 30, left: 50 }\r\n    },\r\n    row: {\r\n      height: 41,\r\n      evenRowFillColor: '#ebe9e6',\r\n      oddRowFillColor: '#d4d2cf',\r\n      padding: {\r\n        top: 8,\r\n        right: 12,\r\n        bottom: 8,\r\n        left: 12\r\n      }\r\n    },\r\n    bar: {\r\n      height: 24,\r\n      colors: {\r\n        '0': 'green',\r\n        '1': 'yellow',\r\n        '2': 'red'\r\n      },\r\n      hoverColors: {\r\n        '0': 'lightgreen',\r\n        '1': 'lightyellow',\r\n        '2': 'lightred'\r\n      }\r\n    }\r\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 88
                },
                {
                    "name": "svg",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "createBars",
                    "args": [
                        {
                            "name": "data",
                            "type": "RoomStatusData[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 58,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "RoomStatusData[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "createSvg",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 48,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "dataPrep",
                    "args": [
                        {
                            "name": "points",
                            "type": "StatusPoint[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "minTime",
                            "type": "Date",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "maxTime",
                            "type": "Date",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "points",
                            "type": "StatusPoint[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "minTime",
                            "type": "Date",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "maxTime",
                            "type": "Date",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport * as d3 from 'd3';\r\n\r\ninterface StatusPoint {\r\n  time: Date;\r\n  status: number;\r\n}\r\n\r\ninterface RoomStatusData {\r\n  roomName: string;\r\n  statusPoints: StatusPoint[];\r\n}\r\n\r\n@Component({\r\n  selector: 'app-timeline-chart-next',\r\n  templateUrl: './timeline-chart-next.component.html',\r\n  styleUrls: ['./timeline-chart-next.component.css']\r\n})\r\nexport class TimelineChartNextComponent implements OnInit {\r\n  constructor() {}\r\n\r\n  private svg: any;\r\n\r\n  ngOnInit(): void {\r\n    this.createSvg();\r\n    this.createBars(this.chartData);\r\n  }\r\n\r\n  private dataPrep(points:StatusPoint[], minTime:Date, maxTime:Date) {\r\n\r\n    points.sort((a, b) => new Date(a.time).getTime() - new Date(b.time).getTime());\r\n\r\n    if(points[0].time !== minTime) {\r\n        points.unshift({time: minTime, status: points[0].status})\r\n    }\r\n    if(points[points.length - 1].time !== maxTime) {\r\n        points.push({time: maxTime, status: points[points.length - 1].status})\r\n    }\r\n    const enhancedPoints = [];\r\n    for(let i=0; i<points.length-1; i++) {\r\n      const duration = points[i+1].time.getTime() - points[i].time.getTime();\r\n      const enhancedPoint = {...points[i], duration};\r\n      enhancedPoints.push(enhancedPoint);\r\n    }\r\n    return enhancedPoints.slice(0, -1);\r\n  }\r\n\r\n  private createSvg(): void {\r\n    const svgParams = this.chartParams.svg;\r\n    this.svg = d3.select(\"figure#timelineChart\")\r\n      .append(\"svg\")\r\n      .attr(\"width\", svgParams.width + svgParams.margin.left + svgParams.margin.right)\r\n      .attr(\"height\", svgParams.height + svgParams.margin.top + svgParams.margin.bottom)\r\n      .append(\"g\")\r\n      .attr(\"transform\", \"translate(\" + this.chartParams.svg.margin.left+ \",\" + svgParams.margin.top + \")\");\r\n  }\r\n\r\n  private createBars(data: RoomStatusData[]): void {\r\n    const minTime = d3.min(data.flatMap((d) => d.statusPoints), (d) => new Date(d.time)) || new Date();\r\n    const maxTime = d3.max(data.flatMap((d) => d.statusPoints), (d) => new Date(d.time)) || new Date();\r\n\r\n      // difference between minTime and maxTime in milliseconds\r\n    const timeRange = maxTime.getTime() - minTime.getTime();\r\n\r\n    const preparedData = data.map((d) => ({\r\n      roomName: d.roomName, \r\n      statusPoints: this.dataPrep(d.statusPoints, minTime, maxTime)\r\n    }));\r\n\r\n    // xAxis setup\r\n    const xScale = \r\n      d3.scaleTime().range([0, this.chartParams.svg.width])\r\n        .domain(\r\n          data.flatMap((d) => d.statusPoints).map(x=>x.time)\r\n        );\r\n    const xAxis = d3.axisBottom(xScale);\r\n    this.svg.append(\"g\").attr(\"transform\", `translate(0,${this.chartParams.svg.height})`).call(xAxis);\r\n\r\n    // yAxis setup\r\n    const yScale = d3.scaleBand().range([0, this.chartParams.svg.height]);\r\n    const yAxis = d3.axisLeft(yScale);\r\n    yScale.domain(data.map((d) => d.roomName));\r\n    this.svg.append(\"g\").call(yAxis);\r\n\r\n\r\n  }\r\n\r\n  chartParams = {\r\n    svg: {\r\n      width: 800,\r\n      height: 200,\r\n      margin: { top: 20, right: 30, bottom: 30, left: 50 }\r\n    },\r\n    row: {\r\n      height: 41,\r\n      evenRowFillColor: '#ebe9e6',\r\n      oddRowFillColor: '#d4d2cf',\r\n      padding: {\r\n        top: 8,\r\n        right: 12,\r\n        bottom: 8,\r\n        left: 12\r\n      }\r\n    },\r\n    bar: {\r\n      height: 24,\r\n      colors: {\r\n        '0': 'green',\r\n        '1': 'yellow',\r\n        '2': 'red'\r\n      },\r\n      hoverColors: {\r\n        '0': 'lightgreen',\r\n        '1': 'lightyellow',\r\n        '2': 'lightred'\r\n      }\r\n    }\r\n  };\r\n\r\n  chartData: RoomStatusData[] = [\r\n    {\r\n      roomName: 'Room 1',\r\n      statusPoints: [\r\n        { time: new Date('2021-01-01T09:00:00'), status: 0 },\r\n        { time: new Date('2021-01-01T12:00:00'), status: 1 },\r\n        { time: new Date('2021-01-01T15:00:00'), status: 2 }\r\n      ]\r\n    },\r\n    {\r\n      roomName: 'Room 2',\r\n      statusPoints: [\r\n        { time: new Date('2021-01-01T09:00:00'), status: 2 },\r\n        { time: new Date('2021-01-01T12:00:00'), status: 1 },\r\n        { time: new Date('2021-01-01T15:00:00'), status: 0 }\r\n      ]\r\n    }\r\n\r\n  ];\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n// const minTime = d3.min(data.flatMap((d) => d.statusPoints), (d) => new Date(d.time));\r\n// const maxTime = d3.max(data.flatMap((d) => d.statusPoints), (d) => new Date(d.time));\r\n// const timeRange = maxTime - minTime;\r\n\r\n// for(const room of data) {\r\n//   dataPrep(room.statusPoints, minTime, maxTime);\r\n// }\r\n\r\n// const margin = { top: 20, right: 30, bottom: 30, left: 50 };\r\n// const width = 800 - margin.left - margin.right;\r\n// const height = 400 - margin.top - margin.bottom;\r\n\r\n// const svg = d3\r\n//   .select(\"#chart\")\r\n//   .attr(\"width\", width + margin.left + margin.right)\r\n//   .attr(\"height\", height + margin.top + margin.bottom)\r\n//   .append(\"g\")\r\n//   .attr(\"transform\", `translate(${margin.left},${margin.top})`);\r\n\r\n// const scalePercent = (x) => width * x / timeRange;\r\n// const xScale = d3.scaleTime().range([0, width]);\r\n// const yScale = d3.scaleBand().range([0, height]);\r\n\r\n// const xAxis = d3.axisBottom(xScale);\r\n// const yAxis = d3.axisLeft(yScale);\r\n\r\n// const colorScale = d3\r\n//   .scaleOrdinal()\r\n//   .domain([0, 1, 2])\r\n//   .range([\"green\", \"yellow\", \"red\"]);\r\n\r\n// const rowFill0 = \"#ebe9e6\";\r\n// const rowFill1 = \"#d4d2cf\";\r\n// const rowHeight = 41;\r\n// const barHeight = 24;\r\n\r\n// xScale.domain(\r\n//   d3.extent(data.flatMap((d) => d.statusPoints), (d) => new Date(d.time))\r\n// );\r\n// yScale.domain(data.map((d) => d.roomName));\r\n\r\n// svg.append(\"g\").attr(\"transform\", `translate(0,${height})`).call(xAxis);\r\n// svg.append(\"g\").call(yAxis);\r\n\r\n\r\n\r\n// svg\r\n// .selectAll(\".bar-group\")\r\n// .data(data)\r\n// .enter()\r\n//     .append(\"g\")\r\n//         .attr(\"class\", \"bar-group\")\r\n//         .attr(\"transform\", (d) => `translate(0,${yScale(d.roomName) + 2 * margin.top + margin.bottom})`)\r\n//         .append(\"rect\")\r\n//             .attr(\"x\", 0)\r\n//             .attr(\"y\", 0)\r\n//             .attr(\"width\", 400)\r\n//             .attr(\"height\", 20)\r\n//             .attr(\"fill\", \"green\")\r\n//             .attr(\"pointer-events\", \"all\")\r\n//             .on(\"mousemove\", (event) => {\r\n//                 const [x, y] = d3.pointer(event);\r\n//                 const date = xScale.invert(x);\r\n//                 const room = yScale.domain()[Math.floor(y / yScale.step())];\r\n\r\n//                 const status = data.find((d) => d.roomName === room).statusPoints.find(\r\n//                     (d) => new Date(d.time) <= date && new Date(d.time) + 1000 > date\r\n//                 ).status;\r\n\r\n//                 console.log(`Room: ${room}, Status: ${status}`);\r\n//             })\r\n//         .selectAll(\".bar\")\r\n//         .data((d) => d.statusPoints)\r\n//         .enter()\r\n//         .append(\"rect\")\r\n//             .attr(\"class\", \"bar\")\r\n//             .attr(\"x\", (p) => xScale(new Date(p.time)))  //(d) => xScale(new Date(d.time))\r\n//             .attr(\"y\", 0)\r\n//             .attr(\"width\", (p) => scalePercent(p.duration))\r\n//             .attr(\"height\", 20)\r\n//             .attr(\"fill\", (p) => colorScale(p.status))\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./timeline-chart-next.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 19
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p>timeline-chart-next works!</p>\r\n<figure id=\"timelineChart\"></figure>\r\n\r\n<!-- <svg id=\"timelineChart\" [width]=\"chartParams.svg.width\" [height]=\"chartParams.svg.height\">\r\n    <g transform=\"translate({{chartParams.svg.margin.left}},{{{chartParams.svg.margin.top}})\"></g>\r\n\r\n</svg> -->\r\n\r\n"
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "id": "module-AppModule-6b5a47e486412fda2da65fc79fdf200bc5dc6df1b8d7c5b5f8fb5b14c610b7c66515a9cf890269d7e68443e2fb1bafc30b723c02173f558100426ca027ce1d94",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { OAuthModule, OAuthStorage } from 'angular-oauth2-oidc';\r\n\r\nimport { AlmPiService } from './api/alm-pi.service';\r\nimport { ApfMonitoredRoomsChartComponent } from './apf-monitored-rooms-chart/apf-monitored-rooms-chart.component';\r\nimport { ApfPortfolioAllDashboardComponent } from './apf-portfolio-all-dashboard/apf-portfolio-all-dashboard.component';\r\nimport { ApfPortfolioMapComponent } from './apf-portfolio-all-map/apf-portfolio-all-map.component';\r\nimport { ApfTimelineChartComponent } from './apf-timeline-chart/apf-timeline-chart.component';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { ChartDemoComponent } from './chart-demo/chart-demo.component';\r\nimport { ContactUsDialogComponent } from './contact-us-dialog/contact-us-dialog.component';\r\nimport { DataService } from 'src/app/api/data.service';\r\nimport { ErrorLogDashboardComponent } from './error-log-dashboard/error-log-dashboard.component';\r\nimport { FacilityAllMapComponent } from './facility-all-map/facility-all-map.component';\r\nimport { FacilityDescriptionComponent } from './facility-description/facility-description.component';\r\nimport { FacilityInfoPageComponent } from './facility-info-page/facility-info-page.component';\r\nimport { FacilityLayoutComponent } from './facility-layout/facility-layout.component';\r\nimport { FacilityReportsComponent } from './facility-reports/facility-reports.component';\r\nimport { FacilityTimelineDashboardComponent } from './facility-timeline-dashboard/facility-timeline-dashboard.component';\r\nimport { FcisResourcesComponent } from './fcis-resources/fcis-resources.component';\r\nimport { FormulaHeaderComponent } from './formula-header/formula-header.component';\r\nimport { GoogleChartsModule } from 'angular-google-charts';\r\nimport { GsfGrowthByClassificationChartComponent } from './gsf-growth-by-classification-chart/gsf-growth-by-classification-chart.component';\r\nimport { GsfPieChartComponent } from './gsf-pie-chart/gsf-pie-chart.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { NavMenuComponent } from './nav-menu/nav-menu.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { NihLogoHeaderComponent } from './nih-logo-header/nih-logo-header.component';\r\nimport { PiDataFilterToolbarComponent } from './pi-data-filter-toolbar/pi-data-filter-toolbar.component';\r\nimport {PiWebApiService} from 'src/app/api/pi-webapi.service';\r\nimport { PiWebapiDemoComponent } from './pi-webapi-demo/pi-webapi-demo.component';\r\nimport { PortfolioDashboardComponent } from './portfolio-dashboard/portfolio-dashboard.component';\r\nimport { RoomDataTableComponent } from './room-data-table/room-data-table.component';\r\nimport { RoomInfoDisplayComponent } from './room-info-display/room-info-display.component';\r\nimport { RouterModule } from '@angular/router';\r\nimport { SafeUrlPipe } from './safe-url.pipe'\r\nimport { SanitizedHtmlPipe } from './sanitized-html.pipe';\r\nimport { SopsComponent } from './sops/sops.component';\r\nimport { StaticContentContainerComponent } from './static-content-container/static-content-container.component';\r\nimport { StaticContentEditorComponent } from './static-content-editor/static-content-editor.component';\r\nimport { StaticContentPageComponent } from './static-content-page/static-content-page.component';\r\nimport { SvgStatusMapComponent } from './svg-status-map/svg-status-map.component';\r\nimport { ThirdPartyComponentsModule } from './3rd-party-components/3rd-party-components.module';\r\nimport { appRoutes } from './routes';\r\nimport { UserService } from './shared/auth/user.service';\r\nimport { TimelineChartNextComponent } from './timeline-chart-next/timeline-chart-next.component';\r\n\r\n// import { ApfPortfolioIcDashboardComponent } from './apf-portfolio-ic-dashboard/apf-portfolio-ic-dashboard.component';\r\n// import { DataService } from './data.service';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavMenuComponent,\r\n    HomeComponent,\r\n    NihLogoHeaderComponent,\r\n    FormulaHeaderComponent,\r\n    ApfPortfolioMapComponent,\r\n    GsfPieChartComponent,\r\n    ChartDemoComponent,\r\n    ApfPortfolioAllDashboardComponent,\r\n    GsfGrowthByClassificationChartComponent,\r\n    ApfTimelineChartComponent,\r\n    ApfMonitoredRoomsChartComponent,\r\n    PiDataFilterToolbarComponent,\r\n    SanitizedHtmlPipe,\r\n    SafeUrlPipe,\r\n    StaticContentContainerComponent,\r\n    SvgStatusMapComponent,\r\n    StaticContentEditorComponent,\r\n    RoomInfoDisplayComponent,\r\n    RoomDataTableComponent,\r\n    ErrorLogDashboardComponent,\r\n    FacilityInfoPageComponent,\r\n    ContactUsDialogComponent,\r\n    StaticContentPageComponent,\r\n    FacilityLayoutComponent,\r\n    FacilityDescriptionComponent,\r\n    FacilityAllMapComponent,\r\n    FcisResourcesComponent,\r\n    FacilityTimelineDashboardComponent,\r\n    PortfolioDashboardComponent,\r\n    SopsComponent,\r\n    PiWebapiDemoComponent,\r\n    FacilityReportsComponent,\r\n    TimelineChartNextComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule.withServerTransition({ appId: 'ng-cli-universal' }),\r\n    OAuthModule.forRoot(),\r\n    HttpClientModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    GoogleChartsModule,\r\n    ThirdPartyComponentsModule,\r\n    RouterModule.forRoot(appRoutes)\r\n  ],\r\n  providers: [\r\n    DataService,PiWebApiService, AlmPiService, UserService\r\n  // { provide: OAuthStorage, useValue: localStorage }\r\n],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": [
                        {
                            "name": "AlmPiService"
                        },
                        {
                            "name": "DataService"
                        },
                        {
                            "name": "PiWebApiService"
                        },
                        {
                            "name": "UserService"
                        }
                    ]
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ApfMonitoredRoomsChartComponent"
                        },
                        {
                            "name": "ApfPortfolioAllDashboardComponent"
                        },
                        {
                            "name": "ApfPortfolioMapComponent"
                        },
                        {
                            "name": "ApfTimelineChartComponent"
                        },
                        {
                            "name": "AppComponent"
                        },
                        {
                            "name": "ChartDemoComponent"
                        },
                        {
                            "name": "ContactUsDialogComponent"
                        },
                        {
                            "name": "ErrorLogDashboardComponent"
                        },
                        {
                            "name": "FacilityAllMapComponent"
                        },
                        {
                            "name": "FacilityDescriptionComponent"
                        },
                        {
                            "name": "FacilityInfoPageComponent"
                        },
                        {
                            "name": "FacilityLayoutComponent"
                        },
                        {
                            "name": "FacilityReportsComponent"
                        },
                        {
                            "name": "FacilityTimelineDashboardComponent"
                        },
                        {
                            "name": "FcisResourcesComponent"
                        },
                        {
                            "name": "FormulaHeaderComponent"
                        },
                        {
                            "name": "GsfGrowthByClassificationChartComponent"
                        },
                        {
                            "name": "GsfPieChartComponent"
                        },
                        {
                            "name": "HomeComponent"
                        },
                        {
                            "name": "NavMenuComponent"
                        },
                        {
                            "name": "NihLogoHeaderComponent"
                        },
                        {
                            "name": "PiDataFilterToolbarComponent"
                        },
                        {
                            "name": "PiWebapiDemoComponent"
                        },
                        {
                            "name": "PortfolioDashboardComponent"
                        },
                        {
                            "name": "RoomDataTableComponent"
                        },
                        {
                            "name": "RoomInfoDisplayComponent"
                        },
                        {
                            "name": "SafeUrlPipe"
                        },
                        {
                            "name": "SanitizedHtmlPipe"
                        },
                        {
                            "name": "SopsComponent"
                        },
                        {
                            "name": "StaticContentContainerComponent"
                        },
                        {
                            "name": "StaticContentEditorComponent"
                        },
                        {
                            "name": "StaticContentPageComponent"
                        },
                        {
                            "name": "SvgStatusMapComponent"
                        },
                        {
                            "name": "TimelineChartNextComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ThirdPartyComponentsModule",
            "id": "module-ThirdPartyComponentsModule-258f011c5e4b17ec74d6cc677ce6e316a53832f0725cdc122ba071b4c41a6a9891b4326d47b4648b0b65b7919220987fbe19100eec0e1cf4b32f75b37c35db8c",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/3rd-party-components/3rd-party-components.module.ts",
            "methods": [],
            "sourceCode": "import { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { ButtonModule } from 'primeng/button';\r\nimport { CalendarModule } from 'primeng/calendar';\r\nimport { DialogModule } from 'primeng/dialog';\r\nimport { DropdownModule } from 'primeng/dropdown';\r\nimport { DynamicDialogModule } from 'primeng/dynamicdialog';\r\nimport { EditorModule } from '@tinymce/tinymce-angular';\r\nimport { GalleriaModule } from 'primeng/galleria';\r\nimport { ImageModule } from 'primeng/image';\r\nimport { MenubarModule } from 'primeng/menubar';\r\nimport { NgModule } from '@angular/core';\r\nimport { OverlayPanelModule } from 'primeng/overlaypanel';\r\nimport { ProgressSpinnerModule } from 'primeng/progressspinner';\r\nimport { TabMenuModule } from 'primeng/tabmenu';\r\nimport { TableModule } from 'primeng/table';\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [],\r\n  exports: [\r\n    BrowserAnimationsModule,\r\n    ButtonModule,\r\n    CalendarModule,\r\n    DropdownModule,\r\n    DialogModule,\r\n    DynamicDialogModule,\r\n    EditorModule,\r\n    GalleriaModule,\r\n    ImageModule,\r\n    MenubarModule,\r\n    OverlayPanelModule,\r\n    ProgressSpinnerModule,\r\n    TableModule,\r\n    TabMenuModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: []\r\n})\r\nexport class ThirdPartyComponentsModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "$",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/apf-portfolio-all-map/apf-portfolio-all-map.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "any"
            },
            {
                "name": "$",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/static-content-container/static-content-container.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "any"
            },
            {
                "name": "authCodeFlowConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/auth.config.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "AuthConfig",
                "defaultValue": "{\r\n  issuer: environment.oidcIssuer, //'https://stsstg.nih.gov', \r\n  redirectUri: environment.redirectUri, //window.location.origin + '/index.html',\r\n  clientId: environment.oidcClientId,\r\n  responseType: 'code',\r\n  scope: 'openid profile email',\r\n  showDebugInformation: false,\r\n  timeoutFactor: 0.01,\r\n  checkOrigin: false,\r\n  strictDiscoveryDocumentValidation: false,\r\n  dummyClientSecret: environment.oidcDummySecret,\r\n\r\n}"
            },
            {
                "name": "bootstrap",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/apf-portfolio-all-map/apf-portfolio-all-map.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "any"
            },
            {
                "name": "bootstrap",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/apf-timeline-chart/apf-timeline-chart.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "any"
            },
            {
                "name": "bootstrap",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/svg-status-map/svg-status-map.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "any"
            },
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "dataServiceMock",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/nav-menu/nav-menu.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n    contactUs: ()=>{}\r\n}"
            },
            {
                "name": "defaultSvgMap",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/api/models/svgMap.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "SvgMap",
                "defaultValue": "{\r\n  id: 0,\r\n  backgroundSvg: '',\r\n  name: '',\r\n  svgMapPins: [],\r\n  svgMapArrows: [],\r\n  viewbox: '0 0 0 0',\r\n  defs: '',\r\n  facilityId: 0\r\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  production: true,\r\n  siteRootUrl:'https://orfd-cogen.ors.nih.gov/FPV2',\r\n  apiRootUrl: 'https://orfd-cogen.ors.nih.gov/FPV2/api',\r\n  attachmentRootUrl: 'https://dtrdata.orf.od.nih.gov/FCISPortal/attachmentsGSS',\r\n\r\n  facilityReportsBaseUrl: 'https://orfd-cogen.ors.nih.gov/Facility_Reports',\r\n\r\n\r\n  dbWebId: 'D0L8A_6d2dm0SBrg5RJa_Z7QOqMnT3pl40GxHekWf2e50gT1JGLUNPR0VOQUZcREFUQUJBU0Ux',\r\n  afServer: 'https://orf-cogenaf.ors.nih.gov',\r\n  baseServer: 'https://orfd-cogen.ors.nih.gov',\r\n  piServer: 'ORF-COGENAF',\r\n  baseHref: '/cup',\r\n  piWebApi: 'https://orf-cogenaf.ors.nih.gov/piwebapi',\r\n  piWebApiCredentialMode: 'include',\r\n  oidcIssuer: 'https://stsstg.nih.gov',\r\n  oidcClientId: '556a5a98-f1cd-4b98-aade-19f8bbbee22f',\r\n  oidcDummySecret:'c6df1e86-4b9e-4b3d-8008-300c3802fc4b',\r\n  redirectUri:'https://orfd-cogen.ors.nih.gov/FPV2'\r\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  production: false,\r\n  siteRootUrl: 'https://localhost:44420',\r\n  apiRootUrl: 'https://localhost:44420/api',\r\n  attachmentRootUrl: 'https://dtrdata.orf.od.nih.gov/FCISPortal/attachmentsGSS',\r\n\r\n  facilityReportsBaseUrl: 'https://orfd-cogen.ors.nih.gov/Facility_Reports',\r\n\r\n\r\n  dbWebId: 'D0L8A_6d2dm0SBrg5RJa_Z7QOqMnT3pl40GxHekWf2e50gT1JGLUNPR0VOQUZcREFUQUJBU0Ux',\r\n  afServer: 'https://orf-cogenaf.ors.nih.gov',\r\n  baseServer: 'https://orfd-cogen.ors.nih.gov',\r\n  piServer: 'ORF-COGENAF',\r\n  baseHref: '/cup',\r\n  piWebApi: 'https://orf-cogenaf.ors.nih.gov/piwebapi',\r\n  piWebApiCredentialMode: 'include',\r\n  oidcIssuer: 'https://stsstg.nih.gov',\r\n  oidcClientId: '556a5a98-f1cd-4b98-aade-19f8bbbee22f',\r\n  oidcDummySecret:'c6df1e86-4b9e-4b3d-8008-300c3802fc4b',\r\n  redirectUri:'https://localhost:44420'\r\n}"
            },
            {
                "name": "Large",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/contact-us-dialog/contact-us-dialog.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "() => ({\r\n  props: {\r\n    initialContent: 'Hello World'\r\n  }\r\n})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/facility-description/facility-description.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "() => ({\r\n  props: {\r\n    initialContent: 'Hello World'\r\n  }\r\n})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/nav-menu/nav-menu.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "() => ({\r\n  props: {\r\n    initialContent: 'Hello World'\r\n  }\r\n})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pi-data-filter-toolbar/pi-data-filter-toolbar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "() => ({\r\n  props: {\r\n    facilities: [{ name: 'One', value: 1 }]\r\n  }\r\n})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/static-content-editor/static-content-editor.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "() => ({\r\n  props: {\r\n    initialContent: 'Hello World'\r\n  }\r\n})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/timeline-chart-next/timeline-chart-next.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "() => ({\r\n  props: {\r\n    facilities: [{ name: 'One', value: 1 }]\r\n  }\r\n})"
            },
            {
                "name": "providers",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/main.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[{ provide: 'BASE_URL', useFactory: getBaseUrl, deps: [] }]"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Small",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Button>",
                "defaultValue": "(args: Button) => ({\r\n  props: args\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Header>",
                "defaultValue": "(args: Header) => ({\r\n  props: args\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Page>",
                "defaultValue": "(args: Page) => ({\r\n  props: args\r\n})"
            }
        ],
        "functions": [
            {
                "name": "getBaseUrl",
                "file": "src/main.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": []
            }
        ],
        "typealiases": [
            {
                "name": "apfLimitsLookup",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/facility-timeline-dashboard/facility-timeline-dashboard.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 181
            },
            {
                "name": "filterFormData",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/pi-data-filter-toolbar/pi-data-filter-toolbar.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 181
            },
            {
                "name": "locationStatusLookup",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/facility-timeline-dashboard/facility-timeline-dashboard.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 181
            },
            {
                "name": "roomInfoLookup",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/facility-timeline-dashboard/facility-timeline-dashboard.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 181
            }
        ],
        "enumerations": [],
        "groupedVariables": {
            "src/app/apf-portfolio-all-map/apf-portfolio-all-map.component.ts": [
                {
                    "name": "$",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/apf-portfolio-all-map/apf-portfolio-all-map.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any"
                },
                {
                    "name": "bootstrap",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/apf-portfolio-all-map/apf-portfolio-all-map.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any"
                }
            ],
            "src/app/static-content-container/static-content-container.component.ts": [
                {
                    "name": "$",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/static-content-container/static-content-container.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any"
                }
            ],
            "src/app/auth.config.ts": [
                {
                    "name": "authCodeFlowConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/auth.config.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AuthConfig",
                    "defaultValue": "{\r\n  issuer: environment.oidcIssuer, //'https://stsstg.nih.gov', \r\n  redirectUri: environment.redirectUri, //window.location.origin + '/index.html',\r\n  clientId: environment.oidcClientId,\r\n  responseType: 'code',\r\n  scope: 'openid profile email',\r\n  showDebugInformation: false,\r\n  timeoutFactor: 0.01,\r\n  checkOrigin: false,\r\n  strictDiscoveryDocumentValidation: false,\r\n  dummyClientSecret: environment.oidcDummySecret,\r\n\r\n}"
                }
            ],
            "src/app/apf-timeline-chart/apf-timeline-chart.component.ts": [
                {
                    "name": "bootstrap",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/apf-timeline-chart/apf-timeline-chart.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any"
                }
            ],
            "src/app/svg-status-map/svg-status-map.component.ts": [
                {
                    "name": "bootstrap",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/svg-status-map/svg-status-map.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any"
                }
            ],
            "src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type"
                }
            ],
            "src/app/nav-menu/nav-menu.stories.ts": [
                {
                    "name": "dataServiceMock",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/nav-menu/nav-menu.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n    contactUs: ()=>{}\r\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/nav-menu/nav-menu.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "() => ({\r\n  props: {\r\n    initialContent: 'Hello World'\r\n  }\r\n})"
                }
            ],
            "src/app/api/models/svgMap.ts": [
                {
                    "name": "defaultSvgMap",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/api/models/svgMap.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SvgMap",
                    "defaultValue": "{\r\n  id: 0,\r\n  backgroundSvg: '',\r\n  name: '',\r\n  svgMapPins: [],\r\n  svgMapArrows: [],\r\n  viewbox: '0 0 0 0',\r\n  defs: '',\r\n  facilityId: 0\r\n}"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  production: true,\r\n  siteRootUrl:'https://orfd-cogen.ors.nih.gov/FPV2',\r\n  apiRootUrl: 'https://orfd-cogen.ors.nih.gov/FPV2/api',\r\n  attachmentRootUrl: 'https://dtrdata.orf.od.nih.gov/FCISPortal/attachmentsGSS',\r\n\r\n  facilityReportsBaseUrl: 'https://orfd-cogen.ors.nih.gov/Facility_Reports',\r\n\r\n\r\n  dbWebId: 'D0L8A_6d2dm0SBrg5RJa_Z7QOqMnT3pl40GxHekWf2e50gT1JGLUNPR0VOQUZcREFUQUJBU0Ux',\r\n  afServer: 'https://orf-cogenaf.ors.nih.gov',\r\n  baseServer: 'https://orfd-cogen.ors.nih.gov',\r\n  piServer: 'ORF-COGENAF',\r\n  baseHref: '/cup',\r\n  piWebApi: 'https://orf-cogenaf.ors.nih.gov/piwebapi',\r\n  piWebApiCredentialMode: 'include',\r\n  oidcIssuer: 'https://stsstg.nih.gov',\r\n  oidcClientId: '556a5a98-f1cd-4b98-aade-19f8bbbee22f',\r\n  oidcDummySecret:'c6df1e86-4b9e-4b3d-8008-300c3802fc4b',\r\n  redirectUri:'https://orfd-cogen.ors.nih.gov/FPV2'\r\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  production: false,\r\n  siteRootUrl: 'https://localhost:44420',\r\n  apiRootUrl: 'https://localhost:44420/api',\r\n  attachmentRootUrl: 'https://dtrdata.orf.od.nih.gov/FCISPortal/attachmentsGSS',\r\n\r\n  facilityReportsBaseUrl: 'https://orfd-cogen.ors.nih.gov/Facility_Reports',\r\n\r\n\r\n  dbWebId: 'D0L8A_6d2dm0SBrg5RJa_Z7QOqMnT3pl40GxHekWf2e50gT1JGLUNPR0VOQUZcREFUQUJBU0Ux',\r\n  afServer: 'https://orf-cogenaf.ors.nih.gov',\r\n  baseServer: 'https://orfd-cogen.ors.nih.gov',\r\n  piServer: 'ORF-COGENAF',\r\n  baseHref: '/cup',\r\n  piWebApi: 'https://orf-cogenaf.ors.nih.gov/piwebapi',\r\n  piWebApiCredentialMode: 'include',\r\n  oidcIssuer: 'https://stsstg.nih.gov',\r\n  oidcClientId: '556a5a98-f1cd-4b98-aade-19f8bbbee22f',\r\n  oidcDummySecret:'c6df1e86-4b9e-4b3d-8008-300c3802fc4b',\r\n  redirectUri:'https://localhost:44420'\r\n}"
                }
            ],
            "src/stories/Button.stories.ts": [
                {
                    "name": "Large",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Small",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Button>",
                    "defaultValue": "(args: Button) => ({\r\n  props: args\r\n})"
                }
            ],
            "src/stories/Header.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Header>",
                    "defaultValue": "(args: Header) => ({\r\n  props: args\r\n})"
                }
            ],
            "src/stories/Page.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Page>",
                    "defaultValue": "(args: Page) => ({\r\n  props: args\r\n})"
                }
            ],
            "src/app/contact-us-dialog/contact-us-dialog.stories.ts": [
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/contact-us-dialog/contact-us-dialog.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "() => ({\r\n  props: {\r\n    initialContent: 'Hello World'\r\n  }\r\n})"
                }
            ],
            "src/app/facility-description/facility-description.stories.ts": [
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/facility-description/facility-description.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "() => ({\r\n  props: {\r\n    initialContent: 'Hello World'\r\n  }\r\n})"
                }
            ],
            "src/app/pi-data-filter-toolbar/pi-data-filter-toolbar.stories.ts": [
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pi-data-filter-toolbar/pi-data-filter-toolbar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "() => ({\r\n  props: {\r\n    facilities: [{ name: 'One', value: 1 }]\r\n  }\r\n})"
                }
            ],
            "src/app/static-content-editor/static-content-editor.stories.ts": [
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/static-content-editor/static-content-editor.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "() => ({\r\n  props: {\r\n    initialContent: 'Hello World'\r\n  }\r\n})"
                }
            ],
            "src/app/timeline-chart-next/timeline-chart-next.stories.ts": [
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/timeline-chart-next/timeline-chart-next.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "() => ({\r\n  props: {\r\n    facilities: [{ name: 'One', value: 1 }]\r\n  }\r\n})"
                }
            ],
            "src/main.ts": [
                {
                    "name": "providers",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/main.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[{ provide: 'BASE_URL', useFactory: getBaseUrl, deps: [] }]"
                }
            ]
        },
        "groupedFunctions": {
            "src/main.ts": [
                {
                    "name": "getBaseUrl",
                    "file": "src/main.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": []
                }
            ]
        },
        "groupedEnumerations": {},
        "groupedTypeAliases": {
            "src/app/facility-timeline-dashboard/facility-timeline-dashboard.service.ts": [
                {
                    "name": "apfLimitsLookup",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/facility-timeline-dashboard/facility-timeline-dashboard.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 181
                },
                {
                    "name": "locationStatusLookup",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/facility-timeline-dashboard/facility-timeline-dashboard.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 181
                },
                {
                    "name": "roomInfoLookup",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/facility-timeline-dashboard/facility-timeline-dashboard.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 181
                }
            ],
            "src/app/pi-data-filter-toolbar/pi-data-filter-toolbar.component.ts": [
                {
                    "name": "filterFormData",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/pi-data-filter-toolbar/pi-data-filter-toolbar.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 181
                }
            ]
        }
    },
    "routes": [],
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "src/app/apf-monitored-rooms-chart/apf-monitored-rooms-chart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ApfMonitoredRoomsChartComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/apf-portfolio-all-dashboard/apf-portfolio-all-dashboard.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ApfPortfolioAllDashboardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/apf-portfolio-all-dashboard/apf-portfolio-all-dashboard.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ApfPortfolioAllDashboardService",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/apf-portfolio-all-map/apf-portfolio-all-map.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ApfPortfolioMapComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/apf-portfolio-all-map/apf-portfolio-all-map.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "$",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/apf-portfolio-all-map/apf-portfolio-all-map.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "bootstrap",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/apf-timeline-chart/apf-timeline-chart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ApfTimelineChartComponent",
                "coveragePercent": 0,
                "coverageCount": "0/20",
                "status": "low"
            },
            {
                "filePath": "src/app/apf-timeline-chart/apf-timeline-chart.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "bootstrap",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/api/alm-pi.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "AlmPiService",
                "coveragePercent": 7,
                "coverageCount": "1/13",
                "status": "low"
            },
            {
                "filePath": "src/app/api/data.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "DataService",
                "coveragePercent": 0,
                "coverageCount": "0/27",
                "status": "low"
            },
            {
                "filePath": "src/app/api/models/attachment.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Attachment",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/api/models/attachment.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AttachmentGroup",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/api/models/contactUsMessage.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ContactUsMessage",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/api/models/errorLog.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ErrorLog",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/api/models/facility.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Facility",
                "coveragePercent": 0,
                "coverageCount": "0/17",
                "status": "low"
            },
            {
                "filePath": "src/app/api/models/gsfChart.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "FacilityGsf",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/api/models/gsfChart.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "GsfGrowth",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/api/models/gsfChart.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ICGsf",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/api/models/role.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Role",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/api/models/room.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Room",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/api/models/roomParameter.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "RoomParameter",
                "coveragePercent": 0,
                "coverageCount": "0/17",
                "status": "low"
            },
            {
                "filePath": "src/app/api/models/svgMap.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "SvgMap",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/api/models/svgMap.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "SvgMapArrow",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/api/models/svgMap.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "SvgMapPin",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/api/models/svgMap.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "defaultSvgMap",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/api/models/timeline.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "FacilityTimeSeriesData",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/api/models/timeline.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "LocationCurrentStatus",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/api/models/timeline.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "LocationQuery",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/api/models/timeline.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "LocationTimeSeriesData",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/api/models/timeline.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "RoomTimeSeriesData",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/api/models/timeline.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "TimeSeriesPoint",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/api/pi-webapi.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "PiWebApiService",
                "coveragePercent": 0,
                "coverageCount": "0/18",
                "status": "low"
            },
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/auth.config.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "authCodeFlowConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/chart-demo/chart-demo.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ChartDemoComponent",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "src/app/contact-us-dialog/contact-us-dialog.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ContactUsDialogComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/contact-us-dialog/contact-us-dialog.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/error-log-dashboard/error-log-dashboard.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ErrorLogDashboardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/facility-all-map/facility-all-map.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FacilityAllMapComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/facility-description/facility-description.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FacilityDescriptionComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/facility-description/facility-description.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/facility-info-page/facility-info-page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FacilityInfoPageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "src/app/facility-info-page/facility-info-page.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "FacilityInfoPageService",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/facility-layout/facility-layout.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FacilityLayoutComponent",
                "coveragePercent": 0,
                "coverageCount": "0/21",
                "status": "low"
            },
            {
                "filePath": "src/app/facility-reports/facility-reports.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FacilityReportsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/facility-timeline-dashboard/facility-timeline-dashboard.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FacilityTimelineDashboardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/40",
                "status": "low"
            },
            {
                "filePath": "src/app/facility-timeline-dashboard/facility-timeline-dashboard.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "FacilityTimelineDashboardService",
                "coveragePercent": 0,
                "coverageCount": "0/24",
                "status": "low"
            },
            {
                "filePath": "src/app/facility-timeline-dashboard/facility-timeline-dashboard.service.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "PiDataFilter",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/facility-timeline-dashboard/facility-timeline-dashboard.service.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "RoomDisplayField",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/facility-timeline-dashboard/facility-timeline-dashboard.service.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "StatusPoint",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/facility-timeline-dashboard/facility-timeline-dashboard.service.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "TimelineChartData",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/facility-timeline-dashboard/facility-timeline-dashboard.service.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "TimelineChartDataPoint",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/fcis-resources/fcis-resources.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FcisResourcesComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/formula-header/formula-header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FormulaHeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/gsf-growth-by-classification-chart/gsf-growth-by-classification-chart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "GsfGrowthByClassificationChartComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/gsf-pie-chart/gsf-pie-chart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "GsfPieChartComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/home/home.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HomeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/nav-menu/nav-menu.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NavMenuComponent",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "src/app/nav-menu/nav-menu.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "dataServiceMock",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/nav-menu/nav-menu.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/nih-logo-header/nih-logo-header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NihLogoHeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/pi-data-filter-toolbar/pi-data-filter-toolbar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PiDataFilterToolbarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/16",
                "status": "low"
            },
            {
                "filePath": "src/app/pi-data-filter-toolbar/pi-data-filter-toolbar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pi-webapi-demo/pi-webapi-demo.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PiWebapiDemoComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/portfolio-dashboard/portfolio-dashboard.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PortfolioDashboardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/14",
                "status": "low"
            },
            {
                "filePath": "src/app/room-data-table/room-data-table.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RoomDataTableComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/room-info-display/room-info-display.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RoomInfoDisplayComponent",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "src/app/safe-url.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "SafeUrlPipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/sanitized-html.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "SanitizedHtmlPipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/auth/auth.guard.ts",
                "type": "guard",
                "linktype": "guard",
                "name": "AuthGuard",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/auth/user.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "UserService",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/auth/user.service.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "User",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/sops/sops.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SopsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/static-content-container/static-content-container.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "StaticContentContainerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/static-content-container/static-content-container.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "$",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/static-content-editor/static-content-editor.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "StaticContentEditorComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/static-content-editor/static-content-editor.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/static-content-page/static-content-page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "StaticContentPageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/svg-status-map/svg-status-map.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SvgStatusMapComponent",
                "coveragePercent": 0,
                "coverageCount": "0/17",
                "status": "low"
            },
            {
                "filePath": "src/app/svg-status-map/svg-status-map.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "PinHoverInfo",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/svg-status-map/svg-status-map.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "bootstrap",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/timeline-chart-next/timeline-chart-next.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TimelineChartNextComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/timeline-chart-next/timeline-chart-next.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "RoomStatusData",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/timeline-chart-next/timeline-chart-next.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "StatusPoint",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/timeline-chart-next/timeline-chart-next.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/main.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "getBaseUrl",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/main.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "providers",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Large",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Small",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/User.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "User",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 83,
                "coverageCount": "5/6",
                "status": "very-good"
            },
            {
                "filePath": "src/stories/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}